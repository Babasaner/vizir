"use strict";

(function () {
  var homeAbout = document.getElementById("home-about");
  var iframe = document.getElementById("iframe_about");

  if (iframe) {
    iframe = iframe.getElementsByTagName("iframe")[0];
  }

  if (homeAbout && iframe) {
    setIframeHeight();
    window.addEventListener("resize", setIframeHeight);
  }

  function setIframeHeight() {
    if (iframe) {
      var width = iframe.offsetWidth;
      iframe.style.height = width * 0.562 + "px";
    }
  }
})();"use strict";

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

(function () {
  // Controls the appearing and dissapearing of background while hovering
  var parents = [].slice.call(document.querySelectorAll('div[id$="-fancy-skew"]'));
  var modifiedParents = parents.map(function (parent) {
    var _parent$dataset;

    var cat = ((_parent$dataset = parent.dataset) === null || _parent$dataset === void 0 ? void 0 : _parent$dataset.cat) || '';
    var backgroundArea = parent.querySelector("#".concat(cat, "-skew-list")) || document.createElement('div');
    var items = Array.from(backgroundArea.querySelectorAll('li')) || [];
    return [backgroundArea, items];
  }); //  throttle mouse event listeners

  var throttle = function throttle(fn, time) {
    var inThrottle;
    return function () {
      if (!inThrottle) {
        fn.apply(this, arguments);
        inThrottle = true;
        setTimeout(function () {
          return inThrottle = false;
        }, time);
      }
    };
  };

  modifiedParents.forEach(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        backgroundArea = _ref2[0],
        items = _ref2[1];

    items.forEach(function (item) {
      hoverItem(backgroundArea, item);
    });
  });

  function activateItem(backgroundArea, item) {
    item.classList.add("active");
    backgroundArea.classList.add('active');
  }

  function deActivateItem(backgroundArea, item) {
    item.classList.remove("active");
    backgroundArea.classList.remove('active');
  }

  function hoverItem(backgroundArea, item) {
    item.addEventListener("mouseover", throttle(function () {
      activateItem(backgroundArea, item);
    }, 500));
    item.addEventListener("mouseleave", throttle(function () {
      deActivateItem(backgroundArea, item);
    }, 500));
  }

  ;

  function backgroundEffect(backgroundArea, items) {
    var boundingBox = backgroundArea.getBoundingClientRect(); // vanishing point is center screen

    var vanishingPoint = window.innerHeight / 2; // center of element

    var center = boundingBox.top + boundingBox.height / 2; // gety y-position of perspective-origin

    var yPos = Math.round((center - vanishingPoint) / 4);
    items.forEach(function (item) {
      item.style.perspectiveOrigin = "35% " + -yPos + "px";
    });
  } // controls the perspective origin of the 3D effect while scrolling


  window.addEventListener("scroll", function scrollingEffect() {
    modifiedParents.forEach(function (_ref3) {
      var _ref4 = _slicedToArray(_ref3, 2),
          backgroundArea = _ref4[0],
          items = _ref4[1];

      backgroundEffect(backgroundArea, items);
    });
  }, {
    passive: true
  }); // Removes perspective from IE10 and below

  if (navigator.userAgent.indexOf('MSIE') != -1) {
    servicesList.forEach(function (service) {
      service.style.perspectiveOrigin = "none";
      service.style.perspective = "none";
      service.querySelector(".link-wrapper").style.transform = "none";
    });
  }
})();"use strict";

(function () {
  var itemText = Array.from(document.querySelectorAll(".update__meta"));
  var itemImg = Array.from(document.querySelectorAll(".list-item__update__img"));
  itemText.forEach(function (item) {
    item.addEventListener("mouseover", function () {
      item.style.transform = "scale(1.05)";
      item.previousElementSibling.style.transform = "scale(1.05)";
    });
    item.addEventListener("mouseout", function () {
      item.style.transform = "scale(1)";
      item.previousElementSibling.style.transform = "scale(1)";
    });
  });
  itemImg.forEach(function (img) {
    img.addEventListener("mouseover", function () {
      img.style.transform = "scale(1.05)";
      img.nextElementSibling.style.transform = "scale(1.05)";
    });
    img.addEventListener("mouseout", function () {
      img.style.transform = "scale(1)";
      img.nextElementSibling.style.transform = "scale(1)";
    });
  });
})();"use strict";

(function ($) {
  'use strict';

  $.widget("ui.base", {
    _init: function _init() {
      this.init();
    },
    init: function init() {
      this.killZotonicErrorLogger();
      var me = this,
          element = me.element;
      var lightboxConfig = {
        'openEffect': "fade",
        'autoSize': true,
        'autoScale': true,
        'margin': 50,
        'autoCenter': true,
        'autoResize': true,
        'fitToView': true,
        'tpl': {
          error: '<p class="fancybox-error"></p>'
        },
        'helpers': {
          'overlay': {
            'css': {
              'background': 'rgba(246, 246, 246, 0.75)'
            },
            locked: false
          },
          media: {},
          'title': {
            type: 'inside'
          }
        },
        afterShow: function afterShow() {
          var el = $(this.element),
              fbInner = $(".fancybox-inner");

          if (el.hasClass('default-video-player')) {
            var url = el.data('video-url'),
                height = el.data('video-height'),
                width = el.data('video-width'),
                videoHTML = '<video width="' + width + '" height="' + height + '" controls>' + '<source src="' + url + '">' + '</video>';
            $('.fancybox-inner').hide();
            $(".fancybox-inner").html(videoHTML);
            $('.fancybox-inner').show();
            $.fancybox.update();
          }
        }
      };
      $(".lightbox").fancybox(lightboxConfig);
      $('.block-gallery__container').each(function (index, element) {
        var id = $(element).data("id");
        $(element).slick({
          dots: true,
          arrows: false,
          appendDots: $('.controls-' + id)
        });
      });
      $(document).on('click', $.proxy(me._documentClick, me));
      $(document).on('touchend', $.proxy(me._documentClick, me));
      $(document).on('keyup', $.proxy(me._documentKeyUp, me));
      $("img[src-full]").on("load", function () {
        if (!$(this).hasClass('loaded')) {
          $(this).addClass('loaded');
          $(this).attr('src', $(this).attr('src-full'));
        }
      }).each(function () {
        if (this.complete) {
          $(this).addClass('loaded');
          $(this).attr('src', $(this).attr('src-full'));
        }
      });
    },
    _documentClick: function _documentClick(event) {
      var me = this;

      if (!$(event.target).closest('form[role="search"]').length) {
        var searchWidgets = $(':ui-search_suggestions'),
            isOpen = false;
        $.each(searchWidgets, function (i, widget) {
          var inst = $(widget).data('ui-search_suggestions');

          if (inst && inst.isVisible()) {
            isOpen = true;
          }
        });

        if (isOpen) {
          $(document).trigger('search:close');
        }
      }
    },
    _documentKeyUp: function _documentKeyUp(event) {
      if (event.keyCode == 27) {
        $(document).trigger('search:close');
        $(document).trigger('menu:close');
      }
    },
    killZotonicErrorLogger: function killZotonicErrorLogger() {
      window.onerror = undefined;
    }
  });
})(jQuery);"use strict";

(function ($) {
  'use strict';

  $.widget("ui.global_nav", {
    _init: function _init() {
      this.init();
    },
    init: function init() {
      var me = this;
      var $logo = $('.global-nav__logo');
      var $nav = $('.global-nav');
      me.document = $(document), me.body = $('body:eq(0)'), me.menuButton = $(me.element.find('#toggle-menu')[0]);
      me.menuButton.on('click', me._toggleMenu.bind(me));
      me.document.on('menu:close', me._closeMenu.bind(me));
      $(window).on('scroll touchmove', function () {
        var hide = $(this).scrollTop() > 100;
        $logo.toggleClass('global-nav__logo--hidden', hide);
        $nav.toggleClass('global-nav--scrolled', hide);
      });
    },
    _closeMenu: function _closeMenu(event) {
      var me = this;

      me._toggleMenu(event, true);
    },
    _toggleMenu: function _toggleMenu(event, close) {
      var me = this;
      me.menuButton.toggleClass('is-active');

      if (close) {
        me.body.removeClass('is-menu-visible');
        me.element.removeClass('is-open');
        me.menuButton.removeClass('is-active');
      } else {
        if (me.menuButton.hasClass('is-active')) {
          me.element.addClass('is-open');
          me.body.addClass('is-menu-visible');
        } else {
          me.element.removeClass('is-open');
          me.body.removeClass('is-menu-visible');
        }
      }

      return false;
    }
  });
})(jQuery);"use strict";

/**
 * Grid widget that implements Masonry
 *
 * @url http://masonry.desandro.com/
 */
(function ($) {
  'use strict';

  $.widget("ui.grid", {
    _init: function _init() {
      this.init();
    },
    init: function init() {
      var $grid = $(this.element);
      this.$grid = $grid; // Enable Masonry plugin

      var config = {
        itemSelector: '.grid-item',
        percentPosition: true,
        fitWidth: $grid.hasClass('grid-fit-width'),
        transitionDuration: '0'
      };

      if ($grid.find('.gutter-sizer').length > 0) {
        config.gutter = '.gutter-sizer';
      }

      if ($grid.find('.grid-sizer').length > 0) {
        config.columnWidth = '.grid-sizer';
      }

      $grid.masonry(config); // Layout items each time an image has been completely loaded

      $grid.imagesLoaded().progress(function () {
        $grid.masonry('stamp', $grid.find('.stamp'));
        $grid.masonry('layout');
      });
    },
    update: function update() {
      var grid = this.$grid;
      grid.masonry('reloadItems');
      grid.masonry().imagesLoaded().progress(function (instance, image) {
        var li = $(image.img).closest('li');

        if (image.isLoaded && li.hasClass('hidden')) {
          li.removeClass('hidden');
        }
      }).done(function (instance) {
        setTimeout(function () {
          grid.masonry('layout');
        }, 10);
      });
    }
  });
})(jQuery);"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 * Masonry PACKAGED v4.1.1
 * Cascading grid layout library
 * http://masonry.desandro.com
 * MIT License
 * by David DeSandro
 */

/**
 * Bridget makes jQuery widgets
 * v2.0.1
 * MIT license
 */

/* jshint browser: true, strict: true, undef: true, unused: true */
(function (window, factory) {
  // universal module definition

  /*jshint strict: false */

  /* globals define, module, require */
  if (typeof define == 'function' && define.amd) {
    // AMD
    define('jquery-bridget/jquery-bridget', ['jquery'], function (jQuery) {
      return factory(window, jQuery);
    });
  } else if ((typeof module === "undefined" ? "undefined" : _typeof(module)) == 'object' && module.exports) {
    // CommonJS
    module.exports = factory(window, require('jquery'));
  } else {
    // browser global
    window.jQueryBridget = factory(window, window.jQuery);
  }
})(window, function factory(window, jQuery) {
  'use strict'; // ----- utils ----- //

  var arraySlice = Array.prototype.slice; // helper function for logging errors
  // $.error breaks jQuery chaining

  var console = window.console;
  var logError = typeof console == 'undefined' ? function () {} : function (message) {
    console.error(message);
  }; // ----- jQueryBridget ----- //

  function jQueryBridget(namespace, PluginClass, $) {
    $ = $ || jQuery || window.jQuery;

    if (!$) {
      return;
    } // add option method -> $().plugin('option', {...})


    if (!PluginClass.prototype.option) {
      // option setter
      PluginClass.prototype.option = function (opts) {
        // bail out if not an object
        if (!$.isPlainObject(opts)) {
          return;
        }

        this.options = $.extend(true, this.options, opts);
      };
    } // make jQuery plugin


    $.fn[namespace] = function (arg0
    /*, arg1 */
    ) {
      if (typeof arg0 == 'string') {
        // method call $().plugin( 'methodName', { options } )
        // shift arguments by 1
        var args = arraySlice.call(arguments, 1);
        return methodCall(this, arg0, args);
      } // just $().plugin({ options })


      plainCall(this, arg0);
      return this;
    }; // $().plugin('methodName')


    function methodCall($elems, methodName, args) {
      var returnValue;
      var pluginMethodStr = '$().' + namespace + '("' + methodName + '")';
      $elems.each(function (i, elem) {
        // get instance
        var instance = $.data(elem, namespace);

        if (!instance) {
          logError(namespace + ' not initialized. Cannot call methods, i.e. ' + pluginMethodStr);
          return;
        }

        var method = instance[methodName];

        if (!method || methodName.charAt(0) == '_') {
          logError(pluginMethodStr + ' is not a valid method');
          return;
        } // apply method, get return value


        var value = method.apply(instance, args); // set return value if value is returned, use only first value

        returnValue = returnValue === undefined ? value : returnValue;
      });
      return returnValue !== undefined ? returnValue : $elems;
    }

    function plainCall($elems, options) {
      $elems.each(function (i, elem) {
        var instance = $.data(elem, namespace);

        if (instance) {
          // set options & init
          instance.option(options);

          instance._init();
        } else {
          // initialize new instance
          instance = new PluginClass(elem, options);
          $.data(elem, namespace, instance);
        }
      });
    }

    updateJQuery($);
  } // ----- updateJQuery ----- //
  // set $.bridget for v1 backwards compatibility


  function updateJQuery($) {
    if (!$ || $ && $.bridget) {
      return;
    }

    $.bridget = jQueryBridget;
  }

  updateJQuery(jQuery || window.jQuery); // -----  ----- //

  return jQueryBridget;
});
/**
 * EvEmitter v1.0.3
 * Lil' event emitter
 * MIT License
 */

/* jshint unused: true, undef: true, strict: true */


(function (global, factory) {
  // universal module definition

  /* jshint strict: false */

  /* globals define, module, window */
  if (typeof define == 'function' && define.amd) {
    // AMD - RequireJS
    define('ev-emitter/ev-emitter', factory);
  } else if ((typeof module === "undefined" ? "undefined" : _typeof(module)) == 'object' && module.exports) {
    // CommonJS - Browserify, Webpack
    module.exports = factory();
  } else {
    // Browser globals
    global.EvEmitter = factory();
  }
})(typeof window != 'undefined' ? window : void 0, function () {
  function EvEmitter() {}

  var proto = EvEmitter.prototype;

  proto.on = function (eventName, listener) {
    if (!eventName || !listener) {
      return;
    } // set events hash


    var events = this._events = this._events || {}; // set listeners array

    var listeners = events[eventName] = events[eventName] || []; // only add once

    if (listeners.indexOf(listener) == -1) {
      listeners.push(listener);
    }

    return this;
  };

  proto.once = function (eventName, listener) {
    if (!eventName || !listener) {
      return;
    } // add event


    this.on(eventName, listener); // set once flag
    // set onceEvents hash

    var onceEvents = this._onceEvents = this._onceEvents || {}; // set onceListeners object

    var onceListeners = onceEvents[eventName] = onceEvents[eventName] || {}; // set flag

    onceListeners[listener] = true;
    return this;
  };

  proto.off = function (eventName, listener) {
    var listeners = this._events && this._events[eventName];

    if (!listeners || !listeners.length) {
      return;
    }

    var index = listeners.indexOf(listener);

    if (index != -1) {
      listeners.splice(index, 1);
    }

    return this;
  };

  proto.emitEvent = function (eventName, args) {
    var listeners = this._events && this._events[eventName];

    if (!listeners || !listeners.length) {
      return;
    }

    var i = 0;
    var listener = listeners[i];
    args = args || []; // once stuff

    var onceListeners = this._onceEvents && this._onceEvents[eventName];

    while (listener) {
      var isOnce = onceListeners && onceListeners[listener];

      if (isOnce) {
        // remove listener
        // remove before trigger to prevent recursion
        this.off(eventName, listener); // unset once flag

        delete onceListeners[listener];
      } // trigger listener


      listener.apply(this, args); // get next listener

      i += isOnce ? 0 : 1;
      listener = listeners[i];
    }

    return this;
  };

  return EvEmitter;
});
/*!
 * getSize v2.0.2
 * measure size of elements
 * MIT license
 */

/*jshint browser: true, strict: true, undef: true, unused: true */

/*global define: false, module: false, console: false */


(function (window, factory) {
  'use strict';

  if (typeof define == 'function' && define.amd) {
    // AMD
    define('get-size/get-size', [], function () {
      return factory();
    });
  } else if ((typeof module === "undefined" ? "undefined" : _typeof(module)) == 'object' && module.exports) {
    // CommonJS
    module.exports = factory();
  } else {
    // browser global
    window.getSize = factory();
  }
})(window, function factory() {
  'use strict'; // -------------------------- helpers -------------------------- //
  // get a number from a string, not a percentage

  function getStyleSize(value) {
    var num = parseFloat(value); // not a percent like '100%', and a number

    var isValid = value.indexOf('%') == -1 && !isNaN(num);
    return isValid && num;
  }

  function noop() {}

  var logError = typeof console == 'undefined' ? noop : function (message) {
    console.error(message);
  }; // -------------------------- measurements -------------------------- //

  var measurements = ['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom', 'marginLeft', 'marginRight', 'marginTop', 'marginBottom', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'borderBottomWidth'];
  var measurementsLength = measurements.length;

  function getZeroSize() {
    var size = {
      width: 0,
      height: 0,
      innerWidth: 0,
      innerHeight: 0,
      outerWidth: 0,
      outerHeight: 0
    };

    for (var i = 0; i < measurementsLength; i++) {
      var measurement = measurements[i];
      size[measurement] = 0;
    }

    return size;
  } // -------------------------- getStyle -------------------------- //

  /**
   * getStyle, get style of element, check for Firefox bug
   * https://bugzilla.mozilla.org/show_bug.cgi?id=548397
   */


  function getStyle(elem) {
    var style = getComputedStyle(elem);

    if (!style) {
      logError('Style returned ' + style + '. Are you running this code in a hidden iframe on Firefox? ' + 'See http://bit.ly/getsizebug1');
    }

    return style;
  } // -------------------------- setup -------------------------- //


  var isSetup = false;
  var isBoxSizeOuter;
  /**
   * setup
   * check isBoxSizerOuter
   * do on first getSize() rather than on page load for Firefox bug
   */

  function setup() {
    // setup once
    if (isSetup) {
      return;
    }

    isSetup = true; // -------------------------- box sizing -------------------------- //

    /**
     * WebKit measures the outer-width on style.width on border-box elems
     * IE & Firefox<29 measures the inner-width
     */

    var div = document.createElement('div');
    div.style.width = '200px';
    div.style.padding = '1px 2px 3px 4px';
    div.style.borderStyle = 'solid';
    div.style.borderWidth = '1px 2px 3px 4px';
    div.style.boxSizing = 'border-box';
    var body = document.body || document.documentElement;
    body.appendChild(div);
    var style = getStyle(div);
    getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize(style.width) == 200;
    body.removeChild(div);
  } // -------------------------- getSize -------------------------- //


  function getSize(elem) {
    setup(); // use querySeletor if elem is string

    if (typeof elem == 'string') {
      elem = document.querySelector(elem);
    } // do not proceed on non-objects


    if (!elem || _typeof(elem) != 'object' || !elem.nodeType) {
      return;
    }

    var style = getStyle(elem); // if hidden, everything is 0

    if (style.display == 'none') {
      return getZeroSize();
    }

    var size = {};
    size.width = elem.offsetWidth;
    size.height = elem.offsetHeight;
    var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box'; // get all measurements

    for (var i = 0; i < measurementsLength; i++) {
      var measurement = measurements[i];
      var value = style[measurement];
      var num = parseFloat(value); // any 'auto', 'medium' value will be 0

      size[measurement] = !isNaN(num) ? num : 0;
    }

    var paddingWidth = size.paddingLeft + size.paddingRight;
    var paddingHeight = size.paddingTop + size.paddingBottom;
    var marginWidth = size.marginLeft + size.marginRight;
    var marginHeight = size.marginTop + size.marginBottom;
    var borderWidth = size.borderLeftWidth + size.borderRightWidth;
    var borderHeight = size.borderTopWidth + size.borderBottomWidth;
    var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter; // overwrite width and height if we can get it from style

    var styleWidth = getStyleSize(style.width);

    if (styleWidth !== false) {
      size.width = styleWidth + ( // add padding and border unless it's already including it
      isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth);
    }

    var styleHeight = getStyleSize(style.height);

    if (styleHeight !== false) {
      size.height = styleHeight + ( // add padding and border unless it's already including it
      isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight);
    }

    size.innerWidth = size.width - (paddingWidth + borderWidth);
    size.innerHeight = size.height - (paddingHeight + borderHeight);
    size.outerWidth = size.width + marginWidth;
    size.outerHeight = size.height + marginHeight;
    return size;
  }

  return getSize;
});
/**
 * matchesSelector v2.0.1
 * matchesSelector( element, '.selector' )
 * MIT license
 */

/*jshint browser: true, strict: true, undef: true, unused: true */


(function (window, factory) {
  /*global define: false, module: false */
  'use strict'; // universal module definition

  if (typeof define == 'function' && define.amd) {
    // AMD
    define('desandro-matches-selector/matches-selector', factory);
  } else if ((typeof module === "undefined" ? "undefined" : _typeof(module)) == 'object' && module.exports) {
    // CommonJS
    module.exports = factory();
  } else {
    // browser global
    window.matchesSelector = factory();
  }
})(window, function factory() {
  'use strict';

  var matchesMethod = function () {
    var ElemProto = Element.prototype; // check for the standard method name first

    if (ElemProto.matches) {
      return 'matches';
    } // check un-prefixed


    if (ElemProto.matchesSelector) {
      return 'matchesSelector';
    } // check vendor prefixes


    var prefixes = ['webkit', 'moz', 'ms', 'o'];

    for (var i = 0; i < prefixes.length; i++) {
      var prefix = prefixes[i];
      var method = prefix + 'MatchesSelector';

      if (ElemProto[method]) {
        return method;
      }
    }
  }();

  return function matchesSelector(elem, selector) {
    return elem[matchesMethod](selector);
  };
});
/**
 * Fizzy UI utils v2.0.2
 * MIT license
 */

/*jshint browser: true, undef: true, unused: true, strict: true */


(function (window, factory) {
  // universal module definition

  /*jshint strict: false */

  /*globals define, module, require */
  if (typeof define == 'function' && define.amd) {
    // AMD
    define('fizzy-ui-utils/utils', ['desandro-matches-selector/matches-selector'], function (matchesSelector) {
      return factory(window, matchesSelector);
    });
  } else if ((typeof module === "undefined" ? "undefined" : _typeof(module)) == 'object' && module.exports) {
    // CommonJS
    module.exports = factory(window, require('desandro-matches-selector'));
  } else {
    // browser global
    window.fizzyUIUtils = factory(window, window.matchesSelector);
  }
})(window, function factory(window, matchesSelector) {
  var utils = {}; // ----- extend ----- //
  // extends objects

  utils.extend = function (a, b) {
    for (var prop in b) {
      a[prop] = b[prop];
    }

    return a;
  }; // ----- modulo ----- //


  utils.modulo = function (num, div) {
    return (num % div + div) % div;
  }; // ----- makeArray ----- //
  // turn element or nodeList into an array


  utils.makeArray = function (obj) {
    var ary = [];

    if (Array.isArray(obj)) {
      // use object if already an array
      ary = obj;
    } else if (obj && typeof obj.length == 'number') {
      // convert nodeList to array
      for (var i = 0; i < obj.length; i++) {
        ary.push(obj[i]);
      }
    } else {
      // array of single index
      ary.push(obj);
    }

    return ary;
  }; // ----- removeFrom ----- //


  utils.removeFrom = function (ary, obj) {
    var index = ary.indexOf(obj);

    if (index != -1) {
      ary.splice(index, 1);
    }
  }; // ----- getParent ----- //


  utils.getParent = function (elem, selector) {
    while (elem != document.body) {
      elem = elem.parentNode;

      if (matchesSelector(elem, selector)) {
        return elem;
      }
    }
  }; // ----- getQueryElement ----- //
  // use element as selector string


  utils.getQueryElement = function (elem) {
    if (typeof elem == 'string') {
      return document.querySelector(elem);
    }

    return elem;
  }; // ----- handleEvent ----- //
  // enable .ontype to trigger from .addEventListener( elem, 'type' )


  utils.handleEvent = function (event) {
    var method = 'on' + event.type;

    if (this[method]) {
      this[method](event);
    }
  }; // ----- filterFindElements ----- //


  utils.filterFindElements = function (elems, selector) {
    // make array of elems
    elems = utils.makeArray(elems);
    var ffElems = [];
    elems.forEach(function (elem) {
      // check that elem is an actual element
      if (!(elem instanceof HTMLElement)) {
        return;
      } // add elem if no selector


      if (!selector) {
        ffElems.push(elem);
        return;
      } // filter & find items if we have a selector
      // filter


      if (matchesSelector(elem, selector)) {
        ffElems.push(elem);
      } // find children


      var childElems = elem.querySelectorAll(selector); // concat childElems to filterFound array

      for (var i = 0; i < childElems.length; i++) {
        ffElems.push(childElems[i]);
      }
    });
    return ffElems;
  }; // ----- debounceMethod ----- //


  utils.debounceMethod = function (_class, methodName, threshold) {
    // original method
    var method = _class.prototype[methodName];
    var timeoutName = methodName + 'Timeout';

    _class.prototype[methodName] = function () {
      var timeout = this[timeoutName];

      if (timeout) {
        clearTimeout(timeout);
      }

      var args = arguments;

      var _this = this;

      this[timeoutName] = setTimeout(function () {
        method.apply(_this, args);
        delete _this[timeoutName];
      }, threshold || 100);
    };
  }; // ----- docReady ----- //


  utils.docReady = function (callback) {
    var readyState = document.readyState;

    if (readyState == 'complete' || readyState == 'interactive') {
      callback();
    } else {
      document.addEventListener('DOMContentLoaded', callback);
    }
  }; // ----- htmlInit ----- //
  // http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/


  utils.toDashed = function (str) {
    return str.replace(/(.)([A-Z])/g, function (match, $1, $2) {
      return $1 + '-' + $2;
    }).toLowerCase();
  };

  var console = window.console;
  /**
   * allow user to initialize classes via [data-namespace] or .js-namespace class
   * htmlInit( Widget, 'widgetName' )
   * options are parsed from data-namespace-options
   */

  utils.htmlInit = function (WidgetClass, namespace) {
    utils.docReady(function () {
      var dashedNamespace = utils.toDashed(namespace);
      var dataAttr = 'data-' + dashedNamespace;
      var dataAttrElems = document.querySelectorAll('[' + dataAttr + ']');
      var jsDashElems = document.querySelectorAll('.js-' + dashedNamespace);
      var elems = utils.makeArray(dataAttrElems).concat(utils.makeArray(jsDashElems));
      var dataOptionsAttr = dataAttr + '-options';
      var jQuery = window.jQuery;
      elems.forEach(function (elem) {
        var attr = elem.getAttribute(dataAttr) || elem.getAttribute(dataOptionsAttr);
        var options;

        try {
          options = attr && JSON.parse(attr);
        } catch (error) {
          // log error, do not initialize
          if (console) {
            console.error('Error parsing ' + dataAttr + ' on ' + elem.className + ': ' + error);
          }

          return;
        } // initialize


        var instance = new WidgetClass(elem, options); // make available via $().data('layoutname')

        if (jQuery) {
          jQuery.data(elem, namespace, instance);
        }
      });
    });
  }; // -----  ----- //


  return utils;
});
/**
 * Outlayer Item
 */


(function (window, factory) {
  // universal module definition

  /* jshint strict: false */

  /* globals define, module, require */
  if (typeof define == 'function' && define.amd) {
    // AMD - RequireJS
    define('outlayer/item', ['ev-emitter/ev-emitter', 'get-size/get-size'], factory);
  } else if ((typeof module === "undefined" ? "undefined" : _typeof(module)) == 'object' && module.exports) {
    // CommonJS - Browserify, Webpack
    module.exports = factory(require('ev-emitter'), require('get-size'));
  } else {
    // browser global
    window.Outlayer = {};
    window.Outlayer.Item = factory(window.EvEmitter, window.getSize);
  }
})(window, function factory(EvEmitter, getSize) {
  'use strict'; // ----- helpers ----- //

  function isEmptyObj(obj) {
    for (var prop in obj) {
      return false;
    }

    prop = null;
    return true;
  } // -------------------------- CSS3 support -------------------------- //


  var docElemStyle = document.documentElement.style;
  var transitionProperty = typeof docElemStyle.transition == 'string' ? 'transition' : 'WebkitTransition';
  var transformProperty = typeof docElemStyle.transform == 'string' ? 'transform' : 'WebkitTransform';
  var transitionEndEvent = {
    WebkitTransition: 'webkitTransitionEnd',
    transition: 'transitionend'
  }[transitionProperty]; // cache all vendor properties that could have vendor prefix

  var vendorProperties = {
    transform: transformProperty,
    transition: transitionProperty,
    transitionDuration: transitionProperty + 'Duration',
    transitionProperty: transitionProperty + 'Property',
    transitionDelay: transitionProperty + 'Delay'
  }; // -------------------------- Item -------------------------- //

  function Item(element, layout) {
    if (!element) {
      return;
    }

    this.element = element; // parent layout class, i.e. Masonry, Isotope, or Packery

    this.layout = layout;
    this.position = {
      x: 0,
      y: 0
    };

    this._create();
  } // inherit EvEmitter


  var proto = Item.prototype = Object.create(EvEmitter.prototype);
  proto.constructor = Item;

  proto._create = function () {
    // transition objects
    this._transn = {
      ingProperties: {},
      clean: {},
      onEnd: {}
    };
    this.css({
      position: 'absolute'
    });
  }; // trigger specified handler for event type


  proto.handleEvent = function (event) {
    var method = 'on' + event.type;

    if (this[method]) {
      this[method](event);
    }
  };

  proto.getSize = function () {
    this.size = getSize(this.element);
  };
  /**
   * apply CSS styles to element
   * @param {Object} style
   */


  proto.css = function (style) {
    var elemStyle = this.element.style;

    for (var prop in style) {
      // use vendor property if available
      var supportedProp = vendorProperties[prop] || prop;
      elemStyle[supportedProp] = style[prop];
    }
  }; // measure position, and sets it


  proto.getPosition = function () {
    var style = getComputedStyle(this.element);

    var isOriginLeft = this.layout._getOption('originLeft');

    var isOriginTop = this.layout._getOption('originTop');

    var xValue = style[isOriginLeft ? 'left' : 'right'];
    var yValue = style[isOriginTop ? 'top' : 'bottom']; // convert percent to pixels

    var layoutSize = this.layout.size;
    var x = xValue.indexOf('%') != -1 ? parseFloat(xValue) / 100 * layoutSize.width : parseInt(xValue, 10);
    var y = yValue.indexOf('%') != -1 ? parseFloat(yValue) / 100 * layoutSize.height : parseInt(yValue, 10); // clean up 'auto' or other non-integer values

    x = isNaN(x) ? 0 : x;
    y = isNaN(y) ? 0 : y; // remove padding from measurement

    x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;
    y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;
    this.position.x = x;
    this.position.y = y;
  }; // set settled position, apply padding


  proto.layoutPosition = function () {
    var layoutSize = this.layout.size;
    var style = {};

    var isOriginLeft = this.layout._getOption('originLeft');

    var isOriginTop = this.layout._getOption('originTop'); // x


    var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';
    var xProperty = isOriginLeft ? 'left' : 'right';
    var xResetProperty = isOriginLeft ? 'right' : 'left';
    var x = this.position.x + layoutSize[xPadding]; // set in percentage or pixels

    style[xProperty] = this.getXValue(x); // reset other property

    style[xResetProperty] = ''; // y

    var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';
    var yProperty = isOriginTop ? 'top' : 'bottom';
    var yResetProperty = isOriginTop ? 'bottom' : 'top';
    var y = this.position.y + layoutSize[yPadding]; // set in percentage or pixels

    style[yProperty] = this.getYValue(y); // reset other property

    style[yResetProperty] = '';
    this.css(style);
    this.emitEvent('layout', [this]);
  };

  proto.getXValue = function (x) {
    var isHorizontal = this.layout._getOption('horizontal');

    return this.layout.options.percentPosition && !isHorizontal ? x / this.layout.size.width * 100 + '%' : x + 'px';
  };

  proto.getYValue = function (y) {
    var isHorizontal = this.layout._getOption('horizontal');

    return this.layout.options.percentPosition && isHorizontal ? y / this.layout.size.height * 100 + '%' : y + 'px';
  };

  proto._transitionTo = function (x, y) {
    this.getPosition(); // get current x & y from top/left

    var curX = this.position.x;
    var curY = this.position.y;
    var compareX = parseInt(x, 10);
    var compareY = parseInt(y, 10);
    var didNotMove = compareX === this.position.x && compareY === this.position.y; // save end position

    this.setPosition(x, y); // if did not move and not transitioning, just go to layout

    if (didNotMove && !this.isTransitioning) {
      this.layoutPosition();
      return;
    }

    var transX = x - curX;
    var transY = y - curY;
    var transitionStyle = {};
    transitionStyle.transform = this.getTranslate(transX, transY);
    this.transition({
      to: transitionStyle,
      onTransitionEnd: {
        transform: this.layoutPosition
      },
      isCleaning: true
    });
  };

  proto.getTranslate = function (x, y) {
    // flip cooridinates if origin on right or bottom
    var isOriginLeft = this.layout._getOption('originLeft');

    var isOriginTop = this.layout._getOption('originTop');

    x = isOriginLeft ? x : -x;
    y = isOriginTop ? y : -y;
    return 'translate3d(' + x + 'px, ' + y + 'px, 0)';
  }; // non transition + transform support


  proto.goTo = function (x, y) {
    this.setPosition(x, y);
    this.layoutPosition();
  };

  proto.moveTo = proto._transitionTo;

  proto.setPosition = function (x, y) {
    this.position.x = parseInt(x, 10);
    this.position.y = parseInt(y, 10);
  }; // ----- transition ----- //

  /**
   * @param {Object} style - CSS
   * @param {Function} onTransitionEnd
   */
  // non transition, just trigger callback


  proto._nonTransition = function (args) {
    this.css(args.to);

    if (args.isCleaning) {
      this._removeStyles(args.to);
    }

    for (var prop in args.onTransitionEnd) {
      args.onTransitionEnd[prop].call(this);
    }
  };
  /**
   * proper transition
   * @param {Object} args - arguments
   *   @param {Object} to - style to transition to
   *   @param {Object} from - style to start transition from
   *   @param {Boolean} isCleaning - removes transition styles after transition
   *   @param {Function} onTransitionEnd - callback
   */


  proto.transition = function (args) {
    // redirect to nonTransition if no transition duration
    if (!parseFloat(this.layout.options.transitionDuration)) {
      this._nonTransition(args);

      return;
    }

    var _transition = this._transn; // keep track of onTransitionEnd callback by css property

    for (var prop in args.onTransitionEnd) {
      _transition.onEnd[prop] = args.onTransitionEnd[prop];
    } // keep track of properties that are transitioning


    for (prop in args.to) {
      _transition.ingProperties[prop] = true; // keep track of properties to clean up when transition is done

      if (args.isCleaning) {
        _transition.clean[prop] = true;
      }
    } // set from styles


    if (args.from) {
      this.css(args.from); // force redraw. http://blog.alexmaccaw.com/css-transitions

      var h = this.element.offsetHeight; // hack for JSHint to hush about unused var

      h = null;
    } // enable transition


    this.enableTransition(args.to); // set styles that are transitioning

    this.css(args.to);
    this.isTransitioning = true;
  }; // dash before all cap letters, including first for
  // WebkitTransform => -webkit-transform


  function toDashedAll(str) {
    return str.replace(/([A-Z])/g, function ($1) {
      return '-' + $1.toLowerCase();
    });
  }

  var transitionProps = 'opacity,' + toDashedAll(transformProperty);

  proto.enableTransition = function ()
  /* style */
  {
    // HACK changing transitionProperty during a transition
    // will cause transition to jump
    if (this.isTransitioning) {
      return;
    } // make `transition: foo, bar, baz` from style object
    // HACK un-comment this when enableTransition can work
    // while a transition is happening
    // var transitionValues = [];
    // for ( var prop in style ) {
    //   // dash-ify camelCased properties like WebkitTransition
    //   prop = vendorProperties[ prop ] || prop;
    //   transitionValues.push( toDashedAll( prop ) );
    // }
    // munge number to millisecond, to match stagger


    var duration = this.layout.options.transitionDuration;
    duration = typeof duration == 'number' ? duration + 'ms' : duration; // enable transition styles

    this.css({
      transitionProperty: transitionProps,
      transitionDuration: duration,
      transitionDelay: this.staggerDelay || 0
    }); // listen for transition end event

    this.element.addEventListener(transitionEndEvent, this, false);
  }; // ----- events ----- //


  proto.onwebkitTransitionEnd = function (event) {
    this.ontransitionend(event);
  };

  proto.onotransitionend = function (event) {
    this.ontransitionend(event);
  }; // properties that I munge to make my life easier


  var dashedVendorProperties = {
    '-webkit-transform': 'transform'
  };

  proto.ontransitionend = function (event) {
    // disregard bubbled events from children
    if (event.target !== this.element) {
      return;
    }

    var _transition = this._transn; // get property name of transitioned property, convert to prefix-free

    var propertyName = dashedVendorProperties[event.propertyName] || event.propertyName; // remove property that has completed transitioning

    delete _transition.ingProperties[propertyName]; // check if any properties are still transitioning

    if (isEmptyObj(_transition.ingProperties)) {
      // all properties have completed transitioning
      this.disableTransition();
    } // clean style


    if (propertyName in _transition.clean) {
      // clean up style
      this.element.style[event.propertyName] = '';
      delete _transition.clean[propertyName];
    } // trigger onTransitionEnd callback


    if (propertyName in _transition.onEnd) {
      var onTransitionEnd = _transition.onEnd[propertyName];
      onTransitionEnd.call(this);
      delete _transition.onEnd[propertyName];
    }

    this.emitEvent('transitionEnd', [this]);
  };

  proto.disableTransition = function () {
    this.removeTransitionStyles();
    this.element.removeEventListener(transitionEndEvent, this, false);
    this.isTransitioning = false;
  };
  /**
   * removes style property from element
   * @param {Object} style
  **/


  proto._removeStyles = function (style) {
    // clean up transition styles
    var cleanStyle = {};

    for (var prop in style) {
      cleanStyle[prop] = '';
    }

    this.css(cleanStyle);
  };

  var cleanTransitionStyle = {
    transitionProperty: '',
    transitionDuration: '',
    transitionDelay: ''
  };

  proto.removeTransitionStyles = function () {
    // remove transition
    this.css(cleanTransitionStyle);
  }; // ----- stagger ----- //


  proto.stagger = function (delay) {
    delay = isNaN(delay) ? 0 : delay;
    this.staggerDelay = delay + 'ms';
  }; // ----- show/hide/remove ----- //
  // remove element from DOM


  proto.removeElem = function () {
    this.element.parentNode.removeChild(this.element); // remove display: none

    this.css({
      display: ''
    });
    this.emitEvent('remove', [this]);
  };

  proto.remove = function () {
    // just remove element if no transition support or no transition
    if (!transitionProperty || !parseFloat(this.layout.options.transitionDuration)) {
      this.removeElem();
      return;
    } // start transition


    this.once('transitionEnd', function () {
      this.removeElem();
    });
    this.hide();
  };

  proto.reveal = function () {
    delete this.isHidden; // remove display: none

    this.css({
      display: ''
    });
    var options = this.layout.options;
    var onTransitionEnd = {};
    var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');
    onTransitionEnd[transitionEndProperty] = this.onRevealTransitionEnd;
    this.transition({
      from: options.hiddenStyle,
      to: options.visibleStyle,
      isCleaning: true,
      onTransitionEnd: onTransitionEnd
    });
  };

  proto.onRevealTransitionEnd = function () {
    // check if still visible
    // during transition, item may have been hidden
    if (!this.isHidden) {
      this.emitEvent('reveal');
    }
  };
  /**
   * get style property use for hide/reveal transition end
   * @param {String} styleProperty - hiddenStyle/visibleStyle
   * @returns {String}
   */


  proto.getHideRevealTransitionEndProperty = function (styleProperty) {
    var optionStyle = this.layout.options[styleProperty]; // use opacity

    if (optionStyle.opacity) {
      return 'opacity';
    } // get first property


    for (var prop in optionStyle) {
      return prop;
    }
  };

  proto.hide = function () {
    // set flag
    this.isHidden = true; // remove display: none

    this.css({
      display: ''
    });
    var options = this.layout.options;
    var onTransitionEnd = {};
    var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');
    onTransitionEnd[transitionEndProperty] = this.onHideTransitionEnd;
    this.transition({
      from: options.visibleStyle,
      to: options.hiddenStyle,
      // keep hidden stuff hidden
      isCleaning: true,
      onTransitionEnd: onTransitionEnd
    });
  };

  proto.onHideTransitionEnd = function () {
    // check if still hidden
    // during transition, item may have been un-hidden
    if (this.isHidden) {
      this.css({
        display: 'none'
      });
      this.emitEvent('hide');
    }
  };

  proto.destroy = function () {
    this.css({
      position: '',
      left: '',
      right: '',
      top: '',
      bottom: '',
      transition: '',
      transform: ''
    });
  };

  return Item;
});
/*!
 * Outlayer v2.1.0
 * the brains and guts of a layout library
 * MIT license
 */


(function (window, factory) {
  'use strict'; // universal module definition

  /* jshint strict: false */

  /* globals define, module, require */

  if (typeof define == 'function' && define.amd) {
    // AMD - RequireJS
    define('outlayer/outlayer', ['ev-emitter/ev-emitter', 'get-size/get-size', 'fizzy-ui-utils/utils', './item'], function (EvEmitter, getSize, utils, Item) {
      return factory(window, EvEmitter, getSize, utils, Item);
    });
  } else if ((typeof module === "undefined" ? "undefined" : _typeof(module)) == 'object' && module.exports) {
    // CommonJS - Browserify, Webpack
    module.exports = factory(window, require('ev-emitter'), require('get-size'), require('fizzy-ui-utils'), require('./item'));
  } else {
    // browser global
    window.Outlayer = factory(window, window.EvEmitter, window.getSize, window.fizzyUIUtils, window.Outlayer.Item);
  }
})(window, function factory(window, EvEmitter, getSize, utils, Item) {
  'use strict'; // ----- vars ----- //

  var console = window.console;
  var jQuery = window.jQuery;

  var noop = function noop() {}; // -------------------------- Outlayer -------------------------- //
  // globally unique identifiers


  var GUID = 0; // internal store of all Outlayer intances

  var instances = {};
  /**
   * @param {Element, String} element
   * @param {Object} options
   * @constructor
   */

  function Outlayer(element, options) {
    var queryElement = utils.getQueryElement(element);

    if (!queryElement) {
      if (console) {
        console.error('Bad element for ' + this.constructor.namespace + ': ' + (queryElement || element));
      }

      return;
    }

    this.element = queryElement; // add jQuery

    if (jQuery) {
      this.$element = jQuery(this.element);
    } // options


    this.options = utils.extend({}, this.constructor.defaults);
    this.option(options); // add id for Outlayer.getFromElement

    var id = ++GUID;
    this.element.outlayerGUID = id; // expando

    instances[id] = this; // associate via id
    // kick it off

    this._create();

    var isInitLayout = this._getOption('initLayout');

    if (isInitLayout) {
      this.layout();
    }
  } // settings are for internal use only


  Outlayer.namespace = 'outlayer';
  Outlayer.Item = Item; // default options

  Outlayer.defaults = {
    containerStyle: {
      position: 'relative'
    },
    initLayout: true,
    originLeft: true,
    originTop: true,
    resize: true,
    resizeContainer: true,
    // item options
    transitionDuration: '0.4s',
    hiddenStyle: {
      opacity: 0,
      transform: 'scale(0.001)'
    },
    visibleStyle: {
      opacity: 1,
      transform: 'scale(1)'
    }
  };
  var proto = Outlayer.prototype; // inherit EvEmitter

  utils.extend(proto, EvEmitter.prototype);
  /**
   * set options
   * @param {Object} opts
   */

  proto.option = function (opts) {
    utils.extend(this.options, opts);
  };
  /**
   * get backwards compatible option value, check old name
   */


  proto._getOption = function (option) {
    var oldOption = this.constructor.compatOptions[option];
    return oldOption && this.options[oldOption] !== undefined ? this.options[oldOption] : this.options[option];
  };

  Outlayer.compatOptions = {
    // currentName: oldName
    initLayout: 'isInitLayout',
    horizontal: 'isHorizontal',
    layoutInstant: 'isLayoutInstant',
    originLeft: 'isOriginLeft',
    originTop: 'isOriginTop',
    resize: 'isResizeBound',
    resizeContainer: 'isResizingContainer'
  };

  proto._create = function () {
    // get items from children
    this.reloadItems(); // elements that affect layout, but are not laid out

    this.stamps = [];
    this.stamp(this.options.stamp); // set container style

    utils.extend(this.element.style, this.options.containerStyle); // bind resize method

    var canBindResize = this._getOption('resize');

    if (canBindResize) {
      this.bindResize();
    }
  }; // goes through all children again and gets bricks in proper order


  proto.reloadItems = function () {
    // collection of item elements
    this.items = this._itemize(this.element.children);
  };
  /**
   * turn elements into Outlayer.Items to be used in layout
   * @param {Array or NodeList or HTMLElement} elems
   * @returns {Array} items - collection of new Outlayer Items
   */


  proto._itemize = function (elems) {
    var itemElems = this._filterFindItemElements(elems);

    var Item = this.constructor.Item; // create new Outlayer Items for collection

    var items = [];

    for (var i = 0; i < itemElems.length; i++) {
      var elem = itemElems[i];
      var item = new Item(elem, this);
      items.push(item);
    }

    return items;
  };
  /**
   * get item elements to be used in layout
   * @param {Array or NodeList or HTMLElement} elems
   * @returns {Array} items - item elements
   */


  proto._filterFindItemElements = function (elems) {
    return utils.filterFindElements(elems, this.options.itemSelector);
  };
  /**
   * getter method for getting item elements
   * @returns {Array} elems - collection of item elements
   */


  proto.getItemElements = function () {
    return this.items.map(function (item) {
      return item.element;
    });
  }; // ----- init & layout ----- //

  /**
   * lays out all items
   */


  proto.layout = function () {
    this._resetLayout();

    this._manageStamps(); // don't animate first layout


    var layoutInstant = this._getOption('layoutInstant');

    var isInstant = layoutInstant !== undefined ? layoutInstant : !this._isLayoutInited;
    this.layoutItems(this.items, isInstant); // flag for initalized

    this._isLayoutInited = true;
  }; // _init is alias for layout


  proto._init = proto.layout;
  /**
   * logic before any new layout
   */

  proto._resetLayout = function () {
    this.getSize();
  };

  proto.getSize = function () {
    this.size = getSize(this.element);
  };
  /**
   * get measurement from option, for columnWidth, rowHeight, gutter
   * if option is String -> get element from selector string, & get size of element
   * if option is Element -> get size of element
   * else use option as a number
   *
   * @param {String} measurement
   * @param {String} size - width or height
   * @private
   */


  proto._getMeasurement = function (measurement, size) {
    var option = this.options[measurement];
    var elem;

    if (!option) {
      // default to 0
      this[measurement] = 0;
    } else {
      // use option as an element
      if (typeof option == 'string') {
        elem = this.element.querySelector(option);
      } else if (option instanceof HTMLElement) {
        elem = option;
      } // use size of element, if element


      this[measurement] = elem ? getSize(elem)[size] : option;
    }
  };
  /**
   * layout a collection of item elements
   * @api public
   */


  proto.layoutItems = function (items, isInstant) {
    items = this._getItemsForLayout(items);

    this._layoutItems(items, isInstant);

    this._postLayout();
  };
  /**
   * get the items to be laid out
   * you may want to skip over some items
   * @param {Array} items
   * @returns {Array} items
   */


  proto._getItemsForLayout = function (items) {
    return items.filter(function (item) {
      return !item.isIgnored;
    });
  };
  /**
   * layout items
   * @param {Array} items
   * @param {Boolean} isInstant
   */


  proto._layoutItems = function (items, isInstant) {
    this._emitCompleteOnItems('layout', items);

    if (!items || !items.length) {
      // no items, emit event with empty array
      return;
    }

    var queue = [];
    items.forEach(function (item) {
      // get x/y object from method
      var position = this._getItemLayoutPosition(item); // enqueue


      position.item = item;
      position.isInstant = isInstant || item.isLayoutInstant;
      queue.push(position);
    }, this);

    this._processLayoutQueue(queue);
  };
  /**
   * get item layout position
   * @param {Outlayer.Item} item
   * @returns {Object} x and y position
   */


  proto._getItemLayoutPosition = function ()
  /* item */
  {
    return {
      x: 0,
      y: 0
    };
  };
  /**
   * iterate over array and position each item
   * Reason being - separating this logic prevents 'layout invalidation'
   * thx @paul_irish
   * @param {Array} queue
   */


  proto._processLayoutQueue = function (queue) {
    this.updateStagger();
    queue.forEach(function (obj, i) {
      this._positionItem(obj.item, obj.x, obj.y, obj.isInstant, i);
    }, this);
  }; // set stagger from option in milliseconds number


  proto.updateStagger = function () {
    var stagger = this.options.stagger;

    if (stagger === null || stagger === undefined) {
      this.stagger = 0;
      return;
    }

    this.stagger = getMilliseconds(stagger);
    return this.stagger;
  };
  /**
   * Sets position of item in DOM
   * @param {Outlayer.Item} item
   * @param {Number} x - horizontal position
   * @param {Number} y - vertical position
   * @param {Boolean} isInstant - disables transitions
   */


  proto._positionItem = function (item, x, y, isInstant, i) {
    if (isInstant) {
      // if not transition, just set CSS
      item.goTo(x, y);
    } else {
      item.stagger(i * this.stagger);
      item.moveTo(x, y);
    }
  };
  /**
   * Any logic you want to do after each layout,
   * i.e. size the container
   */


  proto._postLayout = function () {
    this.resizeContainer();
  };

  proto.resizeContainer = function () {
    var isResizingContainer = this._getOption('resizeContainer');

    if (!isResizingContainer) {
      return;
    }

    var size = this._getContainerSize();

    if (size) {
      this._setContainerMeasure(size.width, true);

      this._setContainerMeasure(size.height, false);
    }
  };
  /**
   * Sets width or height of container if returned
   * @returns {Object} size
   *   @param {Number} width
   *   @param {Number} height
   */


  proto._getContainerSize = noop;
  /**
   * @param {Number} measure - size of width or height
   * @param {Boolean} isWidth
   */

  proto._setContainerMeasure = function (measure, isWidth) {
    if (measure === undefined) {
      return;
    }

    var elemSize = this.size; // add padding and border width if border box

    if (elemSize.isBorderBox) {
      measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight + elemSize.borderLeftWidth + elemSize.borderRightWidth : elemSize.paddingBottom + elemSize.paddingTop + elemSize.borderTopWidth + elemSize.borderBottomWidth;
    }

    measure = Math.max(measure, 0);
    this.element.style[isWidth ? 'width' : 'height'] = measure + 'px';
  };
  /**
   * emit eventComplete on a collection of items events
   * @param {String} eventName
   * @param {Array} items - Outlayer.Items
   */


  proto._emitCompleteOnItems = function (eventName, items) {
    var _this = this;

    function onComplete() {
      _this.dispatchEvent(eventName + 'Complete', null, [items]);
    }

    var count = items.length;

    if (!items || !count) {
      onComplete();
      return;
    }

    var doneCount = 0;

    function tick() {
      doneCount++;

      if (doneCount == count) {
        onComplete();
      }
    } // bind callback


    items.forEach(function (item) {
      item.once(eventName, tick);
    });
  };
  /**
   * emits events via EvEmitter and jQuery events
   * @param {String} type - name of event
   * @param {Event} event - original event
   * @param {Array} args - extra arguments
   */


  proto.dispatchEvent = function (type, event, args) {
    // add original event to arguments
    var emitArgs = event ? [event].concat(args) : args;
    this.emitEvent(type, emitArgs);

    if (jQuery) {
      // set this.$element
      this.$element = this.$element || jQuery(this.element);

      if (event) {
        // create jQuery event
        var $event = jQuery.Event(event);
        $event.type = type;
        this.$element.trigger($event, args);
      } else {
        // just trigger with type if no event available
        this.$element.trigger(type, args);
      }
    }
  }; // -------------------------- ignore & stamps -------------------------- //

  /**
   * keep item in collection, but do not lay it out
   * ignored items do not get skipped in layout
   * @param {Element} elem
   */


  proto.ignore = function (elem) {
    var item = this.getItem(elem);

    if (item) {
      item.isIgnored = true;
    }
  };
  /**
   * return item to layout collection
   * @param {Element} elem
   */


  proto.unignore = function (elem) {
    var item = this.getItem(elem);

    if (item) {
      delete item.isIgnored;
    }
  };
  /**
   * adds elements to stamps
   * @param {NodeList, Array, Element, or String} elems
   */


  proto.stamp = function (elems) {
    elems = this._find(elems);

    if (!elems) {
      return;
    }

    this.stamps = this.stamps.concat(elems); // ignore

    elems.forEach(this.ignore, this);
  };
  /**
   * removes elements to stamps
   * @param {NodeList, Array, or Element} elems
   */


  proto.unstamp = function (elems) {
    elems = this._find(elems);

    if (!elems) {
      return;
    }

    elems.forEach(function (elem) {
      // filter out removed stamp elements
      utils.removeFrom(this.stamps, elem);
      this.unignore(elem);
    }, this);
  };
  /**
   * finds child elements
   * @param {NodeList, Array, Element, or String} elems
   * @returns {Array} elems
   */


  proto._find = function (elems) {
    if (!elems) {
      return;
    } // if string, use argument as selector string


    if (typeof elems == 'string') {
      elems = this.element.querySelectorAll(elems);
    }

    elems = utils.makeArray(elems);
    return elems;
  };

  proto._manageStamps = function () {
    if (!this.stamps || !this.stamps.length) {
      return;
    }

    this._getBoundingRect();

    this.stamps.forEach(this._manageStamp, this);
  }; // update boundingLeft / Top


  proto._getBoundingRect = function () {
    // get bounding rect for container element
    var boundingRect = this.element.getBoundingClientRect();
    var size = this.size;
    this._boundingRect = {
      left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,
      top: boundingRect.top + size.paddingTop + size.borderTopWidth,
      right: boundingRect.right - (size.paddingRight + size.borderRightWidth),
      bottom: boundingRect.bottom - (size.paddingBottom + size.borderBottomWidth)
    };
  };
  /**
   * @param {Element} stamp
  **/


  proto._manageStamp = noop;
  /**
   * get x/y position of element relative to container element
   * @param {Element} elem
   * @returns {Object} offset - has left, top, right, bottom
   */

  proto._getElementOffset = function (elem) {
    var boundingRect = elem.getBoundingClientRect();
    var thisRect = this._boundingRect;
    var size = getSize(elem);
    var offset = {
      left: boundingRect.left - thisRect.left - size.marginLeft,
      top: boundingRect.top - thisRect.top - size.marginTop,
      right: thisRect.right - boundingRect.right - size.marginRight,
      bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom
    };
    return offset;
  }; // -------------------------- resize -------------------------- //
  // enable event handlers for listeners
  // i.e. resize -> onresize


  proto.handleEvent = utils.handleEvent;
  /**
   * Bind layout to window resizing
   */

  proto.bindResize = function () {
    window.addEventListener('resize', this);
    this.isResizeBound = true;
  };
  /**
   * Unbind layout to window resizing
   */


  proto.unbindResize = function () {
    window.removeEventListener('resize', this);
    this.isResizeBound = false;
  };

  proto.onresize = function () {
    this.resize();
  };

  utils.debounceMethod(Outlayer, 'onresize', 100);

  proto.resize = function () {
    // don't trigger if size did not change
    // or if resize was unbound. See #9
    if (!this.isResizeBound || !this.needsResizeLayout()) {
      return;
    }

    this.layout();
  };
  /**
   * check if layout is needed post layout
   * @returns Boolean
   */


  proto.needsResizeLayout = function () {
    var size = getSize(this.element); // check that this.size and size are there
    // IE8 triggers resize on body size change, so they might not be

    var hasSizes = this.size && size;
    return hasSizes && size.innerWidth !== this.size.innerWidth;
  }; // -------------------------- methods -------------------------- //

  /**
   * add items to Outlayer instance
   * @param {Array or NodeList or Element} elems
   * @returns {Array} items - Outlayer.Items
  **/


  proto.addItems = function (elems) {
    var items = this._itemize(elems); // add items to collection


    if (items.length) {
      this.items = this.items.concat(items);
    }

    return items;
  };
  /**
   * Layout newly-appended item elements
   * @param {Array or NodeList or Element} elems
   */


  proto.appended = function (elems) {
    var items = this.addItems(elems);

    if (!items.length) {
      return;
    } // layout and reveal just the new items


    this.layoutItems(items, true);
    this.reveal(items);
  };
  /**
   * Layout prepended elements
   * @param {Array or NodeList or Element} elems
   */


  proto.prepended = function (elems) {
    var items = this._itemize(elems);

    if (!items.length) {
      return;
    } // add items to beginning of collection


    var previousItems = this.items.slice(0);
    this.items = items.concat(previousItems); // start new layout

    this._resetLayout();

    this._manageStamps(); // layout new stuff without transition


    this.layoutItems(items, true);
    this.reveal(items); // layout previous items

    this.layoutItems(previousItems);
  };
  /**
   * reveal a collection of items
   * @param {Array of Outlayer.Items} items
   */


  proto.reveal = function (items) {
    this._emitCompleteOnItems('reveal', items);

    if (!items || !items.length) {
      return;
    }

    var stagger = this.updateStagger();
    items.forEach(function (item, i) {
      item.stagger(i * stagger);
      item.reveal();
    });
  };
  /**
   * hide a collection of items
   * @param {Array of Outlayer.Items} items
   */


  proto.hide = function (items) {
    this._emitCompleteOnItems('hide', items);

    if (!items || !items.length) {
      return;
    }

    var stagger = this.updateStagger();
    items.forEach(function (item, i) {
      item.stagger(i * stagger);
      item.hide();
    });
  };
  /**
   * reveal item elements
   * @param {Array}, {Element}, {NodeList} items
   */


  proto.revealItemElements = function (elems) {
    var items = this.getItems(elems);
    this.reveal(items);
  };
  /**
   * hide item elements
   * @param {Array}, {Element}, {NodeList} items
   */


  proto.hideItemElements = function (elems) {
    var items = this.getItems(elems);
    this.hide(items);
  };
  /**
   * get Outlayer.Item, given an Element
   * @param {Element} elem
   * @param {Function} callback
   * @returns {Outlayer.Item} item
   */


  proto.getItem = function (elem) {
    // loop through items to get the one that matches
    for (var i = 0; i < this.items.length; i++) {
      var item = this.items[i];

      if (item.element == elem) {
        // return item
        return item;
      }
    }
  };
  /**
   * get collection of Outlayer.Items, given Elements
   * @param {Array} elems
   * @returns {Array} items - Outlayer.Items
   */


  proto.getItems = function (elems) {
    elems = utils.makeArray(elems);
    var items = [];
    elems.forEach(function (elem) {
      var item = this.getItem(elem);

      if (item) {
        items.push(item);
      }
    }, this);
    return items;
  };
  /**
   * remove element(s) from instance and DOM
   * @param {Array or NodeList or Element} elems
   */


  proto.remove = function (elems) {
    var removeItems = this.getItems(elems);

    this._emitCompleteOnItems('remove', removeItems); // bail if no items to remove


    if (!removeItems || !removeItems.length) {
      return;
    }

    removeItems.forEach(function (item) {
      item.remove(); // remove item from collection

      utils.removeFrom(this.items, item);
    }, this);
  }; // ----- destroy ----- //
  // remove and disable Outlayer instance


  proto.destroy = function () {
    // clean up dynamic styles
    var style = this.element.style;
    style.height = '';
    style.position = '';
    style.width = ''; // destroy items

    this.items.forEach(function (item) {
      item.destroy();
    });
    this.unbindResize();
    var id = this.element.outlayerGUID;
    delete instances[id]; // remove reference to instance by id

    delete this.element.outlayerGUID; // remove data for jQuery

    if (jQuery) {
      jQuery.removeData(this.element, this.constructor.namespace);
    }
  }; // -------------------------- data -------------------------- //

  /**
   * get Outlayer instance from element
   * @param {Element} elem
   * @returns {Outlayer}
   */


  Outlayer.data = function (elem) {
    elem = utils.getQueryElement(elem);
    var id = elem && elem.outlayerGUID;
    return id && instances[id];
  }; // -------------------------- create Outlayer class -------------------------- //

  /**
   * create a layout class
   * @param {String} namespace
   */


  Outlayer.create = function (namespace, options) {
    // sub-class Outlayer
    var Layout = subclass(Outlayer); // apply new options and compatOptions

    Layout.defaults = utils.extend({}, Outlayer.defaults);
    utils.extend(Layout.defaults, options);
    Layout.compatOptions = utils.extend({}, Outlayer.compatOptions);
    Layout.namespace = namespace;
    Layout.data = Outlayer.data; // sub-class Item

    Layout.Item = subclass(Item); // -------------------------- declarative -------------------------- //

    utils.htmlInit(Layout, namespace); // -------------------------- jQuery bridge -------------------------- //
    // make into jQuery plugin

    if (jQuery && jQuery.bridget) {
      jQuery.bridget(namespace, Layout);
    }

    return Layout;
  };

  function subclass(Parent) {
    function SubClass() {
      Parent.apply(this, arguments);
    }

    SubClass.prototype = Object.create(Parent.prototype);
    SubClass.prototype.constructor = SubClass;
    return SubClass;
  } // ----- helpers ----- //
  // how many milliseconds are in each unit


  var msUnits = {
    ms: 1,
    s: 1000
  }; // munge time-like parameter into millisecond number
  // '0.4s' -> 40

  function getMilliseconds(time) {
    if (typeof time == 'number') {
      return time;
    }

    var matches = time.match(/(^\d*\.?\d*)(\w*)/);
    var num = matches && matches[1];
    var unit = matches && matches[2];

    if (!num.length) {
      return 0;
    }

    num = parseFloat(num);
    var mult = msUnits[unit] || 1;
    return num * mult;
  } // ----- fin ----- //
  // back in global


  Outlayer.Item = Item;
  return Outlayer;
});
/*!
 * Masonry v4.1.1
 * Cascading grid layout library
 * http://masonry.desandro.com
 * MIT License
 * by David DeSandro
 */


(function (window, factory) {
  // universal module definition

  /* jshint strict: false */

  /*globals define, module, require */
  if (typeof define == 'function' && define.amd) {
    // AMD
    define(['outlayer/outlayer', 'get-size/get-size'], factory);
  } else if ((typeof module === "undefined" ? "undefined" : _typeof(module)) == 'object' && module.exports) {
    // CommonJS
    module.exports = factory(require('outlayer'), require('get-size'));
  } else {
    // browser global
    window.Masonry = factory(window.Outlayer, window.getSize);
  }
})(window, function factory(Outlayer, getSize) {
  // -------------------------- masonryDefinition -------------------------- //
  // create an Outlayer layout class
  var Masonry = Outlayer.create('masonry'); // isFitWidth -> fitWidth

  Masonry.compatOptions.fitWidth = 'isFitWidth';

  Masonry.prototype._resetLayout = function () {
    this.getSize();

    this._getMeasurement('columnWidth', 'outerWidth');

    this._getMeasurement('gutter', 'outerWidth');

    this.measureColumns(); // reset column Y

    this.colYs = [];

    for (var i = 0; i < this.cols; i++) {
      this.colYs.push(0);
    }

    this.maxY = 0;
  };

  Masonry.prototype.measureColumns = function () {
    this.getContainerWidth(); // if columnWidth is 0, default to outerWidth of first item

    if (!this.columnWidth) {
      var firstItem = this.items[0];
      var firstItemElem = firstItem && firstItem.element; // columnWidth fall back to item of first element

      this.columnWidth = firstItemElem && getSize(firstItemElem).outerWidth || // if first elem has no width, default to size of container
      this.containerWidth;
    }

    var columnWidth = this.columnWidth += this.gutter; // calculate columns

    var containerWidth = this.containerWidth + this.gutter;
    var cols = containerWidth / columnWidth; // fix rounding errors, typically with gutters

    var excess = columnWidth - containerWidth % columnWidth; // if overshoot is less than a pixel, round up, otherwise floor it

    var mathMethod = excess && excess < 1 ? 'round' : 'floor';
    cols = Math[mathMethod](cols);
    this.cols = Math.max(cols, 1);
  };

  Masonry.prototype.getContainerWidth = function () {
    // container is parent if fit width
    var isFitWidth = this._getOption('fitWidth');

    var container = isFitWidth ? this.element.parentNode : this.element; // check that this.size and size are there
    // IE8 triggers resize on body size change, so they might not be

    var size = getSize(container);
    this.containerWidth = size && size.innerWidth;
  };

  Masonry.prototype._getItemLayoutPosition = function (item) {
    item.getSize(); // how many columns does this brick span

    var remainder = item.size.outerWidth % this.columnWidth;
    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil'; // round if off by 1 pixel, otherwise use ceil

    var colSpan = Math[mathMethod](item.size.outerWidth / this.columnWidth);
    colSpan = Math.min(colSpan, this.cols);

    var colGroup = this._getColGroup(colSpan); // get the minimum Y value from the columns


    var minimumY = Math.min.apply(Math, colGroup);
    var shortColIndex = colGroup.indexOf(minimumY); // position the brick

    var position = {
      x: this.columnWidth * shortColIndex,
      y: minimumY
    }; // apply setHeight to necessary columns

    var setHeight = minimumY + item.size.outerHeight;
    var setSpan = this.cols + 1 - colGroup.length;

    for (var i = 0; i < setSpan; i++) {
      this.colYs[shortColIndex + i] = setHeight;
    }

    return position;
  };
  /**
   * @param {Number} colSpan - number of columns the element spans
   * @returns {Array} colGroup
   */


  Masonry.prototype._getColGroup = function (colSpan) {
    if (colSpan < 2) {
      // if brick spans only one column, use all the column Ys
      return this.colYs;
    }

    var colGroup = []; // how many different places could this brick fit horizontally

    var groupCount = this.cols + 1 - colSpan; // for each group potential horizontal position

    for (var i = 0; i < groupCount; i++) {
      // make an array of colY values for that one group
      var groupColYs = this.colYs.slice(i, i + colSpan); // and get the max value of the array

      colGroup[i] = Math.max.apply(Math, groupColYs);
    }

    return colGroup;
  };

  Masonry.prototype._manageStamp = function (stamp) {
    var stampSize = getSize(stamp);

    var offset = this._getElementOffset(stamp); // get the columns that this stamp affects


    var isOriginLeft = this._getOption('originLeft');

    var firstX = isOriginLeft ? offset.left : offset.right;
    var lastX = firstX + stampSize.outerWidth;
    var firstCol = Math.floor(firstX / this.columnWidth);
    firstCol = Math.max(0, firstCol);
    var lastCol = Math.floor(lastX / this.columnWidth); // lastCol should not go over if multiple of columnWidth #425

    lastCol -= lastX % this.columnWidth ? 0 : 1;
    lastCol = Math.min(this.cols - 1, lastCol); // set colYs to bottom of the stamp

    var isOriginTop = this._getOption('originTop');

    var stampMaxY = (isOriginTop ? offset.top : offset.bottom) + stampSize.outerHeight;

    for (var i = firstCol; i <= lastCol; i++) {
      this.colYs[i] = Math.max(stampMaxY, this.colYs[i]);
    }
  };

  Masonry.prototype._getContainerSize = function () {
    this.maxY = Math.max.apply(Math, this.colYs);
    var size = {
      height: this.maxY
    };

    if (this._getOption('fitWidth')) {
      size.width = this._getContainerFitWidth();
    }

    return size;
  };

  Masonry.prototype._getContainerFitWidth = function () {
    var unusedCols = 0; // count unused columns

    var i = this.cols;

    while (--i) {
      if (this.colYs[i] !== 0) {
        break;
      }

      unusedCols++;
    } // fit container to columns that have been used


    return (this.cols - unusedCols) * this.columnWidth - this.gutter;
  };

  Masonry.prototype.needsResizeLayout = function () {
    var previousWidth = this.containerWidth;
    this.getContainerWidth();
    return previousWidth != this.containerWidth;
  };

  return Masonry;
});"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 * imagesLoaded PACKAGED v4.1.1
 * JavaScript is all like "You images are done yet or what?"
 * MIT License
 */

/**
 * EvEmitter v1.0.3
 * Lil' event emitter
 * MIT License
 */

/* jshint unused: true, undef: true, strict: true */
(function (global, factory) {
  // universal module definition

  /* jshint strict: false */

  /* globals define, module, window */
  if (typeof define == 'function' && define.amd) {
    // AMD - RequireJS
    define('ev-emitter/ev-emitter', factory);
  } else if ((typeof module === "undefined" ? "undefined" : _typeof(module)) == 'object' && module.exports) {
    // CommonJS - Browserify, Webpack
    module.exports = factory();
  } else {
    // Browser globals
    global.EvEmitter = factory();
  }
})(typeof window != 'undefined' ? window : void 0, function () {
  function EvEmitter() {}

  var proto = EvEmitter.prototype;

  proto.on = function (eventName, listener) {
    if (!eventName || !listener) {
      return;
    } // set events hash


    var events = this._events = this._events || {}; // set listeners array

    var listeners = events[eventName] = events[eventName] || []; // only add once

    if (listeners.indexOf(listener) == -1) {
      listeners.push(listener);
    }

    return this;
  };

  proto.once = function (eventName, listener) {
    if (!eventName || !listener) {
      return;
    } // add event


    this.on(eventName, listener); // set once flag
    // set onceEvents hash

    var onceEvents = this._onceEvents = this._onceEvents || {}; // set onceListeners object

    var onceListeners = onceEvents[eventName] = onceEvents[eventName] || {}; // set flag

    onceListeners[listener] = true;
    return this;
  };

  proto.off = function (eventName, listener) {
    var listeners = this._events && this._events[eventName];

    if (!listeners || !listeners.length) {
      return;
    }

    var index = listeners.indexOf(listener);

    if (index != -1) {
      listeners.splice(index, 1);
    }

    return this;
  };

  proto.emitEvent = function (eventName, args) {
    var listeners = this._events && this._events[eventName];

    if (!listeners || !listeners.length) {
      return;
    }

    var i = 0;
    var listener = listeners[i];
    args = args || []; // once stuff

    var onceListeners = this._onceEvents && this._onceEvents[eventName];

    while (listener) {
      var isOnce = onceListeners && onceListeners[listener];

      if (isOnce) {
        // remove listener
        // remove before trigger to prevent recursion
        this.off(eventName, listener); // unset once flag

        delete onceListeners[listener];
      } // trigger listener


      listener.apply(this, args); // get next listener

      i += isOnce ? 0 : 1;
      listener = listeners[i];
    }

    return this;
  };

  return EvEmitter;
});
/*!
 * imagesLoaded v4.1.1
 * JavaScript is all like "You images are done yet or what?"
 * MIT License
 */


(function (window, factory) {
  'use strict'; // universal module definition

  /*global define: false, module: false, require: false */

  if (typeof define == 'function' && define.amd) {
    // AMD
    define(['ev-emitter/ev-emitter'], function (EvEmitter) {
      return factory(window, EvEmitter);
    });
  } else if ((typeof module === "undefined" ? "undefined" : _typeof(module)) == 'object' && module.exports) {
    // CommonJS
    module.exports = factory(window, require('ev-emitter'));
  } else {
    // browser global
    window.imagesLoaded = factory(window, window.EvEmitter);
  }
})(window, // --------------------------  factory -------------------------- //
function factory(window, EvEmitter) {
  var $ = window.jQuery;
  var console = window.console; // -------------------------- helpers -------------------------- //
  // extend objects

  function extend(a, b) {
    for (var prop in b) {
      a[prop] = b[prop];
    }

    return a;
  } // turn element or nodeList into an array


  function makeArray(obj) {
    var ary = [];

    if (Array.isArray(obj)) {
      // use object if already an array
      ary = obj;
    } else if (typeof obj.length == 'number') {
      // convert nodeList to array
      for (var i = 0; i < obj.length; i++) {
        ary.push(obj[i]);
      }
    } else {
      // array of single index
      ary.push(obj);
    }

    return ary;
  } // -------------------------- imagesLoaded -------------------------- //

  /**
   * @param {Array, Element, NodeList, String} elem
   * @param {Object or Function} options - if function, use as callback
   * @param {Function} onAlways - callback function
   */


  function ImagesLoaded(elem, options, onAlways) {
    // coerce ImagesLoaded() without new, to be new ImagesLoaded()
    if (!(this instanceof ImagesLoaded)) {
      return new ImagesLoaded(elem, options, onAlways);
    } // use elem as selector string


    if (typeof elem == 'string') {
      elem = document.querySelectorAll(elem);
    }

    this.elements = makeArray(elem);
    this.options = extend({}, this.options);

    if (typeof options == 'function') {
      onAlways = options;
    } else {
      extend(this.options, options);
    }

    if (onAlways) {
      this.on('always', onAlways);
    }

    this.getImages();

    if ($) {
      // add jQuery Deferred object
      this.jqDeferred = new $.Deferred();
    } // HACK check async to allow time to bind listeners


    setTimeout(function () {
      this.check();
    }.bind(this));
  }

  ImagesLoaded.prototype = Object.create(EvEmitter.prototype);
  ImagesLoaded.prototype.options = {};

  ImagesLoaded.prototype.getImages = function () {
    this.images = []; // filter & find items if we have an item selector

    this.elements.forEach(this.addElementImages, this);
  };
  /**
   * @param {Node} element
   */


  ImagesLoaded.prototype.addElementImages = function (elem) {
    // filter siblings
    if (elem.nodeName == 'IMG') {
      this.addImage(elem);
    } // get background image on element


    if (this.options.background === true) {
      this.addElementBackgroundImages(elem);
    } // find children
    // no non-element nodes, #143


    var nodeType = elem.nodeType;

    if (!nodeType || !elementNodeTypes[nodeType]) {
      return;
    }

    var childImgs = elem.querySelectorAll('img'); // concat childElems to filterFound array

    for (var i = 0; i < childImgs.length; i++) {
      var img = childImgs[i];
      this.addImage(img);
    } // get child background images


    if (typeof this.options.background == 'string') {
      var children = elem.querySelectorAll(this.options.background);

      for (i = 0; i < children.length; i++) {
        var child = children[i];
        this.addElementBackgroundImages(child);
      }
    }
  };

  var elementNodeTypes = {
    1: true,
    9: true,
    11: true
  };

  ImagesLoaded.prototype.addElementBackgroundImages = function (elem) {
    var style = getComputedStyle(elem);

    if (!style) {
      // Firefox returns null if in a hidden iframe https://bugzil.la/548397
      return;
    } // get url inside url("...")


    var reURL = /url\((['"])?(.*?)\1\)/gi;
    var matches = reURL.exec(style.backgroundImage);

    while (matches !== null) {
      var url = matches && matches[2];

      if (url) {
        this.addBackground(url, elem);
      }

      matches = reURL.exec(style.backgroundImage);
    }
  };
  /**
   * @param {Image} img
   */


  ImagesLoaded.prototype.addImage = function (img) {
    var loadingImage = new LoadingImage(img);
    this.images.push(loadingImage);
  };

  ImagesLoaded.prototype.addBackground = function (url, elem) {
    var background = new Background(url, elem);
    this.images.push(background);
  };

  ImagesLoaded.prototype.check = function () {
    var _this = this;

    this.progressedCount = 0;
    this.hasAnyBroken = false; // complete if no images

    if (!this.images.length) {
      this.complete();
      return;
    }

    function onProgress(image, elem, message) {
      // HACK - Chrome triggers event before object properties have changed. #83
      setTimeout(function () {
        _this.progress(image, elem, message);
      });
    }

    this.images.forEach(function (loadingImage) {
      loadingImage.once('progress', onProgress);
      loadingImage.check();
    });
  };

  ImagesLoaded.prototype.progress = function (image, elem, message) {
    this.progressedCount++;
    this.hasAnyBroken = this.hasAnyBroken || !image.isLoaded; // progress event

    this.emitEvent('progress', [this, image, elem]);

    if (this.jqDeferred && this.jqDeferred.notify) {
      this.jqDeferred.notify(this, image);
    } // check if completed


    if (this.progressedCount == this.images.length) {
      this.complete();
    }

    if (this.options.debug && console) {
      console.log('progress: ' + message, image, elem);
    }
  };

  ImagesLoaded.prototype.complete = function () {
    var eventName = this.hasAnyBroken ? 'fail' : 'done';
    this.isComplete = true;
    this.emitEvent(eventName, [this]);
    this.emitEvent('always', [this]);

    if (this.jqDeferred) {
      var jqMethod = this.hasAnyBroken ? 'reject' : 'resolve';
      this.jqDeferred[jqMethod](this);
    }
  }; // --------------------------  -------------------------- //


  function LoadingImage(img) {
    this.img = img;
  }

  LoadingImage.prototype = Object.create(EvEmitter.prototype);

  LoadingImage.prototype.check = function () {
    // If complete is true and browser supports natural sizes,
    // try to check for image status manually.
    var isComplete = this.getIsImageComplete();

    if (isComplete) {
      // report based on naturalWidth
      this.confirm(this.img.naturalWidth !== 0, 'naturalWidth');
      return;
    } // If none of the checks above matched, simulate loading on detached element.


    this.proxyImage = new Image();
    this.proxyImage.addEventListener('load', this);
    this.proxyImage.addEventListener('error', this); // bind to image as well for Firefox. #191

    this.img.addEventListener('load', this);
    this.img.addEventListener('error', this);
    this.proxyImage.src = this.img.src;
  };

  LoadingImage.prototype.getIsImageComplete = function () {
    return this.img.complete && this.img.naturalWidth !== undefined;
  };

  LoadingImage.prototype.confirm = function (isLoaded, message) {
    this.isLoaded = isLoaded;
    this.emitEvent('progress', [this, this.img, message]);
  }; // ----- events ----- //
  // trigger specified handler for event type


  LoadingImage.prototype.handleEvent = function (event) {
    var method = 'on' + event.type;

    if (this[method]) {
      this[method](event);
    }
  };

  LoadingImage.prototype.onload = function () {
    this.confirm(true, 'onload');
    this.unbindEvents();
  };

  LoadingImage.prototype.onerror = function () {
    this.confirm(false, 'onerror');
    this.unbindEvents();
  };

  LoadingImage.prototype.unbindEvents = function () {
    this.proxyImage.removeEventListener('load', this);
    this.proxyImage.removeEventListener('error', this);
    this.img.removeEventListener('load', this);
    this.img.removeEventListener('error', this);
  }; // -------------------------- Background -------------------------- //


  function Background(url, element) {
    this.url = url;
    this.element = element;
    this.img = new Image();
  } // inherit LoadingImage prototype


  Background.prototype = Object.create(LoadingImage.prototype);

  Background.prototype.check = function () {
    this.img.addEventListener('load', this);
    this.img.addEventListener('error', this);
    this.img.src = this.url; // check if image is already complete

    var isComplete = this.getIsImageComplete();

    if (isComplete) {
      this.confirm(this.img.naturalWidth !== 0, 'naturalWidth');
      this.unbindEvents();
    }
  };

  Background.prototype.unbindEvents = function () {
    this.img.removeEventListener('load', this);
    this.img.removeEventListener('error', this);
  };

  Background.prototype.confirm = function (isLoaded, message) {
    this.isLoaded = isLoaded;
    this.emitEvent('progress', [this, this.element, message]);
  }; // -------------------------- jQuery -------------------------- //


  ImagesLoaded.makeJQueryPlugin = function (jQuery) {
    jQuery = jQuery || window.jQuery;

    if (!jQuery) {
      return;
    } // set local variable


    $ = jQuery; // $().imagesLoaded()

    $.fn.imagesLoaded = function (options, callback) {
      var instance = new ImagesLoaded(this, options, callback);
      return instance.jqDeferred.promise($(this));
    };
  }; // try making plugin


  ImagesLoaded.makeJQueryPlugin(); // --------------------------  -------------------------- //

  return ImagesLoaded;
});"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*
     _ _      _       _
 ___| (_) ___| | __  (_)___
/ __| | |/ __| |/ /  | / __|
\__ \ | | (__|   < _ | \__ \
|___/_|_|\___|_|\_(_)/ |___/
                   |__/

 Version: 1.6.0
  Author: Ken Wheeler
 Website: http://kenwheeler.github.io
    Docs: http://kenwheeler.github.io/slick
    Repo: http://github.com/kenwheeler/slick
  Issues: http://github.com/kenwheeler/slick/issues

 */

/* global window, document, define, jQuery, setInterval, clearInterval */
(function (factory) {
  'use strict';

  if (typeof define === 'function' && define.amd) {
    define(['jquery'], factory);
  } else if (typeof exports !== 'undefined') {
    module.exports = factory(require('jquery'));
  } else {
    factory(jQuery);
  }
})(function ($) {
  'use strict';

  var Slick = window.Slick || {};

  Slick = function () {
    var instanceUid = 0;

    function Slick(element, settings) {
      var _ = this,
          dataSettings;

      _.defaults = {
        accessibility: true,
        adaptiveHeight: false,
        appendArrows: $(element),
        appendDots: $(element),
        arrows: true,
        asNavFor: null,
        prevArrow: '<button type="button" data-role="none" class="slick-prev" aria-label="Previous" tabindex="0" role="button">Previous</button>',
        nextArrow: '<button type="button" data-role="none" class="slick-next" aria-label="Next" tabindex="0" role="button">Next</button>',
        autoplay: false,
        autoplaySpeed: 3000,
        centerMode: false,
        centerPadding: '50px',
        cssEase: 'ease',
        customPaging: function customPaging(slider, i) {
          return $('<button type="button" data-role="none" role="button" tabindex="0" />').text(i + 1);
        },
        dots: false,
        dotsClass: 'slick-dots',
        draggable: true,
        easing: 'linear',
        edgeFriction: 0.35,
        fade: false,
        focusOnSelect: false,
        infinite: true,
        initialSlide: 0,
        lazyLoad: 'ondemand',
        mobileFirst: false,
        pauseOnHover: true,
        pauseOnFocus: true,
        pauseOnDotsHover: false,
        respondTo: 'window',
        responsive: null,
        rows: 1,
        rtl: false,
        slide: '',
        slidesPerRow: 1,
        slidesToShow: 1,
        slidesToScroll: 1,
        speed: 500,
        swipe: true,
        swipeToSlide: false,
        touchMove: true,
        touchThreshold: 5,
        useCSS: true,
        useTransform: true,
        variableWidth: false,
        vertical: false,
        verticalSwiping: false,
        waitForAnimate: true,
        zIndex: 1000
      };
      _.initials = {
        animating: false,
        dragging: false,
        autoPlayTimer: null,
        currentDirection: 0,
        currentLeft: null,
        currentSlide: 0,
        direction: 1,
        $dots: null,
        listWidth: null,
        listHeight: null,
        loadIndex: 0,
        $nextArrow: null,
        $prevArrow: null,
        slideCount: null,
        slideWidth: null,
        $slideTrack: null,
        $slides: null,
        sliding: false,
        slideOffset: 0,
        swipeLeft: null,
        $list: null,
        touchObject: {},
        transformsEnabled: false,
        unslicked: false
      };
      $.extend(_, _.initials);
      _.activeBreakpoint = null;
      _.animType = null;
      _.animProp = null;
      _.breakpoints = [];
      _.breakpointSettings = [];
      _.cssTransitions = false;
      _.focussed = false;
      _.interrupted = false;
      _.hidden = 'hidden';
      _.paused = true;
      _.positionProp = null;
      _.respondTo = null;
      _.rowCount = 1;
      _.shouldClick = true;
      _.$slider = $(element);
      _.$slidesCache = null;
      _.transformType = null;
      _.transitionType = null;
      _.visibilityChange = 'visibilitychange';
      _.windowWidth = 0;
      _.windowTimer = null;
      dataSettings = $(element).data('slick') || {};
      _.options = $.extend({}, _.defaults, settings, dataSettings);
      _.currentSlide = _.options.initialSlide;
      _.originalSettings = _.options;

      if (typeof document.mozHidden !== 'undefined') {
        _.hidden = 'mozHidden';
        _.visibilityChange = 'mozvisibilitychange';
      } else if (typeof document.webkitHidden !== 'undefined') {
        _.hidden = 'webkitHidden';
        _.visibilityChange = 'webkitvisibilitychange';
      }

      _.autoPlay = $.proxy(_.autoPlay, _);
      _.autoPlayClear = $.proxy(_.autoPlayClear, _);
      _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);
      _.changeSlide = $.proxy(_.changeSlide, _);
      _.clickHandler = $.proxy(_.clickHandler, _);
      _.selectHandler = $.proxy(_.selectHandler, _);
      _.setPosition = $.proxy(_.setPosition, _);
      _.swipeHandler = $.proxy(_.swipeHandler, _);
      _.dragHandler = $.proxy(_.dragHandler, _);
      _.keyHandler = $.proxy(_.keyHandler, _);
      _.instanceUid = instanceUid++; // A simple way to check for HTML strings
      // Strict HTML recognition (must start with <)
      // Extracted from jQuery v1.11 source

      _.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/;

      _.registerBreakpoints();

      _.init(true);
    }

    return Slick;
  }();

  Slick.prototype.activateADA = function () {
    var _ = this;

    _.$slideTrack.find('.slick-active').attr({
      'aria-hidden': 'false'
    }).find('a, input, button, select').attr({
      'tabindex': '0'
    });
  };

  Slick.prototype.addSlide = Slick.prototype.slickAdd = function (markup, index, addBefore) {
    var _ = this;

    if (typeof index === 'boolean') {
      addBefore = index;
      index = null;
    } else if (index < 0 || index >= _.slideCount) {
      return false;
    }

    _.unload();

    if (typeof index === 'number') {
      if (index === 0 && _.$slides.length === 0) {
        $(markup).appendTo(_.$slideTrack);
      } else if (addBefore) {
        $(markup).insertBefore(_.$slides.eq(index));
      } else {
        $(markup).insertAfter(_.$slides.eq(index));
      }
    } else {
      if (addBefore === true) {
        $(markup).prependTo(_.$slideTrack);
      } else {
        $(markup).appendTo(_.$slideTrack);
      }
    }

    _.$slides = _.$slideTrack.children(this.options.slide);

    _.$slideTrack.children(this.options.slide).detach();

    _.$slideTrack.append(_.$slides);

    _.$slides.each(function (index, element) {
      $(element).attr('data-slick-index', index);
    });

    _.$slidesCache = _.$slides;

    _.reinit();
  };

  Slick.prototype.animateHeight = function () {
    var _ = this;

    if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {
      var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);

      _.$list.animate({
        height: targetHeight
      }, _.options.speed);
    }
  };

  Slick.prototype.animateSlide = function (targetLeft, callback) {
    var animProps = {},
        _ = this;

    _.animateHeight();

    if (_.options.rtl === true && _.options.vertical === false) {
      targetLeft = -targetLeft;
    }

    if (_.transformsEnabled === false) {
      if (_.options.vertical === false) {
        _.$slideTrack.animate({
          left: targetLeft
        }, _.options.speed, _.options.easing, callback);
      } else {
        _.$slideTrack.animate({
          top: targetLeft
        }, _.options.speed, _.options.easing, callback);
      }
    } else {
      if (_.cssTransitions === false) {
        if (_.options.rtl === true) {
          _.currentLeft = -_.currentLeft;
        }

        $({
          animStart: _.currentLeft
        }).animate({
          animStart: targetLeft
        }, {
          duration: _.options.speed,
          easing: _.options.easing,
          step: function step(now) {
            now = Math.ceil(now);

            if (_.options.vertical === false) {
              animProps[_.animType] = 'translate(' + now + 'px, 0px)';

              _.$slideTrack.css(animProps);
            } else {
              animProps[_.animType] = 'translate(0px,' + now + 'px)';

              _.$slideTrack.css(animProps);
            }
          },
          complete: function complete() {
            if (callback) {
              callback.call();
            }
          }
        });
      } else {
        _.applyTransition();

        targetLeft = Math.ceil(targetLeft);

        if (_.options.vertical === false) {
          animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';
        } else {
          animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';
        }

        _.$slideTrack.css(animProps);

        if (callback) {
          setTimeout(function () {
            _.disableTransition();

            callback.call();
          }, _.options.speed);
        }
      }
    }
  };

  Slick.prototype.getNavTarget = function () {
    var _ = this,
        asNavFor = _.options.asNavFor;

    if (asNavFor && asNavFor !== null) {
      asNavFor = $(asNavFor).not(_.$slider);
    }

    return asNavFor;
  };

  Slick.prototype.asNavFor = function (index) {
    var _ = this,
        asNavFor = _.getNavTarget();

    if (asNavFor !== null && _typeof(asNavFor) === 'object') {
      asNavFor.each(function () {
        var target = $(this).slick('getSlick');

        if (!target.unslicked) {
          target.slideHandler(index, true);
        }
      });
    }
  };

  Slick.prototype.applyTransition = function (slide) {
    var _ = this,
        transition = {};

    if (_.options.fade === false) {
      transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;
    } else {
      transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;
    }

    if (_.options.fade === false) {
      _.$slideTrack.css(transition);
    } else {
      _.$slides.eq(slide).css(transition);
    }
  };

  Slick.prototype.autoPlay = function () {
    var _ = this;

    _.autoPlayClear();

    if (_.slideCount > _.options.slidesToShow) {
      _.autoPlayTimer = setInterval(_.autoPlayIterator, _.options.autoplaySpeed);
    }
  };

  Slick.prototype.autoPlayClear = function () {
    var _ = this;

    if (_.autoPlayTimer) {
      clearInterval(_.autoPlayTimer);
    }
  };

  Slick.prototype.autoPlayIterator = function () {
    var _ = this,
        slideTo = _.currentSlide + _.options.slidesToScroll;

    if (!_.paused && !_.interrupted && !_.focussed) {
      if (_.options.infinite === false) {
        if (_.direction === 1 && _.currentSlide + 1 === _.slideCount - 1) {
          _.direction = 0;
        } else if (_.direction === 0) {
          slideTo = _.currentSlide - _.options.slidesToScroll;

          if (_.currentSlide - 1 === 0) {
            _.direction = 1;
          }
        }
      }

      _.slideHandler(slideTo);
    }
  };

  Slick.prototype.buildArrows = function () {
    var _ = this;

    if (_.options.arrows === true) {
      _.$prevArrow = $(_.options.prevArrow).addClass('slick-arrow');
      _.$nextArrow = $(_.options.nextArrow).addClass('slick-arrow');

      if (_.slideCount > _.options.slidesToShow) {
        _.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');

        _.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');

        if (_.htmlExpr.test(_.options.prevArrow)) {
          _.$prevArrow.prependTo(_.options.appendArrows);
        }

        if (_.htmlExpr.test(_.options.nextArrow)) {
          _.$nextArrow.appendTo(_.options.appendArrows);
        }

        if (_.options.infinite !== true) {
          _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');
        }
      } else {
        _.$prevArrow.add(_.$nextArrow).addClass('slick-hidden').attr({
          'aria-disabled': 'true',
          'tabindex': '-1'
        });
      }
    }
  };

  Slick.prototype.buildDots = function () {
    var _ = this,
        i,
        dot;

    if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {
      _.$slider.addClass('slick-dotted');

      dot = $('<ul />').addClass(_.options.dotsClass);

      for (i = 0; i <= _.getDotCount(); i += 1) {
        dot.append($('<li />').append(_.options.customPaging.call(this, _, i)));
      }

      _.$dots = dot.appendTo(_.options.appendDots);

      _.$dots.find('li').first().addClass('slick-active').attr('aria-hidden', 'false');
    }
  };

  Slick.prototype.buildOut = function () {
    var _ = this;

    _.$slides = _.$slider.children(_.options.slide + ':not(.slick-cloned)').addClass('slick-slide');
    _.slideCount = _.$slides.length;

    _.$slides.each(function (index, element) {
      $(element).attr('data-slick-index', index).data('originalStyling', $(element).attr('style') || '');
    });

    _.$slider.addClass('slick-slider');

    _.$slideTrack = _.slideCount === 0 ? $('<div class="slick-track"/>').appendTo(_.$slider) : _.$slides.wrapAll('<div class="slick-track"/>').parent();
    _.$list = _.$slideTrack.wrap('<div aria-live="polite" class="slick-list"/>').parent();

    _.$slideTrack.css('opacity', 0);

    if (_.options.centerMode === true || _.options.swipeToSlide === true) {
      _.options.slidesToScroll = 1;
    }

    $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');

    _.setupInfinite();

    _.buildArrows();

    _.buildDots();

    _.updateDots();

    _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);

    if (_.options.draggable === true) {
      _.$list.addClass('draggable');
    }
  };

  Slick.prototype.buildRows = function () {
    var _ = this,
        a,
        b,
        c,
        newSlides,
        numOfSlides,
        originalSlides,
        slidesPerSection;

    newSlides = document.createDocumentFragment();
    originalSlides = _.$slider.children();

    if (_.options.rows > 1) {
      slidesPerSection = _.options.slidesPerRow * _.options.rows;
      numOfSlides = Math.ceil(originalSlides.length / slidesPerSection);

      for (a = 0; a < numOfSlides; a++) {
        var slide = document.createElement('div');

        for (b = 0; b < _.options.rows; b++) {
          var row = document.createElement('div');

          for (c = 0; c < _.options.slidesPerRow; c++) {
            var target = a * slidesPerSection + (b * _.options.slidesPerRow + c);

            if (originalSlides.get(target)) {
              row.appendChild(originalSlides.get(target));
            }
          }

          slide.appendChild(row);
        }

        newSlides.appendChild(slide);
      }

      _.$slider.empty().append(newSlides);

      _.$slider.children().children().children().css({
        'width': 100 / _.options.slidesPerRow + '%',
        'display': 'inline-block'
      });
    }
  };

  Slick.prototype.checkResponsive = function (initial, forceUpdate) {
    var _ = this,
        breakpoint,
        targetBreakpoint,
        respondToWidth,
        triggerBreakpoint = false;

    var sliderWidth = _.$slider.width();

    var windowWidth = window.innerWidth || $(window).width();

    if (_.respondTo === 'window') {
      respondToWidth = windowWidth;
    } else if (_.respondTo === 'slider') {
      respondToWidth = sliderWidth;
    } else if (_.respondTo === 'min') {
      respondToWidth = Math.min(windowWidth, sliderWidth);
    }

    if (_.options.responsive && _.options.responsive.length && _.options.responsive !== null) {
      targetBreakpoint = null;

      for (breakpoint in _.breakpoints) {
        if (_.breakpoints.hasOwnProperty(breakpoint)) {
          if (_.originalSettings.mobileFirst === false) {
            if (respondToWidth < _.breakpoints[breakpoint]) {
              targetBreakpoint = _.breakpoints[breakpoint];
            }
          } else {
            if (respondToWidth > _.breakpoints[breakpoint]) {
              targetBreakpoint = _.breakpoints[breakpoint];
            }
          }
        }
      }

      if (targetBreakpoint !== null) {
        if (_.activeBreakpoint !== null) {
          if (targetBreakpoint !== _.activeBreakpoint || forceUpdate) {
            _.activeBreakpoint = targetBreakpoint;

            if (_.breakpointSettings[targetBreakpoint] === 'unslick') {
              _.unslick(targetBreakpoint);
            } else {
              _.options = $.extend({}, _.originalSettings, _.breakpointSettings[targetBreakpoint]);

              if (initial === true) {
                _.currentSlide = _.options.initialSlide;
              }

              _.refresh(initial);
            }

            triggerBreakpoint = targetBreakpoint;
          }
        } else {
          _.activeBreakpoint = targetBreakpoint;

          if (_.breakpointSettings[targetBreakpoint] === 'unslick') {
            _.unslick(targetBreakpoint);
          } else {
            _.options = $.extend({}, _.originalSettings, _.breakpointSettings[targetBreakpoint]);

            if (initial === true) {
              _.currentSlide = _.options.initialSlide;
            }

            _.refresh(initial);
          }

          triggerBreakpoint = targetBreakpoint;
        }
      } else {
        if (_.activeBreakpoint !== null) {
          _.activeBreakpoint = null;
          _.options = _.originalSettings;

          if (initial === true) {
            _.currentSlide = _.options.initialSlide;
          }

          _.refresh(initial);

          triggerBreakpoint = targetBreakpoint;
        }
      } // only trigger breakpoints during an actual break. not on initialize.


      if (!initial && triggerBreakpoint !== false) {
        _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);
      }
    }
  };

  Slick.prototype.changeSlide = function (event, dontAnimate) {
    var _ = this,
        $target = $(event.currentTarget),
        indexOffset,
        slideOffset,
        unevenOffset; // If target is a link, prevent default action.


    if ($target.is('a')) {
      event.preventDefault();
    } // If target is not the <li> element (ie: a child), find the <li>.


    if (!$target.is('li')) {
      $target = $target.closest('li');
    }

    unevenOffset = _.slideCount % _.options.slidesToScroll !== 0;
    indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;

    switch (event.data.message) {
      case 'previous':
        slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;

        if (_.slideCount > _.options.slidesToShow) {
          _.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);
        }

        break;

      case 'next':
        slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;

        if (_.slideCount > _.options.slidesToShow) {
          _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);
        }

        break;

      case 'index':
        var index = event.data.index === 0 ? 0 : event.data.index || $target.index() * _.options.slidesToScroll;

        _.slideHandler(_.checkNavigable(index), false, dontAnimate);

        $target.children().trigger('focus');
        break;

      default:
        return;
    }
  };

  Slick.prototype.checkNavigable = function (index) {
    var _ = this,
        navigables,
        prevNavigable;

    navigables = _.getNavigableIndexes();
    prevNavigable = 0;

    if (index > navigables[navigables.length - 1]) {
      index = navigables[navigables.length - 1];
    } else {
      for (var n in navigables) {
        if (index < navigables[n]) {
          index = prevNavigable;
          break;
        }

        prevNavigable = navigables[n];
      }
    }

    return index;
  };

  Slick.prototype.cleanUpEvents = function () {
    var _ = this;

    if (_.options.dots && _.$dots !== null) {
      $('li', _.$dots).off('click.slick', _.changeSlide).off('mouseenter.slick', $.proxy(_.interrupt, _, true)).off('mouseleave.slick', $.proxy(_.interrupt, _, false));
    }

    _.$slider.off('focus.slick blur.slick');

    if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
      _.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);
      _.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);
    }

    _.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);

    _.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);

    _.$list.off('touchend.slick mouseup.slick', _.swipeHandler);

    _.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);

    _.$list.off('click.slick', _.clickHandler);

    $(document).off(_.visibilityChange, _.visibility);

    _.cleanUpSlideEvents();

    if (_.options.accessibility === true) {
      _.$list.off('keydown.slick', _.keyHandler);
    }

    if (_.options.focusOnSelect === true) {
      $(_.$slideTrack).children().off('click.slick', _.selectHandler);
    }

    $(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);
    $(window).off('resize.slick.slick-' + _.instanceUid, _.resize);
    $('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);
    $(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);
    $(document).off('ready.slick.slick-' + _.instanceUid, _.setPosition);
  };

  Slick.prototype.cleanUpSlideEvents = function () {
    var _ = this;

    _.$list.off('mouseenter.slick', $.proxy(_.interrupt, _, true));

    _.$list.off('mouseleave.slick', $.proxy(_.interrupt, _, false));
  };

  Slick.prototype.cleanUpRows = function () {
    var _ = this,
        originalSlides;

    if (_.options.rows > 1) {
      originalSlides = _.$slides.children().children();
      originalSlides.removeAttr('style');

      _.$slider.empty().append(originalSlides);
    }
  };

  Slick.prototype.clickHandler = function (event) {
    var _ = this;

    if (_.shouldClick === false) {
      event.stopImmediatePropagation();
      event.stopPropagation();
      event.preventDefault();
    }
  };

  Slick.prototype.destroy = function (refresh) {
    var _ = this;

    _.autoPlayClear();

    _.touchObject = {};

    _.cleanUpEvents();

    $('.slick-cloned', _.$slider).detach();

    if (_.$dots) {
      _.$dots.remove();
    }

    if (_.$prevArrow && _.$prevArrow.length) {
      _.$prevArrow.removeClass('slick-disabled slick-arrow slick-hidden').removeAttr('aria-hidden aria-disabled tabindex').css('display', '');

      if (_.htmlExpr.test(_.options.prevArrow)) {
        _.$prevArrow.remove();
      }
    }

    if (_.$nextArrow && _.$nextArrow.length) {
      _.$nextArrow.removeClass('slick-disabled slick-arrow slick-hidden').removeAttr('aria-hidden aria-disabled tabindex').css('display', '');

      if (_.htmlExpr.test(_.options.nextArrow)) {
        _.$nextArrow.remove();
      }
    }

    if (_.$slides) {
      _.$slides.removeClass('slick-slide slick-active slick-center slick-visible slick-current').removeAttr('aria-hidden').removeAttr('data-slick-index').each(function () {
        $(this).attr('style', $(this).data('originalStyling'));
      });

      _.$slideTrack.children(this.options.slide).detach();

      _.$slideTrack.detach();

      _.$list.detach();

      _.$slider.append(_.$slides);
    }

    _.cleanUpRows();

    _.$slider.removeClass('slick-slider');

    _.$slider.removeClass('slick-initialized');

    _.$slider.removeClass('slick-dotted');

    _.unslicked = true;

    if (!refresh) {
      _.$slider.trigger('destroy', [_]);
    }
  };

  Slick.prototype.disableTransition = function (slide) {
    var _ = this,
        transition = {};

    transition[_.transitionType] = '';

    if (_.options.fade === false) {
      _.$slideTrack.css(transition);
    } else {
      _.$slides.eq(slide).css(transition);
    }
  };

  Slick.prototype.fadeSlide = function (slideIndex, callback) {
    var _ = this;

    if (_.cssTransitions === false) {
      _.$slides.eq(slideIndex).css({
        zIndex: _.options.zIndex
      });

      _.$slides.eq(slideIndex).animate({
        opacity: 1
      }, _.options.speed, _.options.easing, callback);
    } else {
      _.applyTransition(slideIndex);

      _.$slides.eq(slideIndex).css({
        opacity: 1,
        zIndex: _.options.zIndex
      });

      if (callback) {
        setTimeout(function () {
          _.disableTransition(slideIndex);

          callback.call();
        }, _.options.speed);
      }
    }
  };

  Slick.prototype.fadeSlideOut = function (slideIndex) {
    var _ = this;

    if (_.cssTransitions === false) {
      _.$slides.eq(slideIndex).animate({
        opacity: 0,
        zIndex: _.options.zIndex - 2
      }, _.options.speed, _.options.easing);
    } else {
      _.applyTransition(slideIndex);

      _.$slides.eq(slideIndex).css({
        opacity: 0,
        zIndex: _.options.zIndex - 2
      });
    }
  };

  Slick.prototype.filterSlides = Slick.prototype.slickFilter = function (filter) {
    var _ = this;

    if (filter !== null) {
      _.$slidesCache = _.$slides;

      _.unload();

      _.$slideTrack.children(this.options.slide).detach();

      _.$slidesCache.filter(filter).appendTo(_.$slideTrack);

      _.reinit();
    }
  };

  Slick.prototype.focusHandler = function () {
    var _ = this;

    _.$slider.off('focus.slick blur.slick').on('focus.slick blur.slick', '*:not(.slick-arrow)', function (event) {
      event.stopImmediatePropagation();
      var $sf = $(this);
      setTimeout(function () {
        if (_.options.pauseOnFocus) {
          _.focussed = $sf.is(':focus');

          _.autoPlay();
        }
      }, 0);
    });
  };

  Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function () {
    var _ = this;

    return _.currentSlide;
  };

  Slick.prototype.getDotCount = function () {
    var _ = this;

    var breakPoint = 0;
    var counter = 0;
    var pagerQty = 0;

    if (_.options.infinite === true) {
      while (breakPoint < _.slideCount) {
        ++pagerQty;
        breakPoint = counter + _.options.slidesToScroll;
        counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
      }
    } else if (_.options.centerMode === true) {
      pagerQty = _.slideCount;
    } else if (!_.options.asNavFor) {
      pagerQty = 1 + Math.ceil((_.slideCount - _.options.slidesToShow) / _.options.slidesToScroll);
    } else {
      while (breakPoint < _.slideCount) {
        ++pagerQty;
        breakPoint = counter + _.options.slidesToScroll;
        counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
      }
    }

    return pagerQty - 1;
  };

  Slick.prototype.getLeft = function (slideIndex) {
    var _ = this,
        targetLeft,
        verticalHeight,
        verticalOffset = 0,
        targetSlide;

    _.slideOffset = 0;
    verticalHeight = _.$slides.first().outerHeight(true);

    if (_.options.infinite === true) {
      if (_.slideCount > _.options.slidesToShow) {
        _.slideOffset = _.slideWidth * _.options.slidesToShow * -1;
        verticalOffset = verticalHeight * _.options.slidesToShow * -1;
      }

      if (_.slideCount % _.options.slidesToScroll !== 0) {
        if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {
          if (slideIndex > _.slideCount) {
            _.slideOffset = (_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth * -1;
            verticalOffset = (_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight * -1;
          } else {
            _.slideOffset = _.slideCount % _.options.slidesToScroll * _.slideWidth * -1;
            verticalOffset = _.slideCount % _.options.slidesToScroll * verticalHeight * -1;
          }
        }
      }
    } else {
      if (slideIndex + _.options.slidesToShow > _.slideCount) {
        _.slideOffset = (slideIndex + _.options.slidesToShow - _.slideCount) * _.slideWidth;
        verticalOffset = (slideIndex + _.options.slidesToShow - _.slideCount) * verticalHeight;
      }
    }

    if (_.slideCount <= _.options.slidesToShow) {
      _.slideOffset = 0;
      verticalOffset = 0;
    }

    if (_.options.centerMode === true && _.options.infinite === true) {
      _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;
    } else if (_.options.centerMode === true) {
      _.slideOffset = 0;
      _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);
    }

    if (_.options.vertical === false) {
      targetLeft = slideIndex * _.slideWidth * -1 + _.slideOffset;
    } else {
      targetLeft = slideIndex * verticalHeight * -1 + verticalOffset;
    }

    if (_.options.variableWidth === true) {
      if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {
        targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);
      } else {
        targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);
      }

      if (_.options.rtl === true) {
        if (targetSlide[0]) {
          targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;
        } else {
          targetLeft = 0;
        }
      } else {
        targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;
      }

      if (_.options.centerMode === true) {
        if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {
          targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);
        } else {
          targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);
        }

        if (_.options.rtl === true) {
          if (targetSlide[0]) {
            targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;
          } else {
            targetLeft = 0;
          }
        } else {
          targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;
        }

        targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;
      }
    }

    return targetLeft;
  };

  Slick.prototype.getOption = Slick.prototype.slickGetOption = function (option) {
    var _ = this;

    return _.options[option];
  };

  Slick.prototype.getNavigableIndexes = function () {
    var _ = this,
        breakPoint = 0,
        counter = 0,
        indexes = [],
        max;

    if (_.options.infinite === false) {
      max = _.slideCount;
    } else {
      breakPoint = _.options.slidesToScroll * -1;
      counter = _.options.slidesToScroll * -1;
      max = _.slideCount * 2;
    }

    while (breakPoint < max) {
      indexes.push(breakPoint);
      breakPoint = counter + _.options.slidesToScroll;
      counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
    }

    return indexes;
  };

  Slick.prototype.getSlick = function () {
    return this;
  };

  Slick.prototype.getSlideCount = function () {
    var _ = this,
        slidesTraversed,
        swipedSlide,
        centerOffset;

    centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;

    if (_.options.swipeToSlide === true) {
      _.$slideTrack.find('.slick-slide').each(function (index, slide) {
        if (slide.offsetLeft - centerOffset + $(slide).outerWidth() / 2 > _.swipeLeft * -1) {
          swipedSlide = slide;
          return false;
        }
      });

      slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;
      return slidesTraversed;
    } else {
      return _.options.slidesToScroll;
    }
  };

  Slick.prototype.goTo = Slick.prototype.slickGoTo = function (slide, dontAnimate) {
    var _ = this;

    _.changeSlide({
      data: {
        message: 'index',
        index: parseInt(slide)
      }
    }, dontAnimate);
  };

  Slick.prototype.init = function (creation) {
    var _ = this;

    if (!$(_.$slider).hasClass('slick-initialized')) {
      $(_.$slider).addClass('slick-initialized');

      _.buildRows();

      _.buildOut();

      _.setProps();

      _.startLoad();

      _.loadSlider();

      _.initializeEvents();

      _.updateArrows();

      _.updateDots();

      _.checkResponsive(true);

      _.focusHandler();
    }

    if (creation) {
      _.$slider.trigger('init', [_]);
    }

    if (_.options.accessibility === true) {
      _.initADA();
    }

    if (_.options.autoplay) {
      _.paused = false;

      _.autoPlay();
    }
  };

  Slick.prototype.initADA = function () {
    var _ = this;

    _.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({
      'aria-hidden': 'true',
      'tabindex': '-1'
    }).find('a, input, button, select').attr({
      'tabindex': '-1'
    });

    _.$slideTrack.attr('role', 'listbox');

    _.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function (i) {
      $(this).attr({
        'role': 'option',
        'aria-describedby': 'slick-slide' + _.instanceUid + i + ''
      });
    });

    if (_.$dots !== null) {
      _.$dots.attr('role', 'tablist').find('li').each(function (i) {
        $(this).attr({
          'role': 'presentation',
          'aria-selected': 'false',
          'aria-controls': 'navigation' + _.instanceUid + i + '',
          'id': 'slick-slide' + _.instanceUid + i + ''
        });
      }).first().attr('aria-selected', 'true').end().find('button').attr('role', 'button').end().closest('div').attr('role', 'toolbar');
    }

    _.activateADA();
  };

  Slick.prototype.initArrowEvents = function () {
    var _ = this;

    if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
      _.$prevArrow.off('click.slick').on('click.slick', {
        message: 'previous'
      }, _.changeSlide);

      _.$nextArrow.off('click.slick').on('click.slick', {
        message: 'next'
      }, _.changeSlide);
    }
  };

  Slick.prototype.initDotEvents = function () {
    var _ = this;

    if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {
      $('li', _.$dots).on('click.slick', {
        message: 'index'
      }, _.changeSlide);
    }

    if (_.options.dots === true && _.options.pauseOnDotsHover === true) {
      $('li', _.$dots).on('mouseenter.slick', $.proxy(_.interrupt, _, true)).on('mouseleave.slick', $.proxy(_.interrupt, _, false));
    }
  };

  Slick.prototype.initSlideEvents = function () {
    var _ = this;

    if (_.options.pauseOnHover) {
      _.$list.on('mouseenter.slick', $.proxy(_.interrupt, _, true));

      _.$list.on('mouseleave.slick', $.proxy(_.interrupt, _, false));
    }
  };

  Slick.prototype.initializeEvents = function () {
    var _ = this;

    _.initArrowEvents();

    _.initDotEvents();

    _.initSlideEvents();

    _.$list.on('touchstart.slick mousedown.slick', {
      action: 'start'
    }, _.swipeHandler);

    _.$list.on('touchmove.slick mousemove.slick', {
      action: 'move'
    }, _.swipeHandler);

    _.$list.on('touchend.slick mouseup.slick', {
      action: 'end'
    }, _.swipeHandler);

    _.$list.on('touchcancel.slick mouseleave.slick', {
      action: 'end'
    }, _.swipeHandler);

    _.$list.on('click.slick', _.clickHandler);

    $(document).on(_.visibilityChange, $.proxy(_.visibility, _));

    if (_.options.accessibility === true) {
      _.$list.on('keydown.slick', _.keyHandler);
    }

    if (_.options.focusOnSelect === true) {
      $(_.$slideTrack).children().on('click.slick', _.selectHandler);
    }

    $(window).on('orientationchange.slick.slick-' + _.instanceUid, $.proxy(_.orientationChange, _));
    $(window).on('resize.slick.slick-' + _.instanceUid, $.proxy(_.resize, _));
    $('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);
    $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);
    $(document).on('ready.slick.slick-' + _.instanceUid, _.setPosition);
  };

  Slick.prototype.initUI = function () {
    var _ = this;

    if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
      _.$prevArrow.show();

      _.$nextArrow.show();
    }

    if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {
      _.$dots.show();
    }
  };

  Slick.prototype.keyHandler = function (event) {
    var _ = this; //Dont slide if the cursor is inside the form fields and arrow keys are pressed


    if (!event.target.tagName.match('TEXTAREA|INPUT|SELECT')) {
      if (event.keyCode === 37 && _.options.accessibility === true) {
        _.changeSlide({
          data: {
            message: _.options.rtl === true ? 'next' : 'previous'
          }
        });
      } else if (event.keyCode === 39 && _.options.accessibility === true) {
        _.changeSlide({
          data: {
            message: _.options.rtl === true ? 'previous' : 'next'
          }
        });
      }
    }
  };

  Slick.prototype.lazyLoad = function () {
    var _ = this,
        loadRange,
        cloneRange,
        rangeStart,
        rangeEnd;

    function loadImages(imagesScope) {
      $('img[data-lazy]', imagesScope).each(function () {
        var image = $(this),
            imageSource = $(this).attr('data-lazy'),
            imageToLoad = document.createElement('img');

        imageToLoad.onload = function () {
          image.animate({
            opacity: 0
          }, 100, function () {
            image.attr('src', imageSource).animate({
              opacity: 1
            }, 200, function () {
              image.removeAttr('data-lazy').removeClass('slick-loading');
            });

            _.$slider.trigger('lazyLoaded', [_, image, imageSource]);
          });
        };

        imageToLoad.onerror = function () {
          image.removeAttr('data-lazy').removeClass('slick-loading').addClass('slick-lazyload-error');

          _.$slider.trigger('lazyLoadError', [_, image, imageSource]);
        };

        imageToLoad.src = imageSource;
      });
    }

    if (_.options.centerMode === true) {
      if (_.options.infinite === true) {
        rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);
        rangeEnd = rangeStart + _.options.slidesToShow + 2;
      } else {
        rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));
        rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;
      }
    } else {
      rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;
      rangeEnd = Math.ceil(rangeStart + _.options.slidesToShow);

      if (_.options.fade === true) {
        if (rangeStart > 0) rangeStart--;
        if (rangeEnd <= _.slideCount) rangeEnd++;
      }
    }

    loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);
    loadImages(loadRange);

    if (_.slideCount <= _.options.slidesToShow) {
      cloneRange = _.$slider.find('.slick-slide');
      loadImages(cloneRange);
    } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {
      cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);
      loadImages(cloneRange);
    } else if (_.currentSlide === 0) {
      cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);
      loadImages(cloneRange);
    }
  };

  Slick.prototype.loadSlider = function () {
    var _ = this;

    _.setPosition();

    _.$slideTrack.css({
      opacity: 1
    });

    _.$slider.removeClass('slick-loading');

    _.initUI();

    if (_.options.lazyLoad === 'progressive') {
      _.progressiveLazyLoad();
    }
  };

  Slick.prototype.next = Slick.prototype.slickNext = function () {
    var _ = this;

    _.changeSlide({
      data: {
        message: 'next'
      }
    });
  };

  Slick.prototype.orientationChange = function () {
    var _ = this;

    _.checkResponsive();

    _.setPosition();
  };

  Slick.prototype.pause = Slick.prototype.slickPause = function () {
    var _ = this;

    _.autoPlayClear();

    _.paused = true;
  };

  Slick.prototype.play = Slick.prototype.slickPlay = function () {
    var _ = this;

    _.autoPlay();

    _.options.autoplay = true;
    _.paused = false;
    _.focussed = false;
    _.interrupted = false;
  };

  Slick.prototype.postSlide = function (index) {
    var _ = this;

    if (!_.unslicked) {
      _.$slider.trigger('afterChange', [_, index]);

      _.animating = false;

      _.setPosition();

      _.swipeLeft = null;

      if (_.options.autoplay) {
        _.autoPlay();
      }

      if (_.options.accessibility === true) {
        _.initADA();
      }
    }
  };

  Slick.prototype.prev = Slick.prototype.slickPrev = function () {
    var _ = this;

    _.changeSlide({
      data: {
        message: 'previous'
      }
    });
  };

  Slick.prototype.preventDefault = function (event) {
    event.preventDefault();
  };

  Slick.prototype.progressiveLazyLoad = function (tryCount) {
    tryCount = tryCount || 1;

    var _ = this,
        $imgsToLoad = $('img[data-lazy]', _.$slider),
        image,
        imageSource,
        imageToLoad;

    if ($imgsToLoad.length) {
      image = $imgsToLoad.first();
      imageSource = image.attr('data-lazy');
      imageToLoad = document.createElement('img');

      imageToLoad.onload = function () {
        image.attr('src', imageSource).removeAttr('data-lazy').removeClass('slick-loading');

        if (_.options.adaptiveHeight === true) {
          _.setPosition();
        }

        _.$slider.trigger('lazyLoaded', [_, image, imageSource]);

        _.progressiveLazyLoad();
      };

      imageToLoad.onerror = function () {
        if (tryCount < 3) {
          /**
           * try to load the image 3 times,
           * leave a slight delay so we don't get
           * servers blocking the request.
           */
          setTimeout(function () {
            _.progressiveLazyLoad(tryCount + 1);
          }, 500);
        } else {
          image.removeAttr('data-lazy').removeClass('slick-loading').addClass('slick-lazyload-error');

          _.$slider.trigger('lazyLoadError', [_, image, imageSource]);

          _.progressiveLazyLoad();
        }
      };

      imageToLoad.src = imageSource;
    } else {
      _.$slider.trigger('allImagesLoaded', [_]);
    }
  };

  Slick.prototype.refresh = function (initializing) {
    var _ = this,
        currentSlide,
        lastVisibleIndex;

    lastVisibleIndex = _.slideCount - _.options.slidesToShow; // in non-infinite sliders, we don't want to go past the
    // last visible index.

    if (!_.options.infinite && _.currentSlide > lastVisibleIndex) {
      _.currentSlide = lastVisibleIndex;
    } // if less slides than to show, go to start.


    if (_.slideCount <= _.options.slidesToShow) {
      _.currentSlide = 0;
    }

    currentSlide = _.currentSlide;

    _.destroy(true);

    $.extend(_, _.initials, {
      currentSlide: currentSlide
    });

    _.init();

    if (!initializing) {
      _.changeSlide({
        data: {
          message: 'index',
          index: currentSlide
        }
      }, false);
    }
  };

  Slick.prototype.registerBreakpoints = function () {
    var _ = this,
        breakpoint,
        currentBreakpoint,
        l,
        responsiveSettings = _.options.responsive || null;

    if ($.type(responsiveSettings) === 'array' && responsiveSettings.length) {
      _.respondTo = _.options.respondTo || 'window';

      for (breakpoint in responsiveSettings) {
        l = _.breakpoints.length - 1;
        currentBreakpoint = responsiveSettings[breakpoint].breakpoint;

        if (responsiveSettings.hasOwnProperty(breakpoint)) {
          // loop through the breakpoints and cut out any existing
          // ones with the same breakpoint number, we don't want dupes.
          while (l >= 0) {
            if (_.breakpoints[l] && _.breakpoints[l] === currentBreakpoint) {
              _.breakpoints.splice(l, 1);
            }

            l--;
          }

          _.breakpoints.push(currentBreakpoint);

          _.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;
        }
      }

      _.breakpoints.sort(function (a, b) {
        return _.options.mobileFirst ? a - b : b - a;
      });
    }
  };

  Slick.prototype.reinit = function () {
    var _ = this;

    _.$slides = _.$slideTrack.children(_.options.slide).addClass('slick-slide');
    _.slideCount = _.$slides.length;

    if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {
      _.currentSlide = _.currentSlide - _.options.slidesToScroll;
    }

    if (_.slideCount <= _.options.slidesToShow) {
      _.currentSlide = 0;
    }

    _.registerBreakpoints();

    _.setProps();

    _.setupInfinite();

    _.buildArrows();

    _.updateArrows();

    _.initArrowEvents();

    _.buildDots();

    _.updateDots();

    _.initDotEvents();

    _.cleanUpSlideEvents();

    _.initSlideEvents();

    _.checkResponsive(false, true);

    if (_.options.focusOnSelect === true) {
      $(_.$slideTrack).children().on('click.slick', _.selectHandler);
    }

    _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);

    _.setPosition();

    _.focusHandler();

    _.paused = !_.options.autoplay;

    _.autoPlay();

    _.$slider.trigger('reInit', [_]);
  };

  Slick.prototype.resize = function () {
    var _ = this;

    if ($(window).width() !== _.windowWidth) {
      clearTimeout(_.windowDelay);
      _.windowDelay = window.setTimeout(function () {
        _.windowWidth = $(window).width();

        _.checkResponsive();

        if (!_.unslicked) {
          _.setPosition();
        }
      }, 50);
    }
  };

  Slick.prototype.removeSlide = Slick.prototype.slickRemove = function (index, removeBefore, removeAll) {
    var _ = this;

    if (typeof index === 'boolean') {
      removeBefore = index;
      index = removeBefore === true ? 0 : _.slideCount - 1;
    } else {
      index = removeBefore === true ? --index : index;
    }

    if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {
      return false;
    }

    _.unload();

    if (removeAll === true) {
      _.$slideTrack.children().remove();
    } else {
      _.$slideTrack.children(this.options.slide).eq(index).remove();
    }

    _.$slides = _.$slideTrack.children(this.options.slide);

    _.$slideTrack.children(this.options.slide).detach();

    _.$slideTrack.append(_.$slides);

    _.$slidesCache = _.$slides;

    _.reinit();
  };

  Slick.prototype.setCSS = function (position) {
    var _ = this,
        positionProps = {},
        x,
        y;

    if (_.options.rtl === true) {
      position = -position;
    }

    x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';
    y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';
    positionProps[_.positionProp] = position;

    if (_.transformsEnabled === false) {
      _.$slideTrack.css(positionProps);
    } else {
      positionProps = {};

      if (_.cssTransitions === false) {
        positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';

        _.$slideTrack.css(positionProps);
      } else {
        positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';

        _.$slideTrack.css(positionProps);
      }
    }
  };

  Slick.prototype.setDimensions = function () {
    var _ = this;

    if (_.options.vertical === false) {
      if (_.options.centerMode === true) {
        _.$list.css({
          padding: '0px ' + _.options.centerPadding
        });
      }
    } else {
      _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);

      if (_.options.centerMode === true) {
        _.$list.css({
          padding: _.options.centerPadding + ' 0px'
        });
      }
    }

    _.listWidth = _.$list.width();
    _.listHeight = _.$list.height();

    if (_.options.vertical === false && _.options.variableWidth === false) {
      _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);

      _.$slideTrack.width(Math.ceil(_.slideWidth * _.$slideTrack.children('.slick-slide').length));
    } else if (_.options.variableWidth === true) {
      _.$slideTrack.width(5000 * _.slideCount);
    } else {
      _.slideWidth = Math.ceil(_.listWidth);

      _.$slideTrack.height(Math.ceil(_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length));
    }

    var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();

    if (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);
  };

  Slick.prototype.setFade = function () {
    var _ = this,
        targetLeft;

    _.$slides.each(function (index, element) {
      targetLeft = _.slideWidth * index * -1;

      if (_.options.rtl === true) {
        $(element).css({
          position: 'relative',
          right: targetLeft,
          top: 0,
          zIndex: _.options.zIndex - 2,
          opacity: 0
        });
      } else {
        $(element).css({
          position: 'relative',
          left: targetLeft,
          top: 0,
          zIndex: _.options.zIndex - 2,
          opacity: 0
        });
      }
    });

    _.$slides.eq(_.currentSlide).css({
      zIndex: _.options.zIndex - 1,
      opacity: 1
    });
  };

  Slick.prototype.setHeight = function () {
    var _ = this;

    if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {
      var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);

      _.$list.css('height', targetHeight);
    }
  };

  Slick.prototype.setOption = Slick.prototype.slickSetOption = function () {
    /**
     * accepts arguments in format of:
     *
     *  - for changing a single option's value:
     *     .slick("setOption", option, value, refresh )
     *
     *  - for changing a set of responsive options:
     *     .slick("setOption", 'responsive', [{}, ...], refresh )
     *
     *  - for updating multiple values at once (not responsive)
     *     .slick("setOption", { 'option': value, ... }, refresh )
     */
    var _ = this,
        l,
        item,
        option,
        value,
        refresh = false,
        type;

    if ($.type(arguments[0]) === 'object') {
      option = arguments[0];
      refresh = arguments[1];
      type = 'multiple';
    } else if ($.type(arguments[0]) === 'string') {
      option = arguments[0];
      value = arguments[1];
      refresh = arguments[2];

      if (arguments[0] === 'responsive' && $.type(arguments[1]) === 'array') {
        type = 'responsive';
      } else if (typeof arguments[1] !== 'undefined') {
        type = 'single';
      }
    }

    if (type === 'single') {
      _.options[option] = value;
    } else if (type === 'multiple') {
      $.each(option, function (opt, val) {
        _.options[opt] = val;
      });
    } else if (type === 'responsive') {
      for (item in value) {
        if ($.type(_.options.responsive) !== 'array') {
          _.options.responsive = [value[item]];
        } else {
          l = _.options.responsive.length - 1; // loop through the responsive object and splice out duplicates.

          while (l >= 0) {
            if (_.options.responsive[l].breakpoint === value[item].breakpoint) {
              _.options.responsive.splice(l, 1);
            }

            l--;
          }

          _.options.responsive.push(value[item]);
        }
      }
    }

    if (refresh) {
      _.unload();

      _.reinit();
    }
  };

  Slick.prototype.setPosition = function () {
    var _ = this;

    _.setDimensions();

    _.setHeight();

    if (_.options.fade === false) {
      _.setCSS(_.getLeft(_.currentSlide));
    } else {
      _.setFade();
    }

    _.$slider.trigger('setPosition', [_]);
  };

  Slick.prototype.setProps = function () {
    var _ = this,
        bodyStyle = document.body.style;

    _.positionProp = _.options.vertical === true ? 'top' : 'left';

    if (_.positionProp === 'top') {
      _.$slider.addClass('slick-vertical');
    } else {
      _.$slider.removeClass('slick-vertical');
    }

    if (bodyStyle.WebkitTransition !== undefined || bodyStyle.MozTransition !== undefined || bodyStyle.msTransition !== undefined) {
      if (_.options.useCSS === true) {
        _.cssTransitions = true;
      }
    }

    if (_.options.fade) {
      if (typeof _.options.zIndex === 'number') {
        if (_.options.zIndex < 3) {
          _.options.zIndex = 3;
        }
      } else {
        _.options.zIndex = _.defaults.zIndex;
      }
    }

    if (bodyStyle.OTransform !== undefined) {
      _.animType = 'OTransform';
      _.transformType = '-o-transform';
      _.transitionType = 'OTransition';
      if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;
    }

    if (bodyStyle.MozTransform !== undefined) {
      _.animType = 'MozTransform';
      _.transformType = '-moz-transform';
      _.transitionType = 'MozTransition';
      if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;
    }

    if (bodyStyle.webkitTransform !== undefined) {
      _.animType = 'webkitTransform';
      _.transformType = '-webkit-transform';
      _.transitionType = 'webkitTransition';
      if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;
    }

    if (bodyStyle.msTransform !== undefined) {
      _.animType = 'msTransform';
      _.transformType = '-ms-transform';
      _.transitionType = 'msTransition';
      if (bodyStyle.msTransform === undefined) _.animType = false;
    }

    if (bodyStyle.transform !== undefined && _.animType !== false) {
      _.animType = 'transform';
      _.transformType = 'transform';
      _.transitionType = 'transition';
    }

    _.transformsEnabled = _.options.useTransform && _.animType !== null && _.animType !== false;
  };

  Slick.prototype.setSlideClasses = function (index) {
    var _ = this,
        centerOffset,
        allSlides,
        indexOffset,
        remainder;

    allSlides = _.$slider.find('.slick-slide').removeClass('slick-active slick-center slick-current').attr('aria-hidden', 'true');

    _.$slides.eq(index).addClass('slick-current');

    if (_.options.centerMode === true) {
      centerOffset = Math.floor(_.options.slidesToShow / 2);

      if (_.options.infinite === true) {
        if (index >= centerOffset && index <= _.slideCount - 1 - centerOffset) {
          _.$slides.slice(index - centerOffset, index + centerOffset + 1).addClass('slick-active').attr('aria-hidden', 'false');
        } else {
          indexOffset = _.options.slidesToShow + index;
          allSlides.slice(indexOffset - centerOffset + 1, indexOffset + centerOffset + 2).addClass('slick-active').attr('aria-hidden', 'false');
        }

        if (index === 0) {
          allSlides.eq(allSlides.length - 1 - _.options.slidesToShow).addClass('slick-center');
        } else if (index === _.slideCount - 1) {
          allSlides.eq(_.options.slidesToShow).addClass('slick-center');
        }
      }

      _.$slides.eq(index).addClass('slick-center');
    } else {
      if (index >= 0 && index <= _.slideCount - _.options.slidesToShow) {
        _.$slides.slice(index, index + _.options.slidesToShow).addClass('slick-active').attr('aria-hidden', 'false');
      } else if (allSlides.length <= _.options.slidesToShow) {
        allSlides.addClass('slick-active').attr('aria-hidden', 'false');
      } else {
        remainder = _.slideCount % _.options.slidesToShow;
        indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;

        if (_.options.slidesToShow == _.options.slidesToScroll && _.slideCount - index < _.options.slidesToShow) {
          allSlides.slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder).addClass('slick-active').attr('aria-hidden', 'false');
        } else {
          allSlides.slice(indexOffset, indexOffset + _.options.slidesToShow).addClass('slick-active').attr('aria-hidden', 'false');
        }
      }
    }

    if (_.options.lazyLoad === 'ondemand') {
      _.lazyLoad();
    }
  };

  Slick.prototype.setupInfinite = function () {
    var _ = this,
        i,
        slideIndex,
        infiniteCount;

    if (_.options.fade === true) {
      _.options.centerMode = false;
    }

    if (_.options.infinite === true && _.options.fade === false) {
      slideIndex = null;

      if (_.slideCount > _.options.slidesToShow) {
        if (_.options.centerMode === true) {
          infiniteCount = _.options.slidesToShow + 1;
        } else {
          infiniteCount = _.options.slidesToShow;
        }

        for (i = _.slideCount; i > _.slideCount - infiniteCount; i -= 1) {
          slideIndex = i - 1;
          $(_.$slides[slideIndex]).clone(true).attr('id', '').attr('data-slick-index', slideIndex - _.slideCount).prependTo(_.$slideTrack).addClass('slick-cloned');
        }

        for (i = 0; i < infiniteCount; i += 1) {
          slideIndex = i;
          $(_.$slides[slideIndex]).clone(true).attr('id', '').attr('data-slick-index', slideIndex + _.slideCount).appendTo(_.$slideTrack).addClass('slick-cloned');
        }

        _.$slideTrack.find('.slick-cloned').find('[id]').each(function () {
          $(this).attr('id', '');
        });
      }
    }
  };

  Slick.prototype.interrupt = function (toggle) {
    var _ = this;

    if (!toggle) {
      _.autoPlay();
    }

    _.interrupted = toggle;
  };

  Slick.prototype.selectHandler = function (event) {
    var _ = this;

    var targetElement = $(event.target).is('.slick-slide') ? $(event.target) : $(event.target).parents('.slick-slide');
    var index = parseInt(targetElement.attr('data-slick-index'));
    if (!index) index = 0;

    if (_.slideCount <= _.options.slidesToShow) {
      _.setSlideClasses(index);

      _.asNavFor(index);

      return;
    }

    _.slideHandler(index);
  };

  Slick.prototype.slideHandler = function (index, sync, dontAnimate) {
    var targetSlide,
        animSlide,
        oldSlide,
        slideLeft,
        targetLeft = null,
        _ = this,
        navTarget;

    sync = sync || false;

    if (_.animating === true && _.options.waitForAnimate === true) {
      return;
    }

    if (_.options.fade === true && _.currentSlide === index) {
      return;
    }

    if (_.slideCount <= _.options.slidesToShow) {
      return;
    }

    if (sync === false) {
      _.asNavFor(index);
    }

    targetSlide = index;
    targetLeft = _.getLeft(targetSlide);
    slideLeft = _.getLeft(_.currentSlide);
    _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;

    if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {
      if (_.options.fade === false) {
        targetSlide = _.currentSlide;

        if (dontAnimate !== true) {
          _.animateSlide(slideLeft, function () {
            _.postSlide(targetSlide);
          });
        } else {
          _.postSlide(targetSlide);
        }
      }

      return;
    } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > _.slideCount - _.options.slidesToScroll)) {
      if (_.options.fade === false) {
        targetSlide = _.currentSlide;

        if (dontAnimate !== true) {
          _.animateSlide(slideLeft, function () {
            _.postSlide(targetSlide);
          });
        } else {
          _.postSlide(targetSlide);
        }
      }

      return;
    }

    if (_.options.autoplay) {
      clearInterval(_.autoPlayTimer);
    }

    if (targetSlide < 0) {
      if (_.slideCount % _.options.slidesToScroll !== 0) {
        animSlide = _.slideCount - _.slideCount % _.options.slidesToScroll;
      } else {
        animSlide = _.slideCount + targetSlide;
      }
    } else if (targetSlide >= _.slideCount) {
      if (_.slideCount % _.options.slidesToScroll !== 0) {
        animSlide = 0;
      } else {
        animSlide = targetSlide - _.slideCount;
      }
    } else {
      animSlide = targetSlide;
    }

    _.animating = true;

    _.$slider.trigger('beforeChange', [_, _.currentSlide, animSlide]);

    oldSlide = _.currentSlide;
    _.currentSlide = animSlide;

    _.setSlideClasses(_.currentSlide);

    if (_.options.asNavFor) {
      navTarget = _.getNavTarget();
      navTarget = navTarget.slick('getSlick');

      if (navTarget.slideCount <= navTarget.options.slidesToShow) {
        navTarget.setSlideClasses(_.currentSlide);
      }
    }

    _.updateDots();

    _.updateArrows();

    if (_.options.fade === true) {
      if (dontAnimate !== true) {
        _.fadeSlideOut(oldSlide);

        _.fadeSlide(animSlide, function () {
          _.postSlide(animSlide);
        });
      } else {
        _.postSlide(animSlide);
      }

      _.animateHeight();

      return;
    }

    if (dontAnimate !== true) {
      _.animateSlide(targetLeft, function () {
        _.postSlide(animSlide);
      });
    } else {
      _.postSlide(animSlide);
    }
  };

  Slick.prototype.startLoad = function () {
    var _ = this;

    if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
      _.$prevArrow.hide();

      _.$nextArrow.hide();
    }

    if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {
      _.$dots.hide();
    }

    _.$slider.addClass('slick-loading');
  };

  Slick.prototype.swipeDirection = function () {
    var xDist,
        yDist,
        r,
        swipeAngle,
        _ = this;

    xDist = _.touchObject.startX - _.touchObject.curX;
    yDist = _.touchObject.startY - _.touchObject.curY;
    r = Math.atan2(yDist, xDist);
    swipeAngle = Math.round(r * 180 / Math.PI);

    if (swipeAngle < 0) {
      swipeAngle = 360 - Math.abs(swipeAngle);
    }

    if (swipeAngle <= 45 && swipeAngle >= 0) {
      return _.options.rtl === false ? 'left' : 'right';
    }

    if (swipeAngle <= 360 && swipeAngle >= 315) {
      return _.options.rtl === false ? 'left' : 'right';
    }

    if (swipeAngle >= 135 && swipeAngle <= 225) {
      return _.options.rtl === false ? 'right' : 'left';
    }

    if (_.options.verticalSwiping === true) {
      if (swipeAngle >= 35 && swipeAngle <= 135) {
        return 'down';
      } else {
        return 'up';
      }
    }

    return 'vertical';
  };

  Slick.prototype.swipeEnd = function (event) {
    var _ = this,
        slideCount,
        direction;

    _.dragging = false;
    _.interrupted = false;
    _.shouldClick = _.touchObject.swipeLength > 10 ? false : true;

    if (_.touchObject.curX === undefined) {
      return false;
    }

    if (_.touchObject.edgeHit === true) {
      _.$slider.trigger('edge', [_, _.swipeDirection()]);
    }

    if (_.touchObject.swipeLength >= _.touchObject.minSwipe) {
      direction = _.swipeDirection();

      switch (direction) {
        case 'left':
        case 'down':
          slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide + _.getSlideCount()) : _.currentSlide + _.getSlideCount();
          _.currentDirection = 0;
          break;

        case 'right':
        case 'up':
          slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide - _.getSlideCount()) : _.currentSlide - _.getSlideCount();
          _.currentDirection = 1;
          break;

        default:
      }

      if (direction != 'vertical') {
        _.slideHandler(slideCount);

        _.touchObject = {};

        _.$slider.trigger('swipe', [_, direction]);
      }
    } else {
      if (_.touchObject.startX !== _.touchObject.curX) {
        _.slideHandler(_.currentSlide);

        _.touchObject = {};
      }
    }
  };

  Slick.prototype.swipeHandler = function (event) {
    var _ = this;

    if (_.options.swipe === false || 'ontouchend' in document && _.options.swipe === false) {
      return;
    } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {
      return;
    }

    _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ? event.originalEvent.touches.length : 1;
    _.touchObject.minSwipe = _.listWidth / _.options.touchThreshold;

    if (_.options.verticalSwiping === true) {
      _.touchObject.minSwipe = _.listHeight / _.options.touchThreshold;
    }

    switch (event.data.action) {
      case 'start':
        _.swipeStart(event);

        break;

      case 'move':
        _.swipeMove(event);

        break;

      case 'end':
        _.swipeEnd(event);

        break;
    }
  };

  Slick.prototype.swipeMove = function (event) {
    var _ = this,
        edgeWasHit = false,
        curLeft,
        swipeDirection,
        swipeLength,
        positionOffset,
        touches;

    touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;

    if (!_.dragging || touches && touches.length !== 1) {
      return false;
    }

    curLeft = _.getLeft(_.currentSlide);
    _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;
    _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;
    _.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));

    if (_.options.verticalSwiping === true) {
      _.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(_.touchObject.curY - _.touchObject.startY, 2)));
    }

    swipeDirection = _.swipeDirection();

    if (swipeDirection === 'vertical') {
      return;
    }

    if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {
      event.preventDefault();
    }

    positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);

    if (_.options.verticalSwiping === true) {
      positionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;
    }

    swipeLength = _.touchObject.swipeLength;
    _.touchObject.edgeHit = false;

    if (_.options.infinite === false) {
      if (_.currentSlide === 0 && swipeDirection === 'right' || _.currentSlide >= _.getDotCount() && swipeDirection === 'left') {
        swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;
        _.touchObject.edgeHit = true;
      }
    }

    if (_.options.vertical === false) {
      _.swipeLeft = curLeft + swipeLength * positionOffset;
    } else {
      _.swipeLeft = curLeft + swipeLength * (_.$list.height() / _.listWidth) * positionOffset;
    }

    if (_.options.verticalSwiping === true) {
      _.swipeLeft = curLeft + swipeLength * positionOffset;
    }

    if (_.options.fade === true || _.options.touchMove === false) {
      return false;
    }

    if (_.animating === true) {
      _.swipeLeft = null;
      return false;
    }

    _.setCSS(_.swipeLeft);
  };

  Slick.prototype.swipeStart = function (event) {
    var _ = this,
        touches;

    _.interrupted = true;

    if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {
      _.touchObject = {};
      return false;
    }

    if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {
      touches = event.originalEvent.touches[0];
    }

    _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;
    _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;
    _.dragging = true;
  };

  Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function () {
    var _ = this;

    if (_.$slidesCache !== null) {
      _.unload();

      _.$slideTrack.children(this.options.slide).detach();

      _.$slidesCache.appendTo(_.$slideTrack);

      _.reinit();
    }
  };

  Slick.prototype.unload = function () {
    var _ = this;

    $('.slick-cloned', _.$slider).remove();

    if (_.$dots) {
      _.$dots.remove();
    }

    if (_.$prevArrow && _.htmlExpr.test(_.options.prevArrow)) {
      _.$prevArrow.remove();
    }

    if (_.$nextArrow && _.htmlExpr.test(_.options.nextArrow)) {
      _.$nextArrow.remove();
    }

    _.$slides.removeClass('slick-slide slick-active slick-visible slick-current').attr('aria-hidden', 'true').css('width', '');
  };

  Slick.prototype.unslick = function (fromBreakpoint) {
    var _ = this;

    _.$slider.trigger('unslick', [_, fromBreakpoint]);

    _.destroy();
  };

  Slick.prototype.updateArrows = function () {
    var _ = this,
        centerOffset;

    centerOffset = Math.floor(_.options.slidesToShow / 2);

    if (_.options.arrows === true && _.slideCount > _.options.slidesToShow && !_.options.infinite) {
      _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');

      _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');

      if (_.currentSlide === 0) {
        _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');

        _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');
      } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {
        _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');

        _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');
      } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {
        _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');

        _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');
      }
    }
  };

  Slick.prototype.updateDots = function () {
    var _ = this;

    if (_.$dots !== null) {
      _.$dots.find('li').removeClass('slick-active').attr('aria-hidden', 'true');

      _.$dots.find('li').eq(Math.floor(_.currentSlide / _.options.slidesToScroll)).addClass('slick-active').attr('aria-hidden', 'false');
    }
  };

  Slick.prototype.visibility = function () {
    var _ = this;

    if (_.options.autoplay) {
      if (document[_.hidden]) {
        _.interrupted = true;
      } else {
        _.interrupted = false;
      }
    }
  };

  $.fn.slick = function () {
    var _ = this,
        opt = arguments[0],
        args = Array.prototype.slice.call(arguments, 1),
        l = _.length,
        i,
        ret;

    for (i = 0; i < l; i++) {
      if (_typeof(opt) == 'object' || typeof opt == 'undefined') _[i].slick = new Slick(_[i], opt);else ret = _[i].slick[opt].apply(_[i].slick, args);
      if (typeof ret != 'undefined') return ret;
    }

    return _;
  };
});/*! fancyBox v2.1.5 fancyapps.com | fancyapps.com/fancybox/#license */
(function(r,G,f,v){var J=f("html"),n=f(r),p=f(G),b=f.fancybox=function(){b.open.apply(this,arguments)},I=navigator.userAgent.match(/msie/i),B=null,s=G.createTouch!==v,t=function(a){return a&&a.hasOwnProperty&&a instanceof f},q=function(a){return a&&"string"===f.type(a)},E=function(a){return q(a)&&0<a.indexOf("%")},l=function(a,d){var e=parseInt(a,10)||0;d&&E(a)&&(e*=b.getViewport()[d]/100);return Math.ceil(e)},w=function(a,b){return l(a,b)+"px"};f.extend(b,{version:"2.1.5",defaults:{padding:15,margin:20,
width:800,height:600,minWidth:100,minHeight:100,maxWidth:9999,maxHeight:9999,pixelRatio:1,autoSize:!0,autoHeight:!1,autoWidth:!1,autoResize:!0,autoCenter:!s,fitToView:!0,aspectRatio:!1,topRatio:0.5,leftRatio:0.5,scrolling:"auto",wrapCSS:"",arrows:!0,closeBtn:!0,closeClick:!1,nextClick:!1,mouseWheel:!0,autoPlay:!1,playSpeed:3E3,preload:3,modal:!1,loop:!0,ajax:{dataType:"html",headers:{"X-fancyBox":!0}},iframe:{scrolling:"auto",preload:!0},swf:{wmode:"transparent",allowfullscreen:"true",allowscriptaccess:"always"},
keys:{next:{13:"left",34:"up",39:"left",40:"up"},prev:{8:"right",33:"down",37:"right",38:"down"},close:[27],play:[32],toggle:[70]},direction:{next:"left",prev:"right"},scrollOutside:!0,index:0,type:null,href:null,content:null,title:null,tpl:{wrap:'<div class="fancybox-wrap" tabIndex="-1"><div class="fancybox-skin"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div></div>',image:'<img class="fancybox-image" src="{href}" alt="" />',iframe:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen'+
(I?' allowtransparency="true"':"")+"></iframe>",error:'<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>',closeBtn:'<a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a>',next:'<a title="Next" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',prev:'<a title="Previous" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'},openEffect:"fade",openSpeed:250,openEasing:"swing",openOpacity:!0,
openMethod:"zoomIn",closeEffect:"fade",closeSpeed:250,closeEasing:"swing",closeOpacity:!0,closeMethod:"zoomOut",nextEffect:"elastic",nextSpeed:250,nextEasing:"swing",nextMethod:"changeIn",prevEffect:"elastic",prevSpeed:250,prevEasing:"swing",prevMethod:"changeOut",helpers:{overlay:!0,title:!0},onCancel:f.noop,beforeLoad:f.noop,afterLoad:f.noop,beforeShow:f.noop,afterShow:f.noop,beforeChange:f.noop,beforeClose:f.noop,afterClose:f.noop},group:{},opts:{},previous:null,coming:null,current:null,isActive:!1,
isOpen:!1,isOpened:!1,wrap:null,skin:null,outer:null,inner:null,player:{timer:null,isActive:!1},ajaxLoad:null,imgPreload:null,transitions:{},helpers:{},open:function(a,d){if(a&&(f.isPlainObject(d)||(d={}),!1!==b.close(!0)))return f.isArray(a)||(a=t(a)?f(a).get():[a]),f.each(a,function(e,c){var k={},g,h,j,m,l;"object"===f.type(c)&&(c.nodeType&&(c=f(c)),t(c)?(k={href:c.data("fancybox-href")||c.attr("href"),title:c.data("fancybox-title")||c.attr("title"),isDom:!0,element:c},f.metadata&&f.extend(!0,k,
c.metadata())):k=c);g=d.href||k.href||(q(c)?c:null);h=d.title!==v?d.title:k.title||"";m=(j=d.content||k.content)?"html":d.type||k.type;!m&&k.isDom&&(m=c.data("fancybox-type"),m||(m=(m=c.prop("class").match(/fancybox\.(\w+)/))?m[1]:null));q(g)&&(m||(b.isImage(g)?m="image":b.isSWF(g)?m="swf":"#"===g.charAt(0)?m="inline":q(c)&&(m="html",j=c)),"ajax"===m&&(l=g.split(/\s+/,2),g=l.shift(),l=l.shift()));j||("inline"===m?g?j=f(q(g)?g.replace(/.*(?=#[^\s]+$)/,""):g):k.isDom&&(j=c):"html"===m?j=g:!m&&(!g&&
k.isDom)&&(m="inline",j=c));f.extend(k,{href:g,type:m,content:j,title:h,selector:l});a[e]=k}),b.opts=f.extend(!0,{},b.defaults,d),d.keys!==v&&(b.opts.keys=d.keys?f.extend({},b.defaults.keys,d.keys):!1),b.group=a,b._start(b.opts.index)},cancel:function(){var a=b.coming;a&&!1!==b.trigger("onCancel")&&(b.hideLoading(),b.ajaxLoad&&b.ajaxLoad.abort(),b.ajaxLoad=null,b.imgPreload&&(b.imgPreload.onload=b.imgPreload.onerror=null),a.wrap&&a.wrap.stop(!0,!0).trigger("onReset").remove(),b.coming=null,b.current||
b._afterZoomOut(a))},close:function(a){b.cancel();!1!==b.trigger("beforeClose")&&(b.unbindEvents(),b.isActive&&(!b.isOpen||!0===a?(f(".fancybox-wrap").stop(!0).trigger("onReset").remove(),b._afterZoomOut()):(b.isOpen=b.isOpened=!1,b.isClosing=!0,f(".fancybox-item, .fancybox-nav").remove(),b.wrap.stop(!0,!0).removeClass("fancybox-opened"),b.transitions[b.current.closeMethod]())))},play:function(a){var d=function(){clearTimeout(b.player.timer)},e=function(){d();b.current&&b.player.isActive&&(b.player.timer=
setTimeout(b.next,b.current.playSpeed))},c=function(){d();p.unbind(".player");b.player.isActive=!1;b.trigger("onPlayEnd")};if(!0===a||!b.player.isActive&&!1!==a){if(b.current&&(b.current.loop||b.current.index<b.group.length-1))b.player.isActive=!0,p.bind({"onCancel.player beforeClose.player":c,"onUpdate.player":e,"beforeLoad.player":d}),e(),b.trigger("onPlayStart")}else c()},next:function(a){var d=b.current;d&&(q(a)||(a=d.direction.next),b.jumpto(d.index+1,a,"next"))},prev:function(a){var d=b.current;
d&&(q(a)||(a=d.direction.prev),b.jumpto(d.index-1,a,"prev"))},jumpto:function(a,d,e){var c=b.current;c&&(a=l(a),b.direction=d||c.direction[a>=c.index?"next":"prev"],b.router=e||"jumpto",c.loop&&(0>a&&(a=c.group.length+a%c.group.length),a%=c.group.length),c.group[a]!==v&&(b.cancel(),b._start(a)))},reposition:function(a,d){var e=b.current,c=e?e.wrap:null,k;c&&(k=b._getPosition(d),a&&"scroll"===a.type?(delete k.position,c.stop(!0,!0).animate(k,200)):(c.css(k),e.pos=f.extend({},e.dim,k)))},update:function(a){var d=
a&&a.type,e=!d||"orientationchange"===d;e&&(clearTimeout(B),B=null);b.isOpen&&!B&&(B=setTimeout(function(){var c=b.current;c&&!b.isClosing&&(b.wrap.removeClass("fancybox-tmp"),(e||"load"===d||"resize"===d&&c.autoResize)&&b._setDimension(),"scroll"===d&&c.canShrink||b.reposition(a),b.trigger("onUpdate"),B=null)},e&&!s?0:300))},toggle:function(a){b.isOpen&&(b.current.fitToView="boolean"===f.type(a)?a:!b.current.fitToView,s&&(b.wrap.removeAttr("style").addClass("fancybox-tmp"),b.trigger("onUpdate")),
b.update())},hideLoading:function(){p.unbind(".loading");f("#fancybox-loading").remove()},showLoading:function(){var a,d;b.hideLoading();a=f('<div id="fancybox-loading"><div></div></div>').click(b.cancel).appendTo("body");p.bind("keydown.loading",function(a){if(27===(a.which||a.keyCode))a.preventDefault(),b.cancel()});b.defaults.fixed||(d=b.getViewport(),a.css({position:"absolute",top:0.5*d.h+d.y,left:0.5*d.w+d.x}))},getViewport:function(){var a=b.current&&b.current.locked||!1,d={x:n.scrollLeft(),
y:n.scrollTop()};a?(d.w=a[0].clientWidth,d.h=a[0].clientHeight):(d.w=s&&r.innerWidth?r.innerWidth:n.width(),d.h=s&&r.innerHeight?r.innerHeight:n.height());return d},unbindEvents:function(){b.wrap&&t(b.wrap)&&b.wrap.unbind(".fb");p.unbind(".fb");n.unbind(".fb")},bindEvents:function(){var a=b.current,d;a&&(n.bind("orientationchange.fb"+(s?"":" resize.fb")+(a.autoCenter&&!a.locked?" scroll.fb":""),b.update),(d=a.keys)&&p.bind("keydown.fb",function(e){var c=e.which||e.keyCode,k=e.target||e.srcElement;
if(27===c&&b.coming)return!1;!e.ctrlKey&&(!e.altKey&&!e.shiftKey&&!e.metaKey&&(!k||!k.type&&!f(k).is("[contenteditable]")))&&f.each(d,function(d,k){if(1<a.group.length&&k[c]!==v)return b[d](k[c]),e.preventDefault(),!1;if(-1<f.inArray(c,k))return b[d](),e.preventDefault(),!1})}),f.fn.mousewheel&&a.mouseWheel&&b.wrap.bind("mousewheel.fb",function(d,c,k,g){for(var h=f(d.target||null),j=!1;h.length&&!j&&!h.is(".fancybox-skin")&&!h.is(".fancybox-wrap");)j=h[0]&&!(h[0].style.overflow&&"hidden"===h[0].style.overflow)&&
(h[0].clientWidth&&h[0].scrollWidth>h[0].clientWidth||h[0].clientHeight&&h[0].scrollHeight>h[0].clientHeight),h=f(h).parent();if(0!==c&&!j&&1<b.group.length&&!a.canShrink){if(0<g||0<k)b.prev(0<g?"down":"left");else if(0>g||0>k)b.next(0>g?"up":"right");d.preventDefault()}}))},trigger:function(a,d){var e,c=d||b.coming||b.current;if(c){f.isFunction(c[a])&&(e=c[a].apply(c,Array.prototype.slice.call(arguments,1)));if(!1===e)return!1;c.helpers&&f.each(c.helpers,function(d,e){if(e&&b.helpers[d]&&f.isFunction(b.helpers[d][a]))b.helpers[d][a](f.extend(!0,
{},b.helpers[d].defaults,e),c)});p.trigger(a)}},isImage:function(a){return q(a)&&a.match(/(^data:image\/.*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\?|#).*)?$)/i)},isSWF:function(a){return q(a)&&a.match(/\.(swf)((\?|#).*)?$/i)},_start:function(a){var d={},e,c;a=l(a);e=b.group[a]||null;if(!e)return!1;d=f.extend(!0,{},b.opts,e);e=d.margin;c=d.padding;"number"===f.type(e)&&(d.margin=[e,e,e,e]);"number"===f.type(c)&&(d.padding=[c,c,c,c]);d.modal&&f.extend(!0,d,{closeBtn:!1,closeClick:!1,nextClick:!1,arrows:!1,
mouseWheel:!1,keys:null,helpers:{overlay:{closeClick:!1}}});d.autoSize&&(d.autoWidth=d.autoHeight=!0);"auto"===d.width&&(d.autoWidth=!0);"auto"===d.height&&(d.autoHeight=!0);d.group=b.group;d.index=a;b.coming=d;if(!1===b.trigger("beforeLoad"))b.coming=null;else{c=d.type;e=d.href;if(!c)return b.coming=null,b.current&&b.router&&"jumpto"!==b.router?(b.current.index=a,b[b.router](b.direction)):!1;b.isActive=!0;if("image"===c||"swf"===c)d.autoHeight=d.autoWidth=!1,d.scrolling="visible";"image"===c&&(d.aspectRatio=
!0);"iframe"===c&&s&&(d.scrolling="scroll");d.wrap=f(d.tpl.wrap).addClass("fancybox-"+(s?"mobile":"desktop")+" fancybox-type-"+c+" fancybox-tmp "+d.wrapCSS).appendTo(d.parent||"body");f.extend(d,{skin:f(".fancybox-skin",d.wrap),outer:f(".fancybox-outer",d.wrap),inner:f(".fancybox-inner",d.wrap)});f.each(["Top","Right","Bottom","Left"],function(a,b){d.skin.css("padding"+b,w(d.padding[a]))});b.trigger("onReady");if("inline"===c||"html"===c){if(!d.content||!d.content.length)return b._error("content")}else if(!e)return b._error("href");
"image"===c?b._loadImage():"ajax"===c?b._loadAjax():"iframe"===c?b._loadIframe():b._afterLoad()}},_error:function(a){f.extend(b.coming,{type:"html",autoWidth:!0,autoHeight:!0,minWidth:0,minHeight:0,scrolling:"no",hasError:a,content:b.coming.tpl.error});b._afterLoad()},_loadImage:function(){var a=b.imgPreload=new Image;a.onload=function(){this.onload=this.onerror=null;b.coming.width=this.width/b.opts.pixelRatio;b.coming.height=this.height/b.opts.pixelRatio;b._afterLoad()};a.onerror=function(){this.onload=
this.onerror=null;b._error("image")};a.src=b.coming.href;!0!==a.complete&&b.showLoading()},_loadAjax:function(){var a=b.coming;b.showLoading();b.ajaxLoad=f.ajax(f.extend({},a.ajax,{url:a.href,error:function(a,e){b.coming&&"abort"!==e?b._error("ajax",a):b.hideLoading()},success:function(d,e){"success"===e&&(a.content=d,b._afterLoad())}}))},_loadIframe:function(){var a=b.coming,d=f(a.tpl.iframe.replace(/\{rnd\}/g,(new Date).getTime())).attr("scrolling",s?"auto":a.iframe.scrolling).attr("src",a.href);
f(a.wrap).bind("onReset",function(){try{f(this).find("iframe").hide().attr("src","//about:blank").end().empty()}catch(a){}});a.iframe.preload&&(b.showLoading(),d.one("load",function(){f(this).data("ready",1);s||f(this).bind("load.fb",b.update);f(this).parents(".fancybox-wrap").width("100%").removeClass("fancybox-tmp").show();b._afterLoad()}));a.content=d.appendTo(a.inner);a.iframe.preload||b._afterLoad()},_preloadImages:function(){var a=b.group,d=b.current,e=a.length,c=d.preload?Math.min(d.preload,
e-1):0,f,g;for(g=1;g<=c;g+=1)f=a[(d.index+g)%e],"image"===f.type&&f.href&&((new Image).src=f.href)},_afterLoad:function(){var a=b.coming,d=b.current,e,c,k,g,h;b.hideLoading();if(a&&!1!==b.isActive)if(!1===b.trigger("afterLoad",a,d))a.wrap.stop(!0).trigger("onReset").remove(),b.coming=null;else{d&&(b.trigger("beforeChange",d),d.wrap.stop(!0).removeClass("fancybox-opened").find(".fancybox-item, .fancybox-nav").remove());b.unbindEvents();e=a.content;c=a.type;k=a.scrolling;f.extend(b,{wrap:a.wrap,skin:a.skin,
outer:a.outer,inner:a.inner,current:a,previous:d});g=a.href;switch(c){case "inline":case "ajax":case "html":a.selector?e=f("<div>").html(e).find(a.selector):t(e)&&(e.data("fancybox-placeholder")||e.data("fancybox-placeholder",f('<div class="fancybox-placeholder"></div>').insertAfter(e).hide()),e=e.show().detach(),a.wrap.bind("onReset",function(){f(this).find(e).length&&e.hide().replaceAll(e.data("fancybox-placeholder")).data("fancybox-placeholder",!1)}));break;case "image":e=a.tpl.image.replace("{href}",
g);break;case "swf":e='<object id="fancybox-swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="'+g+'"></param>',h="",f.each(a.swf,function(a,b){e+='<param name="'+a+'" value="'+b+'"></param>';h+=" "+a+'="'+b+'"'}),e+='<embed src="'+g+'" type="application/x-shockwave-flash" width="100%" height="100%"'+h+"></embed></object>"}(!t(e)||!e.parent().is(a.inner))&&a.inner.append(e);b.trigger("beforeShow");a.inner.css("overflow","yes"===k?"scroll":
"no"===k?"hidden":k);b._setDimension();b.reposition();b.isOpen=!1;b.coming=null;b.bindEvents();if(b.isOpened){if(d.prevMethod)b.transitions[d.prevMethod]()}else f(".fancybox-wrap").not(a.wrap).stop(!0).trigger("onReset").remove();b.transitions[b.isOpened?a.nextMethod:a.openMethod]();b._preloadImages()}},_setDimension:function(){var a=b.getViewport(),d=0,e=!1,c=!1,e=b.wrap,k=b.skin,g=b.inner,h=b.current,c=h.width,j=h.height,m=h.minWidth,u=h.minHeight,n=h.maxWidth,p=h.maxHeight,s=h.scrolling,q=h.scrollOutside?
h.scrollbarWidth:0,x=h.margin,y=l(x[1]+x[3]),r=l(x[0]+x[2]),v,z,t,C,A,F,B,D,H;e.add(k).add(g).width("auto").height("auto").removeClass("fancybox-tmp");x=l(k.outerWidth(!0)-k.width());v=l(k.outerHeight(!0)-k.height());z=y+x;t=r+v;C=E(c)?(a.w-z)*l(c)/100:c;A=E(j)?(a.h-t)*l(j)/100:j;if("iframe"===h.type){if(H=h.content,h.autoHeight&&1===H.data("ready"))try{H[0].contentWindow.document.location&&(g.width(C).height(9999),F=H.contents().find("body"),q&&F.css("overflow-x","hidden"),A=F.outerHeight(!0))}catch(G){}}else if(h.autoWidth||
h.autoHeight)g.addClass("fancybox-tmp"),h.autoWidth||g.width(C),h.autoHeight||g.height(A),h.autoWidth&&(C=g.width()),h.autoHeight&&(A=g.height()),g.removeClass("fancybox-tmp");c=l(C);j=l(A);D=C/A;m=l(E(m)?l(m,"w")-z:m);n=l(E(n)?l(n,"w")-z:n);u=l(E(u)?l(u,"h")-t:u);p=l(E(p)?l(p,"h")-t:p);F=n;B=p;h.fitToView&&(n=Math.min(a.w-z,n),p=Math.min(a.h-t,p));z=a.w-y;r=a.h-r;h.aspectRatio?(c>n&&(c=n,j=l(c/D)),j>p&&(j=p,c=l(j*D)),c<m&&(c=m,j=l(c/D)),j<u&&(j=u,c=l(j*D))):(c=Math.max(m,Math.min(c,n)),h.autoHeight&&
"iframe"!==h.type&&(g.width(c),j=g.height()),j=Math.max(u,Math.min(j,p)));if(h.fitToView)if(g.width(c).height(j),e.width(c+x),a=e.width(),y=e.height(),h.aspectRatio)for(;(a>z||y>r)&&(c>m&&j>u)&&!(19<d++);)j=Math.max(u,Math.min(p,j-10)),c=l(j*D),c<m&&(c=m,j=l(c/D)),c>n&&(c=n,j=l(c/D)),g.width(c).height(j),e.width(c+x),a=e.width(),y=e.height();else c=Math.max(m,Math.min(c,c-(a-z))),j=Math.max(u,Math.min(j,j-(y-r)));q&&("auto"===s&&j<A&&c+x+q<z)&&(c+=q);g.width(c).height(j);e.width(c+x);a=e.width();
y=e.height();e=(a>z||y>r)&&c>m&&j>u;c=h.aspectRatio?c<F&&j<B&&c<C&&j<A:(c<F||j<B)&&(c<C||j<A);f.extend(h,{dim:{width:w(a),height:w(y)},origWidth:C,origHeight:A,canShrink:e,canExpand:c,wPadding:x,hPadding:v,wrapSpace:y-k.outerHeight(!0),skinSpace:k.height()-j});!H&&(h.autoHeight&&j>u&&j<p&&!c)&&g.height("auto")},_getPosition:function(a){var d=b.current,e=b.getViewport(),c=d.margin,f=b.wrap.width()+c[1]+c[3],g=b.wrap.height()+c[0]+c[2],c={position:"absolute",top:c[0],left:c[3]};d.autoCenter&&d.fixed&&
!a&&g<=e.h&&f<=e.w?c.position="fixed":d.locked||(c.top+=e.y,c.left+=e.x);c.top=w(Math.max(c.top,c.top+(e.h-g)*d.topRatio));c.left=w(Math.max(c.left,c.left+(e.w-f)*d.leftRatio));return c},_afterZoomIn:function(){var a=b.current;a&&(b.isOpen=b.isOpened=!0,b.wrap.css("overflow","visible").addClass("fancybox-opened"),b.update(),(a.closeClick||a.nextClick&&1<b.group.length)&&b.inner.css("cursor","pointer").bind("click.fb",function(d){!f(d.target).is("a")&&!f(d.target).parent().is("a")&&(d.preventDefault(),
b[a.closeClick?"close":"next"]())}),a.closeBtn&&f(a.tpl.closeBtn).appendTo(b.skin).bind("click.fb",function(a){a.preventDefault();b.close()}),a.arrows&&1<b.group.length&&((a.loop||0<a.index)&&f(a.tpl.prev).appendTo(b.outer).bind("click.fb",b.prev),(a.loop||a.index<b.group.length-1)&&f(a.tpl.next).appendTo(b.outer).bind("click.fb",b.next)),b.trigger("afterShow"),!a.loop&&a.index===a.group.length-1?b.play(!1):b.opts.autoPlay&&!b.player.isActive&&(b.opts.autoPlay=!1,b.play()))},_afterZoomOut:function(a){a=
a||b.current;f(".fancybox-wrap").trigger("onReset").remove();f.extend(b,{group:{},opts:{},router:!1,current:null,isActive:!1,isOpened:!1,isOpen:!1,isClosing:!1,wrap:null,skin:null,outer:null,inner:null});b.trigger("afterClose",a)}});b.transitions={getOrigPosition:function(){var a=b.current,d=a.element,e=a.orig,c={},f=50,g=50,h=a.hPadding,j=a.wPadding,m=b.getViewport();!e&&(a.isDom&&d.is(":visible"))&&(e=d.find("img:first"),e.length||(e=d));t(e)?(c=e.offset(),e.is("img")&&(f=e.outerWidth(),g=e.outerHeight())):
(c.top=m.y+(m.h-g)*a.topRatio,c.left=m.x+(m.w-f)*a.leftRatio);if("fixed"===b.wrap.css("position")||a.locked)c.top-=m.y,c.left-=m.x;return c={top:w(c.top-h*a.topRatio),left:w(c.left-j*a.leftRatio),width:w(f+j),height:w(g+h)}},step:function(a,d){var e,c,f=d.prop;c=b.current;var g=c.wrapSpace,h=c.skinSpace;if("width"===f||"height"===f)e=d.end===d.start?1:(a-d.start)/(d.end-d.start),b.isClosing&&(e=1-e),c="width"===f?c.wPadding:c.hPadding,c=a-c,b.skin[f](l("width"===f?c:c-g*e)),b.inner[f](l("width"===
f?c:c-g*e-h*e))},zoomIn:function(){var a=b.current,d=a.pos,e=a.openEffect,c="elastic"===e,k=f.extend({opacity:1},d);delete k.position;c?(d=this.getOrigPosition(),a.openOpacity&&(d.opacity=0.1)):"fade"===e&&(d.opacity=0.1);b.wrap.css(d).animate(k,{duration:"none"===e?0:a.openSpeed,easing:a.openEasing,step:c?this.step:null,complete:b._afterZoomIn})},zoomOut:function(){var a=b.current,d=a.closeEffect,e="elastic"===d,c={opacity:0.1};e&&(c=this.getOrigPosition(),a.closeOpacity&&(c.opacity=0.1));b.wrap.animate(c,
{duration:"none"===d?0:a.closeSpeed,easing:a.closeEasing,step:e?this.step:null,complete:b._afterZoomOut})},changeIn:function(){var a=b.current,d=a.nextEffect,e=a.pos,c={opacity:1},f=b.direction,g;e.opacity=0.1;"elastic"===d&&(g="down"===f||"up"===f?"top":"left","down"===f||"right"===f?(e[g]=w(l(e[g])-200),c[g]="+=200px"):(e[g]=w(l(e[g])+200),c[g]="-=200px"));"none"===d?b._afterZoomIn():b.wrap.css(e).animate(c,{duration:a.nextSpeed,easing:a.nextEasing,complete:b._afterZoomIn})},changeOut:function(){var a=
b.previous,d=a.prevEffect,e={opacity:0.1},c=b.direction;"elastic"===d&&(e["down"===c||"up"===c?"top":"left"]=("up"===c||"left"===c?"-":"+")+"=200px");a.wrap.animate(e,{duration:"none"===d?0:a.prevSpeed,easing:a.prevEasing,complete:function(){f(this).trigger("onReset").remove()}})}};b.helpers.overlay={defaults:{closeClick:!0,speedOut:200,showEarly:!0,css:{},locked:!s,fixed:!0},overlay:null,fixed:!1,el:f("html"),create:function(a){a=f.extend({},this.defaults,a);this.overlay&&this.close();this.overlay=
f('<div class="fancybox-overlay"></div>').appendTo(b.coming?b.coming.parent:a.parent);this.fixed=!1;a.fixed&&b.defaults.fixed&&(this.overlay.addClass("fancybox-overlay-fixed"),this.fixed=!0)},open:function(a){var d=this;a=f.extend({},this.defaults,a);this.overlay?this.overlay.unbind(".overlay").width("auto").height("auto"):this.create(a);this.fixed||(n.bind("resize.overlay",f.proxy(this.update,this)),this.update());a.closeClick&&this.overlay.bind("click.overlay",function(a){if(f(a.target).hasClass("fancybox-overlay"))return b.isActive?
b.close():d.close(),!1});this.overlay.css(a.css).show()},close:function(){var a,b;n.unbind("resize.overlay");this.el.hasClass("fancybox-lock")&&(f(".fancybox-margin").removeClass("fancybox-margin"),a=n.scrollTop(),b=n.scrollLeft(),this.el.removeClass("fancybox-lock"),n.scrollTop(a).scrollLeft(b));f(".fancybox-overlay").remove().hide();f.extend(this,{overlay:null,fixed:!1})},update:function(){var a="100%",b;this.overlay.width(a).height("100%");I?(b=Math.max(G.documentElement.offsetWidth,G.body.offsetWidth),
p.width()>b&&(a=p.width())):p.width()>n.width()&&(a=p.width());this.overlay.width(a).height(p.height())},onReady:function(a,b){var e=this.overlay;f(".fancybox-overlay").stop(!0,!0);e||this.create(a);a.locked&&(this.fixed&&b.fixed)&&(e||(this.margin=p.height()>n.height()?f("html").css("margin-right").replace("px",""):!1),b.locked=this.overlay.append(b.wrap),b.fixed=!1);!0===a.showEarly&&this.beforeShow.apply(this,arguments)},beforeShow:function(a,b){var e,c;b.locked&&(!1!==this.margin&&(f("*").filter(function(){return"fixed"===
f(this).css("position")&&!f(this).hasClass("fancybox-overlay")&&!f(this).hasClass("fancybox-wrap")}).addClass("fancybox-margin"),this.el.addClass("fancybox-margin")),e=n.scrollTop(),c=n.scrollLeft(),this.el.addClass("fancybox-lock"),n.scrollTop(e).scrollLeft(c));this.open(a)},onUpdate:function(){this.fixed||this.update()},afterClose:function(a){this.overlay&&!b.coming&&this.overlay.fadeOut(a.speedOut,f.proxy(this.close,this))}};b.helpers.title={defaults:{type:"float",position:"bottom"},beforeShow:function(a){var d=
b.current,e=d.title,c=a.type;f.isFunction(e)&&(e=e.call(d.element,d));if(q(e)&&""!==f.trim(e)){d=f('<div class="fancybox-title fancybox-title-'+c+'-wrap">'+e+"</div>");switch(c){case "inside":c=b.skin;break;case "outside":c=b.wrap;break;case "over":c=b.inner;break;default:c=b.skin,d.appendTo("body"),I&&d.width(d.width()),d.wrapInner('<span class="child"></span>'),b.current.margin[2]+=Math.abs(l(d.css("margin-bottom")))}d["top"===a.position?"prependTo":"appendTo"](c)}}};f.fn.fancybox=function(a){var d,
e=f(this),c=this.selector||"",k=function(g){var h=f(this).blur(),j=d,k,l;!g.ctrlKey&&(!g.altKey&&!g.shiftKey&&!g.metaKey)&&!h.is(".fancybox-wrap")&&(k=a.groupAttr||"data-fancybox-group",l=h.attr(k),l||(k="rel",l=h.get(0)[k]),l&&(""!==l&&"nofollow"!==l)&&(h=c.length?f(c):e,h=h.filter("["+k+'="'+l+'"]'),j=h.index(this)),a.index=j,!1!==b.open(h,a)&&g.preventDefault())};a=a||{};d=a.index||0;!c||!1===a.live?e.unbind("click.fb-start").bind("click.fb-start",k):p.undelegate(c,"click.fb-start").delegate(c+
":not('.fancybox-item, .fancybox-nav')","click.fb-start",k);this.filter("[data-fancybox-start=1]").trigger("click");return this};p.ready(function(){var a,d;f.scrollbarWidth===v&&(f.scrollbarWidth=function(){var a=f('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo("body"),b=a.children(),b=b.innerWidth()-b.height(99).innerWidth();a.remove();return b});if(f.support.fixedPosition===v){a=f.support;d=f('<div style="position:fixed;top:20px;"></div>').appendTo("body");var e=20===
d[0].offsetTop||15===d[0].offsetTop;d.remove();a.fixedPosition=e}f.extend(b.defaults,{scrollbarWidth:f.scrollbarWidth(),fixed:f.support.fixedPosition,parent:f("body")});a=f(r).width();J.addClass("fancybox-lock-test");d=f(r).width();J.removeClass("fancybox-lock-test");f("<style type='text/css'>.fancybox-margin{margin-right:"+(d-a)+"px;}</style>").appendTo("head")})})(window,document,jQuery);/*!
 * Media helper for fancyBox
 * version: 1.0.6 (Fri, 14 Jun 2013)
 * @requires fancyBox v2.0 or later
 *
 * Usage:
 *     $(".fancybox").fancybox({
 *         helpers : {
 *             media: true
 *         }
 *     });
 *
 * Set custom URL parameters:
 *     $(".fancybox").fancybox({
 *         helpers : {
 *             media: {
 *                 youtube : {
 *                     params : {
 *                         autoplay : 0
 *                     }
 *                 }
 *             }
 *         }
 *     });
 *
 * Or:
 *     $(".fancybox").fancybox({,
 *         helpers : {
 *             media: true
 *         },
 *         youtube : {
 *             autoplay: 0
 *         }
 *     });
 *
 *  Supports:
 *
 *      Youtube
 *          http://www.youtube.com/watch?v=opj24KnzrWo
 *          http://www.youtube.com/embed/opj24KnzrWo
 *          http://youtu.be/opj24KnzrWo
 *			http://www.youtube-nocookie.com/embed/opj24KnzrWo
 *      Vimeo
 *          http://vimeo.com/40648169
 *          http://vimeo.com/channels/staffpicks/38843628
 *          http://vimeo.com/groups/surrealism/videos/36516384
 *          http://player.vimeo.com/video/45074303
 *      Metacafe
 *          http://www.metacafe.com/watch/7635964/dr_seuss_the_lorax_movie_trailer/
 *          http://www.metacafe.com/watch/7635964/
 *      Dailymotion
 *          http://www.dailymotion.com/video/xoytqh_dr-seuss-the-lorax-premiere_people
 *      Twitvid
 *          http://twitvid.com/QY7MD
 *      Twitpic
 *          http://twitpic.com/7p93st
 *      Instagram
 *          http://instagr.am/p/IejkuUGxQn/
 *          http://instagram.com/p/IejkuUGxQn/
 *      Google maps
 *          http://maps.google.com/maps?q=Eiffel+Tower,+Avenue+Gustave+Eiffel,+Paris,+France&t=h&z=17
 *          http://maps.google.com/?ll=48.857995,2.294297&spn=0.007666,0.021136&t=m&z=16
 *          http://maps.google.com/?ll=48.859463,2.292626&spn=0.000965,0.002642&t=m&z=19&layer=c&cbll=48.859524,2.292532&panoid=YJ0lq28OOy3VT2IqIuVY0g&cbp=12,151.58,,0,-15.56
 */
(function ($) {
	"use strict";

	//Shortcut for fancyBox object
	var F = $.fancybox,
		format = function( url, rez, params ) {
			params = params || '';

			if ( $.type( params ) === "object" ) {
				params = $.param(params, true);
			}

			$.each(rez, function(key, value) {
				url = url.replace( '$' + key, value || '' );
			});

			if (params.length) {
				url += ( url.indexOf('?') > 0 ? '&' : '?' ) + params;
			}

			return url;
		};

	//Add helper object
	F.helpers.media = {
		defaults : {
			youtube : {
				matcher : /(youtube\.com|youtu\.be|youtube-nocookie\.com)\/(watch\?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*)).*/i,
				params  : {
					autoplay    : 1,
					autohide    : 1,
					fs          : 1,
					rel         : 0,
					hd          : 1,
					wmode       : 'opaque',
					enablejsapi : 1
				},
				type : 'iframe',
				url  : '//www.youtube.com/embed/$3'
			},
			vimeo : {
				matcher : /(?:vimeo(?:pro)?.com)\/(?:[^\d]+)?(\d+)(?:.*)/,
				params  : {
					autoplay      : 1,
					hd            : 1,
					show_title    : 1,
					show_byline   : 1,
					show_portrait : 0,
					fullscreen    : 1
				},
				type : 'iframe',
				url  : '//player.vimeo.com/video/$1'
			},
			metacafe : {
				matcher : /metacafe.com\/(?:watch|fplayer)\/([\w\-]{1,10})/,
				params  : {
					autoPlay : 'yes'
				},
				type : 'swf',
				url  : function( rez, params, obj ) {
					obj.swf.flashVars = 'playerVars=' + $.param( params, true );

					return '//www.metacafe.com/fplayer/' + rez[1] + '/.swf';
				}
			},
			dailymotion : {
				matcher : /dailymotion.com\/video\/(.*)\/?(.*)/,
				params  : {
					additionalInfos : 0,
					autoStart : 1
				},
				type : 'swf',
				url  : '//www.dailymotion.com/swf/video/$1'
			},
			twitvid : {
				matcher : /twitvid\.com\/([a-zA-Z0-9_\-\?\=]+)/i,
				params  : {
					autoplay : 0
				},
				type : 'iframe',
				url  : '//www.twitvid.com/embed.php?guid=$1'
			},
			twitpic : {
				matcher : /twitpic\.com\/(?!(?:place|photos|events)\/)([a-zA-Z0-9\?\=\-]+)/i,
				type : 'image',
				url  : '//twitpic.com/show/full/$1/'
			},
			instagram : {
				matcher : /(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,
				type : 'image',
				url  : '//$1/p/$2/media/?size=l'
			},
			google_maps : {
				matcher : /maps\.google\.([a-z]{2,3}(\.[a-z]{2})?)\/(\?ll=|maps\?)(.*)/i,
				type : 'iframe',
				url  : function( rez ) {
					return '//maps.google.' + rez[1] + '/' + rez[3] + '' + rez[4] + '&output=' + (rez[4].indexOf('layer=c') > 0 ? 'svembed' : 'embed');
				}
			}
		},

		beforeLoad : function(opts, obj) {
			var url   = obj.href || '',
				type  = false,
				what,
				item,
				rez,
				params;

			for (what in opts) {
				if (opts.hasOwnProperty(what)) {
					item = opts[ what ];
					rez  = url.match( item.matcher );

					if (rez) {
						type   = item.type;
						params = $.extend(true, {}, item.params, obj[ what ] || ($.isPlainObject(opts[ what ]) ? opts[ what ].params : null));

						url = $.type( item.url ) === "function" ? item.url.call( this, rez, params, obj ) : format( item.url, rez, params );

						break;
					}
				}
			}

			if (type) {
				obj.href = url;
				obj.type = type;

				obj.autoHeight = false;
			}
		}
	};

}(jQuery));$.widget("ui.search_ui", {

    _create: function() {

        var me = this;

        $(document).on('widgetmanager:loaded', $.proxy(me.init, this));

        me.source = null;

    },

    init: function() {

        //after all widget's _create function

        var me = this,
            inputSearch = $(document).find('.input-search'),
            documentWidth = $(document).width(),
            element = me.element;

        window.onhashchange = $.proxy(me.hashChanged, me);

        me.searchOnLoad = (element.data('search-on-load') != undefined) ? element.data('search-on-load') : true;

        inputSearch.focus();

        $('.global-search__submit').on('click', function(event) {
            event.preventDefault();
            $(document).trigger('search:doSearch');
        });

        $(document).on('search:inputChanged search:doSearch', function(event, source) {
            if (source) {
                me.source = source;
            } else {
                me.source = null;
            }

            me.setHash();

        });


        $('.search__filters__mobile').on('click', function(event) {
            event.preventDefault();
            me.toggleSearchOptions();
        });

        $(document).on('search:doSearch', function(event, source) {
            me.toggleSearchOptions(true);
        });

        $('.search__filters__title').on('click', function(event) {
            event.preventDefault();
            me.toggleSearchSection($(this));
        });

        var hash = window.location.hash;

        if (!hash || hash == '') {

            if (!window.location.search) {
                me.blankSearchStarted = true;
            }

            me.setHash();
        } else {
            me.hashChanged();
        }

        // This should be ~pagesession, but see https://github.com/zotonic/zotonic/issues/1622
        pubzub.subscribe("~session/search/facets", function (topic, msg) {
            if (msg.payload) {
                me.setFacets(msg.payload);
            }
        });

    },


    getWidgets: function() {

        var me = this,
            widgetEls = $("[class*='do_search_cmp']"),
            widgetRefs = []

        $.each(widgetEls, function(i, element) {

            var classnames = element.className.split(/\s+/),
                element = $(element);

            $.each(classnames, function(j, classname) {
                if (classname.match(/do_search_cmp/)) {

                    var widgetName = classname.replace(/^do_/, '');
                    widgetRefs.push(element.data('ui-' + widgetName));
                }
            });
        });

        return widgetRefs;

    },

    getMergedValues: function(reset) {

        var me = this,
            mergedValues = {},
            widgetRefs = me.getWidgets();

        $.each(widgetRefs, function(i, widget) {

            if (!widget.getValues || typeof widget.getValues != 'function') return;

            var widgetVals = widget.getValues();

            if (widgetVals && Array.isArray(widgetVals) && widgetVals.length > 0) {

                $.each(widgetVals, function(j, val) {

                    if (!mergedValues[val.type]) {
                        if (Array.isArray(val.values)) {
                            mergedValues[val.type] = [];
                        }
                    }

                    if (Array.isArray(val.values)) {
                        mergedValues[val.type] = mergedValues[val.type].concat(val.values);
                    } else {
                        mergedValues[val.type] = val.values;
                    }

                });
            }
        });

        mergedValues.facets = this.getMergedFacets();

        return mergedValues;
    },

    /**
     * Get facets (a.k.a. aggregations) to segment the search results by.
     */
    getMergedFacets: function() {
        return this.getWidgets()
            .filter(function(widget) {
                return typeof widget.getFacets == 'function';
            })
            .reduce(
                function(acc, widget) {
                    return widget.getFacets(acc);
                },
                {}
            );
    },

    setHash: function(force) {

        var me = this,
            mergedValues = me.getMergedValues();

        var json = JSON.stringify(mergedValues);
        var hash = encodeURIComponent(json);

        window.location.hash = hash;

        if (force) {
            me.hashChanged();
        }
    },

    hashChanged: function() {

        var me = this,
            hash = window.location.hash.substring(1, window.location.hash.length);

        var json, values;
        try {
            json = decodeURIComponent(hash);
            values = jQuery.parseJSON(json);
        } catch {
            // Try base64 encoding for backwards compatibility
            json = atob(hash);
            values = jQuery.parseJSON(json);
        }

        // When pages link to the search page with certain filters enabled, facets are not present in the hash, so we add them here.
        // If they would not be added, they would not be requested from the server and they cannot be displayed.
        values.facets = this.getMergedFacets();

        $.proxy(me.setWidgetsState(values), me);

        if (me.blankSearchStarted && me.searchOnLoad == false) {
            return false;
         }

        $.proxy(me.doSearch(values), me);

        $('.search__filters').css('opacity', '1');

    },

    setWidgetsState: function(values) {

        var me = this,
            widgets = me.getWidgets();

        $.each(widgets, function(i, widget) {

            if (widget.setValues && typeof widget.setValues == 'function') {
              widget.setValues(values);
            }
        });
    },

    setFacets: function(facets) {
        if (typeof facets !== 'object') {
            facets = JSON.parse(facets);
        }

        $.each(this.getWidgets(), function(i, widget) {
            if (widget.setFacets && typeof widget.setFacets == 'function') {
                widget.setFacets(facets);
            }
        });
    },

    doSearch: function(values) {
        var me = this;
        $(document).trigger("search:doSearchWire", {
            'values': values
        });
    },

    toggleSearchOptions: function(forceClose) {

        var el = $('.search__filters');

        if (!forceClose) {
            el.toggleClass('is-open');
        } else {
            el.removeClass('is-open');
        }

    },

    toggleSearchSection: function(title) {
        title.closest('.search__filters__section').toggleClass('is-open');
    }

});
$.widget("ui.search", {

    _create: function() {

        var me = this;

        $(document).on('search:doSearchWire', function(event, searchParameters) {

            if (!searchParameters.values) {
                searchParameters.values = {};
            }

            z_event('search-' + searchParameters.values.type, searchParameters.values);
        });
    }
});
$.widget("ui.search_cmp_input_text", {

    _create: function() {

        var me = this,
            widgetElement = $(me.element);

        me.widgetElement = widgetElement;
        me.type = 'qs';

        me.widgetElement.keypress(function(event) {
            if (event.keyCode === 13) {
                event.preventDefault();
                $(document).trigger('search:inputChanged');
            }
        });

        if (widgetElement.data('instant')) {
            var timer = null;

            me.widgetElement.on('keyup', function() {
                if (timer) clearTimeout(timer);
                timer = setTimeout(
                    function() {
                        $(document).trigger('search:inputChanged')
                    },
                    300
                );
            });
        }
    },

    getValues: function() {

        var me = this,
            value = ($.url().param('qs') != '' && !window.location.hash) ? value = $.url().param('qs') : me.widgetElement.val();

        return [{
            'type': me.type,
            'values': value
        }]
    },

    setValues: function(values) {

        var me = this,
            widgetValues;

        try {
           widgetValues = values[me.type];
        } catch(e) {}

        me.widgetElement.val('');

        if (widgetValues) {
            me.widgetElement.val(widgetValues);
        }
    }

});
$.widget("ui.search_cmp_sort", {

    _create: function() {

        var me = this,
            widgetElement = $(me.element);

        me.widgetElement = widgetElement;
        me.type = 'sort';

        me.widgetElement.on('change', function() {
            $(document).trigger('search:inputChanged');
        });

    },

    getValues: function() {

        var me = this;

        if (me.widgetElement.val()) {
             return [{
                'type': me.type,
                'values': me.widgetElement.val()
            }]
        }

    },

    setValues: function(values) {

      var me = this,
          widgetValues;

      try {
         widgetValues = values[me.type];
      } catch(e) {}

      me.widgetElement.val(widgetValues);

    }


});

$.widget("ui.search_cmp_pager", {

    _create: function() {

        var me = this,
            widgetElement = $(me.element);

        me.widgetElement = widgetElement,
        me.value = null;

        me.widgetElement.on('click', 'a', function(event) {

           var  matches = $(this).attr('href').match(/page=(\d*)[^\d]/),
                page = (matches && matches[1]) ? matches[1] : 1;

           me.value = page;

           $(document).trigger('search:inputChanged');

           event.stopPropagation();
           return false;

        });

    },

    getValues: function() {


         var me = this,
             values;

        if (!me.value) return false;

        return [{
                'type': 'page',
                'values': parseInt(me.value)
            }
        ]
    }



});
$.widget("ui.search_cmp_types", {

    _create: function() {

        var me = this,
            widgetElement = $(me.element);

        me.widgetElement = widgetElement;
        me.type = 'type';

        me.widgetElement.on('click', '.btn--result-option', function() {
            var type = $(this).attr('href').replace(/#/, '');
            me.setType(type);
            $(document).trigger('search:inputChanged');
            return false;
        });

    },

    getValues: function() {

        var me = this,
            el = $('.btn--result-option.is-active');

        return [{
            'type': me.type,
            'values': el.attr('href').replace(/#/, '')
        }]
    },

    setValues: function(values) {

        var me = this,
            type;

        try {
            type = (values[me.type]) ? values[me.type] : 'list';
        } catch (e) {}

        if (type) me.setType(type);

    },

    setType: function(type) {

        var buttonEl = $('[href="#' + type + '"]');

        $('.btn--result-option').removeClass('is-active');

        buttonEl.addClass('is-active');

        $('.search__result__container').hide();
        $('#search-' + type).show();
        $('#search-' + type).css('visibility', 'visible');

    }

});
/*
 * Purl (A JavaScript URL parser) v2.3.1
 * Developed and maintanined by Mark Perkins, mark@allmarkedup.com
 * Source repository: https://github.com/allmarkedup/jQuery-URL-Parser
 * Licensed under an MIT-style license. See https://github.com/allmarkedup/jQuery-URL-Parser/blob/master/LICENSE for details.
 */

;(function(factory) {
    if (typeof define === 'function' && define.amd) {
        define(factory);
    } else {
        window.purl = factory();
    }
})(function() {

    var tag2attr = {
            a       : 'href',
            img     : 'src',
            form    : 'action',
            base    : 'href',
            script  : 'src',
            iframe  : 'src',
            link    : 'href',
            embed   : 'src',
            object  : 'data'
        },

        key = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'fragment'], // keys available to query

        aliases = { 'anchor' : 'fragment' }, // aliases for backwards compatability

        parser = {
            strict : /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,  //less intuitive, more accurate to the specs
            loose :  /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/ // more intuitive, fails on relative paths and deviates from specs
        },

        isint = /^[0-9]+$/;

    function parseUri( url, strictMode ) {
        var str = decodeURI( url ),
        res   = parser[ strictMode || false ? 'strict' : 'loose' ].exec( str ),
        uri = { attr : {}, param : {}, seg : {} },
        i   = 14;

        while ( i-- ) {
            uri.attr[ key[i] ] = res[i] || '';
        }

        // build query and fragment parameters
        uri.param['query'] = parseString(uri.attr['query']);
        uri.param['fragment'] = parseString(uri.attr['fragment']);

        // split path and fragement into segments
        uri.seg['path'] = uri.attr.path.replace(/^\/+|\/+$/g,'').split('/');
        uri.seg['fragment'] = uri.attr.fragment.replace(/^\/+|\/+$/g,'').split('/');

        // compile a 'base' domain attribute
        uri.attr['base'] = uri.attr.host ? (uri.attr.protocol ?  uri.attr.protocol+'://'+uri.attr.host : uri.attr.host) + (uri.attr.port ? ':'+uri.attr.port : '') : '';

        return uri;
    }

    function getAttrName( elm ) {
        var tn = elm.tagName;
        if ( typeof tn !== 'undefined' ) return tag2attr[tn.toLowerCase()];
        return tn;
    }

    function promote(parent, key) {
        if (parent[key].length === 0) return parent[key] = {};
        var t = {};
        for (var i in parent[key]) t[i] = parent[key][i];
        parent[key] = t;
        return t;
    }

    function parse(parts, parent, key, val) {
        var part = parts.shift();
        if (!part) {
            if (isArray(parent[key])) {
                parent[key].push(val);
            } else if ('object' == typeof parent[key]) {
                parent[key] = val;
            } else if ('undefined' == typeof parent[key]) {
                parent[key] = val;
            } else {
                parent[key] = [parent[key], val];
            }
        } else {
            var obj = parent[key] = parent[key] || [];
            if (']' == part) {
                if (isArray(obj)) {
                    if ('' !== val) obj.push(val);
                } else if ('object' == typeof obj) {
                    obj[keys(obj).length] = val;
                } else {
                    obj = parent[key] = [parent[key], val];
                }
            } else if (~part.indexOf(']')) {
                part = part.substr(0, part.length - 1);
                if (!isint.test(part) && isArray(obj)) obj = promote(parent, key);
                parse(parts, obj, part, val);
                // key
            } else {
                if (!isint.test(part) && isArray(obj)) obj = promote(parent, key);
                parse(parts, obj, part, val);
            }
        }
    }

    function merge(parent, key, val) {
        if (~key.indexOf(']')) {
            var parts = key.split('[');
            parse(parts, parent, 'base', val);
        } else {
            if (!isint.test(key) && isArray(parent.base)) {
                var t = {};
                for (var k in parent.base) t[k] = parent.base[k];
                parent.base = t;
            }
            if (key !== '') {
                set(parent.base, key, val);
            }
        }
        return parent;
    }

    function parseString(str) {
        return reduce(String(str).split(/&|;/), function(ret, pair) {
            try {
                pair = decodeURIComponent(pair.replace(/\+/g, ' '));
            } catch(e) {
                // ignore
            }
            var eql = pair.indexOf('='),
                brace = lastBraceInKey(pair),
                key = pair.substr(0, brace || eql),
                val = pair.substr(brace || eql, pair.length);

            val = val.substr(val.indexOf('=') + 1, val.length);

            if (key === '') {
                key = pair;
                val = '';
            }

            return merge(ret, key, val);
        }, { base: {} }).base;
    }

    function set(obj, key, val) {
        var v = obj[key];
        if (typeof v === 'undefined') {
            obj[key] = val;
        } else if (isArray(v)) {
            v.push(val);
        } else {
            obj[key] = [v, val];
        }
    }

    function lastBraceInKey(str) {
        var len = str.length,
            brace,
            c;
        for (var i = 0; i < len; ++i) {
            c = str[i];
            if (']' == c) brace = false;
            if ('[' == c) brace = true;
            if ('=' == c && !brace) return i;
        }
    }

    function reduce(obj, accumulator){
        var i = 0,
            l = obj.length >> 0,
            curr = arguments[2];
        while (i < l) {
            if (i in obj) curr = accumulator.call(undefined, curr, obj[i], i, obj);
            ++i;
        }
        return curr;
    }

    function isArray(vArg) {
        return Object.prototype.toString.call(vArg) === "[object Array]";
    }

    function keys(obj) {
        var key_array = [];
        for ( var prop in obj ) {
            if ( obj.hasOwnProperty(prop) ) key_array.push(prop);
        }
        return key_array;
    }

    function purl( url, strictMode ) {
        if ( arguments.length === 1 && url === true ) {
            strictMode = true;
            url = undefined;
        }
        strictMode = strictMode || false;
        url = url || window.location.toString();

        return {

            data : parseUri(url, strictMode),

            // get various attributes from the URI
            attr : function( attr ) {
                attr = aliases[attr] || attr;
                return typeof attr !== 'undefined' ? this.data.attr[attr] : this.data.attr;
            },

            // return query string parameters
            param : function( param ) {
                return typeof param !== 'undefined' ? this.data.param.query[param] : this.data.param.query;
            },

            // return fragment parameters
            fparam : function( param ) {
                return typeof param !== 'undefined' ? this.data.param.fragment[param] : this.data.param.fragment;
            },

            // return path segments
            segment : function( seg ) {
                if ( typeof seg === 'undefined' ) {
                    return this.data.seg.path;
                } else {
                    seg = seg < 0 ? this.data.seg.path.length + seg : seg - 1; // negative segments count from the end
                    return this.data.seg.path[seg];
                }
            },

            // return fragment segments
            fsegment : function( seg ) {
                if ( typeof seg === 'undefined' ) {
                    return this.data.seg.fragment;
                } else {
                    seg = seg < 0 ? this.data.seg.fragment.length + seg : seg - 1; // negative segments count from the end
                    return this.data.seg.fragment[seg];
                }
            }

        };

    }
    
    purl.jQuery = function($){
        if ($ != null) {
            $.fn.url = function( strictMode ) {
                var url = '';
                if ( this.length ) {
                    url = $(this).attr( getAttrName(this[0]) ) || '';
                }
                return purl( url, strictMode );
            };

            $.url = purl;
        }
    };

    purl.jQuery(window.jQuery);

    return purl;

});
/**
# qlobber&nbsp;&nbsp;&nbsp;[![Build Status](https://travis-ci.org/davedoesdev/qlobber.png)](https://travis-ci.org/davedoesdev/qlobber) [![Coverage Status](https://coveralls.io/repos/davedoesdev/qlobber/badge.png?branch=master)](https://coveralls.io/r/davedoesdev/qlobber?branch=master) [![NPM version](https://badge.fury.io/js/qlobber.png)](http://badge.fury.io/js/qlobber)

Node.js globbing for amqp-like topics.

Example:

```javascript
var Qlobber = require('qlobber').Qlobber;
var matcher = new Qlobber();
matcher.add('foo.*', 'it matched!');
assert.deepEqual(matcher.match('foo.bar'), ['it matched!']);
```

The API is described [here](#tableofcontents).

qlobber is implemented using a trie, as described in the RabbitMQ blog posts [here](http://www.rabbitmq.com/blog/2010/09/14/very-fast-and-scalable-topic-routing-part-1/) and [here](http://www.rabbitmq.com/blog/2011/03/28/very-fast-and-scalable-topic-routing-part-2/).

## Installation

```shell
npm install qlobber
```

## Another Example

A more advanced example using topics from the [RabbitMQ topic tutorial](http://www.rabbitmq.com/tutorials/tutorial-five-python.html):

```javascript
var matcher = new Qlobber();
matcher.add('*.orange.*', 'Q1');
matcher.add('*.*.rabbit', 'Q2');
matcher.add('lazy.#', 'Q2');
assert.deepEqual(['quick.orange.rabbit',
                  'lazy.orange.elephant',
                  'quick.orange.fox',
                  'lazy.brown.fox',
                  'lazy.pink.rabbit',
                  'quick.brown.fox',
                  'orange',
                  'quick.orange.male.rabbit',
                  'lazy.orange.male.rabbit'].map(function (topic)
                  {
                      return matcher.match(topic).sort();
                  }),
                 [['Q1', 'Q2'],
                  ['Q1', 'Q2'],
                  ['Q1'],
                  ['Q2'],
                  ['Q2', 'Q2'],
                  [],
                  [],
                  [],
                  ['Q2']]);
```

## Licence

[MIT](LICENCE)

## Tests

qlobber passes the [RabbitMQ topic tests](https://github.com/rabbitmq/rabbitmq-server/blob/master/src/rabbit_tests.erl) (I converted them from Erlang to Javascript).

To run the tests:

```javascript
grunt test
```

## Lint

```javascript
grunt lint
```

## Code Coverage

```javascript
grunt coverage
```

[Instanbul](http://gotwarlost.github.io/istanbul/) results are available [here](http://htmlpreview.github.io/?https://github.com/davedoesdev/qlobber/blob/master/coverage/lcov-report/index.html).

Coveralls page is [here](https://coveralls.io/r/davedoesdev/qlobber).

## Benchmarks

```javascript
grunt bench
```

qlobber is also benchmarked in [ascoltatori](https://github.com/mcollina/ascoltatori).

# API
*/

/*jslint node: true, nomen: true */
"use strict";

/**
Creates a new qlobber.

@constructor
@param {Object} [options] Configures the qlobber. Use the following properties:

- `{String} separator` The character to use for separating words in topics. Defaults to '.'. MQTT uses '/' as the separator, for example.

- `{String} wildcard_one` The character to use for matching exactly one word in a topic. Defaults to '*'. MQTT uses '+', for example.

- `{String} wildcard_some` The character to use for matching zero or more words in a topic. Defaults to '#'. MQTT uses '#' too.
*/
function Qlobber (options)
{
    options = options || {};

    this._separator = options.separator || '.';
    this._wildcard_one = options.wildcard_one || '*';
    this._wildcard_some = options.wildcard_some || '#';
    this._trie = {};
}

Qlobber.prototype._add = function (val, i, words, sub_trie)
{
    var st, word;

    if (i === words.length)
    {
        st = sub_trie[this._separator];
        
        if (st)
        {
            st.push(val);
        }
        else
        {
            sub_trie[this._separator] = [val];
        }
        
        return;
    }

    word = words[i];
    st = sub_trie[word];
    
    if (!st)
    {
        st = sub_trie[word] = {};
    }
    
    this._add(val, i + 1, words, st);
};

Qlobber.prototype._remove = function (val, i, words, sub_trie)
{
    var st, index, word;

    if (i === words.length)
    {
        st = sub_trie[this._separator];

        if (st)
        {
            if (val === undefined)
            {
                st = [];
            }
            else
            {
                index = st.lastIndexOf(val);

                if (index >= 0)
                {
                    st.splice(index, 1);
                }
            }

            if (st.length === 0)
            {
                delete sub_trie[this._separator];
            }
        }

        return;
    }
    
    word = words[i];
    st = sub_trie[word];

    if (!st)
    {
        return;
    }

    this._remove(val, i + 1, words, st);

    /*jslint forin: true */
    for (word in st)
    {
        return;
    }
    /*jslint forin: false */

    delete sub_trie[word];
};

Qlobber.prototype._match = function (v, i, words, sub_trie)
{
    var word, st, w, j;

    st = sub_trie[this._wildcard_some];

    if (st)
    {
        // common case: no more levels

        /*jslint forin: true */
        for (w in st)
        {
            if (w !== this._separator)
            {
                for (j = i; j < words.length; j += 1)
                {
                    v = this._match(v, j, words, st);
                }

                break;
            }
        }
        /*jslint forin: false */

        v = this._match(v, words.length, words, st);
    }

    if (i === words.length)
    {
        st = sub_trie[this._separator];

        if (st)
        {
            v = v.concat(st);
        }
    }
    else
    {
        word = words[i];

        if ((word !== this._wildcard_one) && (word !== this._wildcard_some))
        {
            st = sub_trie[word];

            if (st)
            {
                v = this._match(v, i + 1, words, st);
            }
        }

        if (word)
        {
            st = sub_trie[this._wildcard_one];

            if (st)
            {
                v = this._match(v, i + 1, words, st);
            }
        }
    }

    return v;
};

/**
Add a topic matcher to the qlobber.

Note you can match more than one value against a topic by calling `add` multiple times with the same topic and different values.

@param {String} topic The topic to match against.
@param {Any} val The value to return if the topic is matched. `undefined` is not supported.
@return {Qlobber} The qlobber (for chaining).
*/
Qlobber.prototype.add = function (topic, val)
{
    this._add(val, 0, topic.split(this._separator), this._trie);
    return this;
};

/**
Remove a topic matcher from the qlobber.

@param {String} topic The topic that's being matched against.
@param {Any} [val] The value that's being matched. If you don't specify `val` then all matchers for `topic` are removed.
@return {Qlobber} The qlobber (for chaining).
*/
Qlobber.prototype.remove = function (topic, val)
{
    this._remove(val, 0, topic.split(this._separator), this._trie);
    return this;
};

/**
Match a topic.

@param {String} topic The topic to match against.
@return {Array} List of values that matched the topic. This may contain duplicates.
*/
Qlobber.prototype.match = function (topic)
{
    return this._match([], 0, topic.split(this._separator), this._trie);
};

/**
Reset the qlobber.

Removes all topic matchers from the qlobber.

@return {Qlobber} The qlobber (for chaining).
*/
Qlobber.prototype.clear = function ()
{
    this._trie = {};
    return this;
};

// for debugging
Qlobber.prototype.get_trie = function ()
{
    return this._trie;
};
/* Zotonic's Pubsub using qmtt over websockets/comet 

Special topics:

    "~pagesession"    within this page
    "~site/foo/bar"   within the site, handled on the server
    "foo/bar"  the root of the server's mqtt router

TODO:

    * add relay from page topics to server topics
    * add QoS levels
        - default level 0
        - add level 0 and 1, needs local puback
        - add dup flag to messages 
    * retain local messages for topics
*/

function Pubzub ()
{
    this._new_matcher = function() {
        return new Qlobber({
            separator: '/',
            wildcard_one: '+',
            wildcard_some: '#'
        });
    };
    this._matcher = this._new_matcher();
    this._subs = {};
    this._subs_relayed = {};
    this._retained = {};

    this._will_id = 0;
    ubf.add_spec("mqtt_msg", [
            "retain", "qos", "topic", "dup", "message_id", "payload",
            "encoder"
        ]);
    ubf.add_spec("z_mqtt_payload", [
            "site", "user_id", "payload"
        ]);
    ubf.add_spec("z_mqtt_cmd", [
            "cmd", "topic", "payload", "extra"
        ]);

    var self = this;
    z_transport_delegate_register(
            'mqtt_route',
            function(mqtt_msg, msg) {
                self.relayed(mqtt_msg, msg);
            });
}

Pubzub.prototype.me = function () {
    return "~site/pagesession/" + z_pageid;
};

Pubzub.prototype.subscribe_multi = function (topics, fun) {
    for(var i=topics.length-1; i >= 0; i--) {
        this.subscribe(topics[i], fun);
    }
};

Pubzub.prototype.subscribe = function (topic, fun, ack) {
    var id = this.unique_id();
    var async_ack = false;
    this._matcher.add(topic, id);
    this._subs[id] = {fun: fun, topic: topic};
    if (!this.is_local_topic(topic)) {
        var ct = this._subs_relayed[topic] || 0;
        if (ct === 0) {
            async_ack = true;
            this.transport("subscribe", topic, undefined, undefined, ack);
        }
        this._subs_relayed[topic] = ct + 1;
    } else {
        this.handle_retained(topic, fun, id);
    }
    if(ack && !async_ack) { setTimeout(ack, 0); }
    return id;
};

Pubzub.prototype.unsubscribe = function (id) {
    if (this._subs[id]) {
        var sub = this._subs[id];
        var topic = sub.topic;

        this._matcher.remove(topic, id);
        if (!this.is_local_topic(topic)) {
            var ct = this._subs_relayed[topic] - 1;
            if (ct === 0) {
                this.transport("unsubscribe", topic);
            }
            this._subs_relayed[topic] = ct;
        }
        delete this._subs[id];
    }
};

Pubzub.prototype.publish = function (topic, message, options) {
    options = options || {retained: false};
    
    if (this.is_local_topic(topic)) {
        if (message === undefined && options.retained) {
             delete this._retained[topic];
             return;
        }
        
        var subs = this._matcher.match(topic);
        for (var i in subs) {
            var id = subs[i];
            if (this._subs[id]) {
                this._subs[id].fun(topic, message, id);
            }
        }

        if (options.retained) {
            this._retained[topic] = message;
        }
    } else {
        if(options.retained)
            throw "Error: retained messages are not supported for non-local topics";
            
        this.transport("publish", topic, message);
    }
};

Pubzub.prototype.subscribers = function (topic) {
    return this._matcher.match(topic);
};

Pubzub.prototype.reply_topic = function (sub_topic) {
    if (!sub_topic) {
        return "~site/reply/"+this.unique_id();
    } else if (sub_topic.substr(0,1) == "/") {
        return "~site/reply/"+this.unique_id()+sub_topic;
    } else {
        return "~site/reply/"+this.unique_id()+"/"+sub_topic;
    }
};

Pubzub.prototype.lastwill = function (topic, message) {
    this._will_id = this.unique_id();
    this.transport("lastwill", topic, message, this._will_id);
};

Pubzub.prototype.remove_lastwill = function () {
    this.transport("lastwill", undefined, undefined, this._will_id);
    this._will_id = undefined;
};

Pubzub.prototype.is_local_topic = function (topic) {
    var me = this.me();

    return topic == '~pagesession' ||
           topic == me ||
           topic.substr(0,13) == "~pagesession/" ||
           topic.substr(0,me.length+1) == me+"/";
};

Pubzub.prototype.relayed = function (mqtt_msg, _msg) {
    var subs = this._matcher.match(mqtt_msg.topic);
    for (var i in subs) {
        var id = subs[i];
        if (this._subs[id]) {
            this._subs[id].fun(mqtt_msg.topic, mqtt_msg.payload, id);
        }
    }
};

Pubzub.prototype.handle_retained = function(topic, fun, id) {
    var retained_matcher = this._new_matcher();
    retained_matcher.add(topic, true);
    
    function publish(topic, msg) {
        setTimeout(function() { fun(topic, msg, id); }, 0);
    }
        
    for(var retained_topic in this._retained) {
        for(var matches in retained_matcher.match(retained_topic)) {
            if(matches.length) {
                publish(retained_topic, this._retained[retained_topic]);
            }
        }
    }
};

Pubzub.prototype.transport = function (cmd, topic, payload, extra, ack) {
    var msg = {
        _record: 'z_mqtt_cmd',
        cmd: cmd,
        topic: topic,
        payload: payload,
        extra: extra
    };
    var options = {
        qos: 1,
        ack: ack
    };
    z_transport('mqtt', 'ubf', msg, options);
};

Pubzub.prototype.unique_id = function () {
    var t = (new Date()).getTime() + "-";
    var cs = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    for( var i=0; i < 20; i++ )
        t += cs.charAt(Math.floor(Math.random() * cs.length));
    return t;
};

Pubzub.prototype.make_zEvtArgs = function (topic, msg, sub_id) {
    if(typeof msg == 'object') {
        var args = ensure_name_value(msg);
        args.unshift({name: "topic", value: topic});
        args.unshift({name: "sub_id", value: sub_id});
        return args;
    }

    return undefined;
};

(function($) {
    window.pubzub = new Pubzub();
})(jQuery);
/* live js
----------------------------------------------------------

@package:   Zotonic 2014    
@Author:    Marc Worrell <marc@worrell.nl>

Copyright 2014 Marc Worrell

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
 
http://www.apache.org/licenses/LICENSE-2.0
 
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

---------------------------------------------------------- */

function ZLive ()
{
    this._subscriptions = [];
    this._prune_timeout = 10000;
    var self = this;
    setTimeout(function() { self.prune(); }, this._prune_timeout);
}

ZLive.prototype.subscribe = function(topics, target, postback) {
    var self = this;
    for(var i=topics.length-1; i >= 0; i--) {
        var topic = topics[i];
        var sub_id = pubzub.subscribe(
                            topic,
                            function(_topic, msg, id) {
                                self.update(topic, target, postback, msg, id);
                            });

        this._subscriptions.push({
            sub_id: sub_id,
            topic: topic,
            target: target,
            postback: postback
        });
    }
};

ZLive.prototype.update = function(topic, target, postback, payload, sub_id) {
    if ($('#'+target).length) {
        if (typeof payload._record != 'undefined' && payload._record == 'z_mqtt_payload') {
            payload = payload.payload;
        }
        z_queue_postback(target, postback, {topic: topic, message: payload});
    } else {
        this.unsubscribe(sub_id);
    }
};

ZLive.prototype.unsubscribe = function(sub_id) {
    for (var i=0; i<= this._subscriptions.length; i++) {
        if (this._subscriptions[i].sub_id == sub_id) {
            this._subscriptions.splice(i,1);
            break;
        }
    }
    pubzub.unsubscribe(sub_id);
};

ZLive.prototype.prune = function() {
    for (var i=this._subscriptions.length-1; i >= 0; i--) {
        var target = this._subscriptions[i].target;
        if ($('#'+target).length === 0) {
            pubzub.unsubscribe(this._subscriptions[i].sub_id);
            this._subscriptions.splice(i,1);
        }
    }
    var self = this;
    setTimeout(function() { self.prune(); }, this._prune_timeout);
};

window.z_live = new ZLive();
"use strict";

(function ($) {
  'use strict';

  $.widget("ui.search_suggestions", {
    _init: function _init() {
      this.init();
    },
    init: function init() {
      var me = this,
          element = me.element,
          timer = null,
          prevVal = null,
          paramResults = element.data('param-results'),
          paramWire = element.data('param-wire'),
          paramToggleButton = '#' + element.data('param-togglebutton'),
          windowHeight = $(window).height();
      me.toggleButton = $(paramToggleButton), me.searchForm = $(element.closest('form')), me.searchInput = element, me.suggestions = $('#' + paramResults);
      me.suggestions.removeClass('is-scrolable');
      me.suggestions.hide();

      function doSearch() {
        var val = me.element.val();

        if (val.length == 0) {
          me.suggestions.hide();
          return;
        }

        z_event(paramWire, {
          value: val
        });
        setTimeout(function () {
          me.suggestions.show(0, function () {
            if (me.suggestions.outerHeight() > windowHeight) {
              me.suggestions.addClass('is-scrollable');
            }
          });
        }, 500);
      }

      me.element.on('keyup', function (e) {
        if (timer) clearTimeout(timer);
        timer = setTimeout(doSearch, 300);
      });
      $(document).on('search:close', $.proxy(me._closeSearch, me));
      $(document).on('search:toggle', $.proxy(me._toggleSearch, me));
      if (me.toggleButton != undefined) me.toggleButton.on('click', $.proxy(me._toggleSearch, me));
    },
    _closeSearch: function _closeSearch(event) {
      var me = this;

      me._toggleSearch(event, true);
    },
    _toggleSearch: function _toggleSearch(event, close) {
      var me = this;
      if (me.toggleButton) me.toggleButton.toggleClass('is-active');

      if (close) {
        me.suggestions.hide();
        me.searchForm.removeClass('is-visible');
        if (me.toggleButton) me.toggleButton.removeClass('is-active');
      } else {
        me.searchForm.toggleClass('is-visible');
      }

      if (!close) me.searchInput.val('');
      me.suggestions.hide();

      if (me.isVisible()) {
        me.searchForm.on('transitionend', function () {
          me.searchInput.focus();
        });
      }

      $(document).trigger('search:toggled');
      return false;
    },
    isVisible: function isVisible() {
      var me = this;

      if (me.suggestions.css('display') == 'block' || me.searchForm.hasClass('is-visible')) {
        return true;
      } else {
        return false;
      }
    }
  });
})(jQuery);"use strict";

(function ($) {
  'use strict';

  $.widget("ui.carousel", {
    _init: function _init() {
      this.init();
    },
    init: function init() {
      var me = this;
      me.element = $(this.element);
      me.interval = me.element.data('interval');
      me.type = me.element.data('type');

      if (me.type == "text") {
        me.textCarousel.bind(me)();
      } else {
        me.bgCarousel.bind(me)();
      }
    },
    textCarousel: function textCarousel() {
      var me = this;
      var textInterval = setInterval(function () {
        var $active = me.element.find('li.active');
        if ($active.length == 0) $active = me.element.find('li:last');
        var $next = $active.next().length ? $active.next() : me.element.find('li:first');
        $active.addClass('last-active');
        setTimeout(function () {
          $next.addClass('active').bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", function () {
            $active.removeClass('active last-active');
          });
        }, 2000);

        if ($next.hasClass('last')) {
          clearInterval(textInterval);
        }
      }, me.interval);
    },
    bgCarousel: function bgCarousel(me) {
      // Get all background images and set the first to active
      var images = $(".home-top_carousel-background li");
      $(images[0]).addClass("background_active"); // Init slider

      var carousel = $('.home-top_carousel-bg').slick({
        dots: true,
        infinite: true,
        speed: 500,
        fade: true,
        autoplay: true,
        pauseOnHover: false,
        pauseOnFocus: false,
        autoplaySpeed: 8000,
        arrows: false
      }); // Set background image to active on change of slide

      carousel.on("beforeChange", function (_event, _slick, current, next) {
        $(images[current]).removeClass("background_active");
        $(images[next]).addClass("background_active");
      }); // Add eventlistener to first slide text

      $(".slick-current p").on("click", function () {
        carousel.slick("slickNext");
        carousel.slick("slickPause");
      });
      $(".slick-dots").on("click", function () {
        carousel.slick("slickPause");
      }); // Add eventlistener to current slide after transition

      carousel.on("afterChange", function (_event, _slick, _current, _next) {
        $(".slick-current p").on("click", function () {
          carousel.slick("slickNext");
        });
      });
    }
  });
})(jQuery);"use strict";

(function ($) {
  'use strict';

  $.widget("ui.person", {
    _init: function _init() {
      this.init();
    },
    init: function init() {
      var me = this,
          element = me.element,
          personId = element.data('id');
      element.on('click', function () {
        z_event("person_detail", {
          "person": personId
        });
      });
    }
  });
})(jQuery);"use strict";

(function ($) {
  'use strict';

  $.widget("ui.submit_on_enter", {
    _init: function _init() {
      this.init();
    },
    init: function init() {
      var me = this,
          element = me.element;
      element.keyup(function (e) {
        if (e.keyCode == 13) {
          element.closest('.search__top').find('button[type="submit"]:eq(0)').trigger('click');
        }
      });
    }
  });
})(jQuery);"use strict";

(function ($) {
  'use strict';

  $.widget("ui.foldoutmenu", {
    _init: function _init() {
      this.init();
    },
    init: function init() {
      var $el = $(this.element); // forces blur on foldout items to fix menu unable to close on ios

      $(document).on('click', function (event) {
        if ($(event.target).closest($el).length > 0) {
          $el.find('> li').blur();
        }
      });
    }
  });
})(jQuery);"use strict";

(function ($) {
  $.widget("ui.home", {
    _init: function _init() {
      var homeMainElement = $('.home');
      var globalNavElement = $('.global-nav');
      var annoucementElement = $('.announcement');
      var hideAnnoucementElement = $('.hide-announcement-btn');
      hideAnnoucementElement.on("click", function () {
        globalNavElement.addClass('hide-announcement');
        homeMainElement.addClass('hide-announcement');
        annoucementElement.addClass('hide-announcement');
      });
      $(window).on("scroll", function () {
        var scrollPosition = $(document).scrollTop();

        if (scrollPosition > 220) {
          globalNavElement.addClass('stick');
        } else {
          globalNavElement.removeClass('stick');
        }

        annoucementElement.css("transform", "translateY(-" + scrollPosition / 2 + "px)");
      });
      this.resetRippleOnInterval(annoucementElement);
    },
    // To restart ripple animations, remove and re-insert it's wrapper into the
    // dom every 46 seconds.
    resetRippleOnInterval: function resetRippleOnInterval(parentElement) {
      var annoucementRipplesElement = $('.annoucement-ripples');
      var annoucementRipplesElementClone = annoucementRipplesElement.clone(true);
      setInterval(function () {
        annoucementRipplesElement.remove();
        parentElement.append(annoucementRipplesElementClone);
      }, 46 * 1000);
    }
  });
})(jQuery);!function(r){"use strict";function a(a,r,n){return n.a=a,n.f=r,n}function l(n){return a(2,n,function(r){return function(a){return n(r,a)}})}function f(t){return a(3,t,function(n){return function(r){return function(a){return t(n,r,a)}}})}function c(e){return a(4,e,function(t){return function(n){return function(r){return function(a){return e(t,n,r,a)}}}})}function V(b){return a(5,b,function(e){return function(t){return function(n){return function(r){return function(a){return b(e,t,n,r,a)}}}}})}function U(u){return a(6,u,function(b){return function(e){return function(t){return function(n){return function(r){return function(a){return u(b,e,t,n,r,a)}}}}}})}function B(i){return a(7,i,function(u){return function(b){return function(e){return function(t){return function(n){return function(r){return function(a){return i(u,b,e,t,n,r,a)}}}}}}})}function H(o){return a(8,o,function(i){return function(u){return function(b){return function(e){return function(t){return function(n){return function(r){return function(a){return o(i,u,b,e,t,n,r,a)}}}}}}}})}function z(c){return a(9,c,function(o){return function(i){return function(u){return function(b){return function(e){return function(t){return function(n){return function(r){return function(a){return c(o,i,u,b,e,t,n,r,a)}}}}}}}}})}function p(a,r,n){return 2===a.a?a.f(r,n):a(r)(n)}function d(a,r,n,t){return 3===a.a?a.f(r,n,t):a(r)(n)(t)}function h(a,r,n,t,e){return 4===a.a?a.f(r,n,t,e):a(r)(n)(t)(e)}function s(a,r,n,t,e,b){return 5===a.a?a.f(r,n,t,e,b):a(r)(n)(t)(e)(b)}function P(a,r,n,t,e,b,u){return 6===a.a?a.f(r,n,t,e,b,u):a(r)(n)(t)(e)(b)(u)}function G(a,r,n,t,e,b,u,i){return 7===a.a?a.f(r,n,t,e,b,u,i):a(r)(n)(t)(e)(b)(u)(i)}function F(a,r,n,t,e,b,u,i,o){return 8===a.a?a.f(r,n,t,e,b,u,i,o):a(r)(n)(t)(e)(b)(u)(i)(o)}function o(a,r){for(var n,t=[],e=M(a,r,0,t);e&&(n=t.pop());e=M(n.a,n.b,0,t));return e}function M(a,r,n,t){if(a!==r){if("object"!=typeof a||null===a||null===r)return"function"==typeof a&&ua(5),!1;if(100<n)t.push({a:a,b:r});else for(var e in a.$<0&&(a=Pt(a),r=Pt(r)),a)if(!M(a[e],r[e],n+1,t))return!1}return!0}var J=l(o);l(function(a,r){return!o(a,r)});function g(a,r,n){if("object"!=typeof a)return a===r?0:a<r?-1:1;if(void 0===a.$)return(n=(n=g(a.a,r.a))||g(a.b,r.b))||g(a.c,r.c);for(;a.b&&r.b&&!(n=g(a.a,r.a));a=a.b,r=r.b);return n||(a.b?1:r.b?-1:0)}var W=l(function(a,r){return g(a,r)<0}),Y=(l(function(a,r){return g(a,r)<1}),l(function(a,r){return 0<g(a,r)}),l(function(a,r){return 0<=g(a,r)}),l(function(a,r){a=g(a,r);return a<0?Ht:a?Bt:Ut})),X=0;function m(a,r){var n,t={};for(n in a)t[n]=a[n];for(n in r)t[n]=r[n];return t}l(Z);function Z(a,r){if("string"==typeof a)return a+r;if(!a.b)return r;var n={$:1,a:a.a,b:r};a=a.b;for(var t=n;a.b;a=a.b)t=t.b={$:1,a:a.a,b:r};return n}var v={$:0};function K(a,r){return{$:1,a:a,b:r}}var Q=l(K);function $(a){for(var r=v,n=a.length;n--;)r={$:1,a:a[n],b:r};return r}function aa(a){for(var r=[];a.b;a=a.b)r.push(a.a);return r}var ra=f(function(a,r,n){for(var t=[];r.b&&n.b;r=r.b,n=n.b)t.push(p(a,r.a,n.a));return $(t)});c(function(a,r,n,t){for(var e=[];r.b&&n.b&&t.b;r=r.b,n=n.b,t=t.b)e.push(d(a,r.a,n.a,t.a));return $(e)}),V(function(a,r,n,t,e){for(var b=[];r.b&&n.b&&t.b&&e.b;r=r.b,n=n.b,t=t.b,e=e.b)b.push(h(a,r.a,n.a,t.a,e.a));return $(b)}),U(function(a,r,n,t,e,b){for(var u=[];r.b&&n.b&&t.b&&e.b&&b.b;r=r.b,n=n.b,t=t.b,e=e.b,b=b.b)u.push(s(a,r.a,n.a,t.a,e.a,b.a));return $(u)}),l(function(n,a){return $(aa(a).sort(function(a,r){return g(n(a),n(r))}))}),l(function(n,a){return $(aa(a).sort(function(a,r){a=p(n,a,r);return a===Ut?0:a===Ht?-1:1}))});var na=f(function(a,r,n){for(var t=Array(a),e=0;e<a;e++)t[e]=n(r+e);return t}),ta=l(function(a,r){for(var n=Array(a),t=0;t<a&&r.b;t++)n[t]=r.a,r=r.b;return n.length=t,{a:n,b:r}}),ea=l(function(a,r){return r[a]}),ba=(f(function(a,r,n){for(var t=n.length,e=Array(t),b=0;b<t;b++)e[b]=n[b];return e[a]=r,e}),l(function(a,r){for(var n=r.length,t=Array(n+1),e=0;e<n;e++)t[e]=r[e];return t[n]=a,t}),f(function(a,r,n){for(var t=n.length,e=0;e<t;e++)r=p(a,n[e],r);return r}),f(function(a,r,n){for(var t=n.length-1;0<=t;t--)r=p(a,n[t],r);return r}));l(function(a,r){for(var n=r.length,t=Array(n),e=0;e<n;e++)t[e]=a(r[e]);return t}),f(function(a,r,n){for(var t=n.length,e=Array(t),b=0;b<t;b++)e[b]=p(a,r+b,n[b]);return e}),f(function(a,r,n){return n.slice(a,r)}),f(function(a,r,n){for(var t=r.length,e=a-t,a=t+(e=n.length<e?n.length:e),b=Array(a),u=0;u<t;u++)b[u]=r[u];for(u=0;u<e;u++)b[u+t]=n[u];return b}),l(function(a,r){return r}),l(function(a,r){return console.log(a+": <internals>"),r});function ua(a){throw Error("https://github.com/elm/core/blob/1.0.0/hints/"+a+".md")}l(function(a,r){return a+r}),l(function(a,r){return a-r}),l(function(a,r){return a*r}),l(function(a,r){return a/r}),l(function(a,r){return a/r|0});var ia=l(Math.pow),oa=(l(function(a,r){return r%a}),l(function(a,r){r%=a;return 0===a?ua(11):0<r&&a<0||r<0&&0<a?r+a:r}));l(Math.atan2);var ca=Math.ceil,sa=Math.floor,fa=Math.round,la=Math.log;l(function(a,r){return a&&r}),l(function(a,r){return a||r}),l(function(a,r){return a!==r});var pa=l(function(a,r){return a+r});var da=l(function(a,r){return a+r});l(function(a,r){for(var n=r.length,t=Array(n),e=0;e<n;){var b=r.charCodeAt(e);55296>b||b>56319?(t[e]=a(r[e]),e++):(t[e]=a(r[e]+r[e+1]),e+=2)}return t.join("")}),l(function(a,r){for(var n=[],t=r.length,e=0;e<t;){var b=r[e],u=r.charCodeAt(e);e++,u<55296||56319<u||(b+=r[e],e++),a(b)&&n.push(b)}return n.join("")});f(function(a,r,n){for(var t=n.length,e=0;e<t;){var b=n[e],u=n.charCodeAt(e);e++,u<55296||56319<u||(b+=n[e],e++),r=p(a,b,r)}return r});var ha=f(function(a,r,n){for(var t=n.length;t--;){var e=n[t],b=n.charCodeAt(t);r=p(a,e=b<56320||57343<b?e:n[--t]+e,r)}return r}),ga=l(function(a,r){return r.split(a)}),ma=l(function(a,r){return r.join(a)}),va=f(function(a,r,n){return n.slice(a,r)});l(function(a,r){for(var n=r.length;n--;){var t=r[n],e=r.charCodeAt(n);if(a(t=e<56320||57343<e?t:r[--n]+t))return!0}return!1});var $a=l(function(a,r){for(var n=r.length;n--;){var t=r[n],e=r.charCodeAt(n);if(!a(t=e<56320||57343<e?t:r[--n]+t))return!1}return!0}),wa=l(function(a,r){return!!~r.indexOf(a)}),ya=l(function(a,r){return 0==r.indexOf(a)}),ka=(l(function(a,r){return a.length<=r.length&&r.lastIndexOf(a)==r.length-a.length}),l(function(a,r){var n=a.length;if(n<1)return v;for(var t=0,e=[];-1<(t=r.indexOf(a,t));)e.push(t),t+=n;return $(e)}));function xa(a){return a+""}var qa={$:2,b:function(a){return"number"!=typeof a||(a<=-2147483647||2147483647<=a||(0|a)!==a)&&(!isFinite(a)||a%1)?Ba("an INT",a):q(a)}},Ea={$:2,b:function(a){return"number"==typeof a?q(a):Ba("a FLOAT",a)}},La={$:2,b:function(a){return q(a)}},Aa={$:2,b:function(a){return"string"==typeof a?q(a):a instanceof String?q(a+""):Ba("a STRING",a)}};var Da=l(function(a,r){return{$:6,d:a,b:r}}),Sa=l(function(a,r){return{$:7,e:a,b:r}});var Ca=l(function(a,r){return{$:10,b:r,h:a}});var _a=l(function(a,r){return{$:9,f:a,g:[r]}}),Ta=f(function(a,r,n){return{$:9,f:a,g:[r,n]}}),Ra=c(function(a,r,n,t){return{$:9,f:a,g:[r,n,t]}}),Na=(V(function(a,r,n,t,e){return{$:9,f:a,g:[r,n,t,e]}}),U(function(a,r,n,t,e,b){return{$:9,f:a,g:[r,n,t,e,b]}}),B(function(a,r,n,t,e,b,u){return{$:9,f:a,g:[r,n,t,e,b,u]}}),H(function(a,r,n,t,e,b,u,i){return{$:9,f:a,g:[r,n,t,e,b,u,i]}}),z(function(a,r,n,t,e,b,u,i,o){return{$:9,f:a,g:[r,n,t,e,b,u,i,o]}}),l(function(a,r){try{return Ia(a,JSON.parse(r))}catch(a){return x(p(Mt,"This is not valid JSON! "+a.message,r))}})),ja=l(Ia);function Ia(a,r){switch(a.$){case 2:return a.b(r);case 5:return null===r?q(a.c):Ba("null",r);case 3:return Va(r)?Oa(a.b,r,$):Ba("a LIST",r);case 4:return Va(r)?Oa(a.b,r,Ua):Ba("an ARRAY",r);case 6:var n=a.d;return"object"==typeof r&&null!==r&&n in r?(b=Ia(a.b,r[n]),Te(b)?b:x(p(Jt,n,b.a))):Ba("an OBJECT with a field named `"+n+"`",r);case 7:n=a.e;return Va(r)?n<r.length?(b=Ia(a.b,r[n]),Te(b)?b:x(p(Wt,n,b.a))):Ba("a LONGER array. Need index "+n+" but only see "+r.length+" entries",r):Ba("an ARRAY",r);case 8:if("object"!=typeof r||null===r||Va(r))return Ba("an OBJECT",r);var t,e=v;for(t in r)if(r.hasOwnProperty(t)){var b=Ia(a.b,r[t]);if(!Te(b))return x(p(Jt,t,b.a));e={$:1,a:{a:t,b:b.a},b:e}}return q(ie(e));case 9:for(var u=a.f,i=a.g,o=0;o<i.length;o++){b=Ia(i[o],r);if(!Te(b))return b;u=u(b.a)}return q(u);case 10:b=Ia(a.b,r);return Te(b)?Ia(a.h(b.a),r):b;case 11:for(var c=v,s=a.g;s.b;s=s.b){b=Ia(s.a,r);if(Te(b))return b;c={$:1,a:b.a,b:c}}return x(Yt(ie(c)));case 1:return x(p(Mt,a.a,r));case 0:return q(a.a)}}function Oa(a,r,n){for(var t=r.length,e=Array(t),b=0;b<t;b++){var u=Ia(a,r[b]);if(!Te(u))return x(p(Wt,b,u.a));e[b]=u.a}return q(n(e))}function Va(a){return Array.isArray(a)||"undefined"!=typeof FileList&&a instanceof FileList}function Ua(r){return p(_e,r.length,function(a){return r[a]})}function Ba(a,r){return x(p(Mt,"Expecting "+a,r))}function Ha(a,r){if(a===r)return!0;if(a.$!==r.$)return!1;switch(a.$){case 0:case 1:return a.a===r.a;case 2:return a.b===r.b;case 5:return a.c===r.c;case 3:case 4:case 8:return Ha(a.b,r.b);case 6:return a.d===r.d&&Ha(a.b,r.b);case 7:return a.e===r.e&&Ha(a.b,r.b);case 9:return a.f===r.f&&za(a.g,r.g);case 10:return a.h===r.h&&Ha(a.b,r.b);case 11:return za(a.g,r.g)}}function za(a,r){var n=a.length;if(n!==r.length)return!1;for(var t=0;t<n;t++)if(!Ha(a[t],r[t]))return!1;return!0}var Pa=l(function(a,r){return JSON.stringify(r,null,a)+""});function Ga(a){return a}f(function(a,r,n){return n[a]=r,n});function Fa(a){return{$:0,a:a}}var Ma=l(function(a,r){return{$:3,b:a,d:r}}),Ja=l(function(a,r){return{$:4,b:a,d:r}});var Wa=0;function Ya(a){a={$:0,e:Wa++,f:a,g:null,h:[]};return rr(a),a}function Xa(r){return{$:2,b:function(a){a({$:0,a:Ya(r)})},c:null}}function Za(a,r){a.h.push(r),rr(a)}var Ka=l(function(r,n){return{$:2,b:function(a){Za(r,n),a({$:0,a:X})},c:null}});var Qa=!1,ar=[];function rr(a){if(ar.push(a),!Qa){for(Qa=!0;a=ar.shift();)!function(r){for(;r.f;){var a=r.f.$;if(0===a||1===a){for(;r.g&&r.g.$!==a;)r.g=r.g.i;if(!r.g)return;r.f=r.g.b(r.f.a),r.g=r.g.i}else{if(2===a)return r.f.c=r.f.b(function(a){r.f=a,rr(r)});if(5===a){if(0===r.h.length)return;r.f=r.f.b(r.h.shift())}else r.g={$:3===a?0:1,b:r.f.b,i:r.g},r.f=r.f.d}}}(a);Qa=!1}}function nr(n){return{$:2,b:function(a){var r=setTimeout(function(){a({$:0,a:X})},n);return function(){clearTimeout(r)}},c:null}}c(function(a,r,n,t){return tr(r,t,a.ca,a.c_,a.cQ,function(){return function(){}})});function tr(a,r,n,t,e,b){var a=p(ja,a,r?r.flags:void 0),u=(Te(a)||ua(2),{}),r=n(a.a),i=r.a,o=b(c,i),n=function(a,r){var n,t;for(t in er){var e=er[t];e.a&&((n=n||{})[t]=e.a(t,r)),a[t]=function(a,r){var t={g:r,h:void 0},e=a.c,b=a.d,u=a.e,i=a.f;return t.h=Ya(p(Ma,function a(n){return p(Ma,a,{$:5,b:function(a){var r=a.a;return 0===a.$?d(b,t,r,n):u&&i?h(e,t,r.i,r.j,n):d(e,t,u?r.i:r.j,n)}})},a.b))}(e,r)}return n}(u,c);function c(a,r){a=p(t,a,i);o(i=a.a,r),lr(u,a.b,e(i))}return lr(u,r.b,e(i)),n?{ports:n}:{}}var er={};var br=l(function(r,n){return{$:2,b:function(a){r.g(n),a({$:0,a:X})},c:null}}),ur=l(function(a,r){return p(Ka,a.h,{$:0,a:r})});function ir(r){return function(a){return{$:1,k:r,l:a}}}function or(a){return{$:2,m:a}}var cr=l(function(a,r){return{$:3,n:a,o:r}}),sr=[],fr=!1;function lr(a,r,n){if(sr.push({p:a,q:r,r:n}),!fr){fr=!0;for(var t;t=sr.shift();)!function(a,r,n){var t,e={};for(t in pr(!0,r,e,null),pr(!1,n,e,null),a)Za(a[t],{$:"fx",a:e[t]||{i:v,j:v}})}(t.p,t.q,t.r);fr=!1}}function pr(a,r,n,t){switch(r.$){case 1:var e=r.k,b=function(a,r,n,t){return p(a?er[r].e:er[r].f,function(a){for(var r=n;r;r=r.t)a=r.s(a);return a},t)}(a,e,t,r.l);return void(n[e]=function(a,r,n){return n=n||{i:v,j:v},a?n.i={$:1,a:r,b:n.i}:n.j={$:1,a:r,b:n.j},n}(a,b,n[e]));case 2:for(var u=r.m;u.b;u=u.b)pr(a,u.a,n,t);return;case 3:pr(a,r.o,n,{s:r.n,t:t})}}function dr(a){er[a]&&ua(3)}l(function(a,r){return r});var hr,gr=l(function(r,n){return function(a){return r(n(a))}});function mr(a,t){var e=v,b=er[a].u,u={$:0,a:null};return er[a].b=u,er[a].c=f(function(a,r,n){return e=r,u}),{send:function(a){for(var a=p(ja,b,a),r=(Te(a)||ua(4),a.a),n=e;n.b;n=n.b)t(n.a(r))}}}var vr="undefined"!=typeof document?document:{};c(function(a,r,n,t){t=t.node;return t.parentNode.replaceChild(Or(a,function(){}),t),{}});function $r(a){return{$:0,a:a}}var w=l(function(b,u){return l(function(a,r){for(var n=[],t=0;r.b;r=r.b){var e=r.a;t+=e.b||0,n.push(e)}return t+=n.length,{$:1,c:u,d:jr(a),e:n,f:b,b:t}})})(void 0),wr=l(function(b,u){return l(function(a,r){for(var n=[],t=0;r.b;r=r.b){var e=r.a;t+=e.b.b||0,n.push(e)}return t+=n.length,{$:2,c:u,d:jr(a),e:n,f:b,b:t}})})(void 0);var yr=l(function(a,r){return{$:4,j:a,k:r,b:1+(r.b||0)}});var kr=l(function(a,r){return{$:5,l:[a,r],m:function(){return a(r)},k:void 0}}),xr=f(function(a,r,n){return{$:5,l:[a,r,n],m:function(){return p(a,r,n)},k:void 0}}),qr=c(function(a,r,n,t){return{$:5,l:[a,r,n,t],m:function(){return d(a,r,n,t)},k:void 0}}),Er=(V(function(a,r,n,t,e){return{$:5,l:[a,r,n,t,e],m:function(){return h(a,r,n,t,e)},k:void 0}}),U(function(a,r,n,t,e,b){return{$:5,l:[a,r,n,t,e,b],m:function(){return s(a,r,n,t,e,b)},k:void 0}})),Lr=(B(function(a,r,n,t,e,b,u){return{$:5,l:[a,r,n,t,e,b,u],m:function(){return P(a,r,n,t,e,b,u)},k:void 0}}),H(function(a,r,n,t,e,b,u,i){return{$:5,l:[a,r,n,t,e,b,u,i],m:function(){return G(a,r,n,t,e,b,u,i)},k:void 0}}),z(function(a,r,n,t,e,b,u,i,o){return{$:5,l:[a,r,n,t,e,b,u,i,o],m:function(){return F(a,r,n,t,e,b,u,i,o)},k:void 0}}),l(function(a,r){return{$:"a0",n:a,o:r}})),Ar=l(function(a,r){return{$:"a1",n:a,o:r}}),Dr=l(function(a,r){return{$:"a2",n:a,o:r}}),Sr=l(function(a,r){return{$:"a3",n:a,o:r}});f(function(a,r,n){return{$:"a4",n:r,o:{f:a,o:n}}});function Cr(a){return"script"==a?"p":a}function _r(a){return/^\s*(javascript:|data:text\/html)/i.test(a)?"":a}l(function(a,r){return"a0"===r.$?p(Lr,r.n,function(a,r){var n=je(r);return{$:r.$,a:n?d(Ne,n<3?Rr:Nr,e(a),r.a):p(Re,a,r.a)}}(a,r.o)):r});var Tr,Rr=l(function(a,r){return{a:a(r.a),b:r.b}}),Nr=l(function(a,r){return{F:a(r.F),aH:r.aH,aE:r.aE}});function jr(a){for(var r={};a.b;a=a.b){var n,t=a.a,e=t.$,b=t.n,t=t.o;"a2"===e?"className"===b?Ir(r,b,t):r[b]=t:(n=r[e]||(r[e]={}),"a3"===e&&"class"===b?Ir(n,b,t):n[b]=t)}return r}function Ir(a,r,n){var t=a[r];a[r]=t?t+" "+n:n}function Or(a,r){var n=a.$;if(5===n)return Or(a.k||(a.k=a.m()),r);if(0===n)return vr.createTextNode(a.a);if(4===n){for(var t=a.k,e=a.j;4===t.$;)"object"!=typeof e?e=[e,t.j]:e.push(t.j),t=t.k;var b={j:e,p:r};(u=Or(t,b)).elm_event_node_ref=b}else if(3===n)Vr(u=a.h(a.g),r,a.d);else{var u=a.f?vr.createElementNS(a.f,a.c):vr.createElement(a.c);hr&&"a"==a.c&&u.addEventListener("click",hr(u)),Vr(u,r,a.d);for(var i=a.e,o=0;o<i.length;o++)u.appendChild(Or(1===n?i[o]:i[o].b,r))}return u}function Vr(a,r,n){for(var t in n){var e=n[t];"a1"===t?function(a,r){var n,t=a.style;for(n in r)t[n]=r[n]}(a,e):"a0"===t?function(a,r,n){var t,e=a.elmFs||(a.elmFs={});for(t in n){var b=n[t],u=e[t];if(b){if(u){if(u.q.$===b.$){u.q=b;continue}a.removeEventListener(t,u)}u=function(o,a){function c(a){var r=c.q,n=Ia(r.a,a);if(Te(n)){for(var t,r=je(r),n=n.a,e=r?r<3?n.a:n.F:n,b=1==r?n.b:3==r&&n.aH,u=(b&&a.stopPropagation(),(2==r?n.b:3==r&&n.aE)&&a.preventDefault(),o);t=u.j;){if("function"==typeof t)e=t(e);else for(var i=t.length;i--;)e=t[i](e);u=u.p}u(e,b)}}return c.q=a,c}(r,b),a.addEventListener(t,u,Tr&&{passive:je(b)<2}),e[t]=u}else a.removeEventListener(t,u),e[t]=void 0}}(a,r,e):"a3"===t?function(a,r){for(var n in r){var t=r[n];void 0!==t?a.setAttribute(n,t):a.removeAttribute(n)}}(a,e):"a4"===t?function(a,r){for(var n in r){var t=r[n],e=t.f,t=t.o;void 0!==t?a.setAttributeNS(e,n,t):a.removeAttributeNS(e,n)}}(a,e):("value"!==t&&"checked"!==t||a[t]!==e)&&(a[t]=e)}}try{window.addEventListener("t",null,Object.defineProperty({},"passive",{get:function(){Tr=!0}}))}catch(a){}function Ur(a,r){var n=[];return Hr(a,r,n,0),n}function Br(a,r,n,t){r={$:r,r:n,s:t,t:void 0,u:void 0};return a.push(r),r}function Hr(a,r,n,t){if(a!==r){var e=a.$,b=r.$;if(e!==b){if(1!==e||2!==b)return void Br(n,0,t,r);r=function(a){for(var r=a.e,n=r.length,t=Array(n),e=0;e<n;e++)t[e]=r[e].b;return{$:1,c:a.c,d:a.d,e:t,f:a.f,b:a.b}}(r),b=1}switch(b){case 5:for(var u=a.l,i=r.l,o=u.length,c=o===i.length;c&&o--;)c=u[o]===i[o];if(c)return void(r.k=a.k);r.k=r.m();var s=[];return Hr(a.k,r.k,s,0),void(0<s.length&&Br(n,1,t,s));case 4:for(var f=a.j,l=r.j,p=!1,d=a.k;4===d.$;)p=!0,"object"!=typeof f?f=[f,d.j]:f.push(d.j),d=d.k;for(var h=r.k;4===h.$;)p=!0,"object"!=typeof l?l=[l,h.j]:l.push(h.j),h=h.k;return p&&f.length!==l.length?void Br(n,0,t,r):((p?function(a,r){for(var n=0;n<a.length;n++)if(a[n]!==r[n])return;return 1}(f,l):f===l)||Br(n,2,t,l),void Hr(d,h,n,t+1));case 0:return void(a.a!==r.a&&Br(n,3,t,r.a));case 1:return void zr(a,r,n,t,Gr);case 2:return void zr(a,r,n,t,Fr);case 3:if(a.h!==r.h)return void Br(n,0,t,r);s=Pr(a.d,r.d),s=(s&&Br(n,4,t,s),r.i(a.g,r.g));s&&Br(n,5,t,s)}}}function zr(a,r,n,t,e){var b;a.c!==r.c||a.f!==r.f?Br(n,0,t,r):((b=Pr(a.d,r.d))&&Br(n,4,t,b),e(a,r,n,t))}function Pr(a,r,n){var t,e,b,u,i;for(e in a)"a1"===e||"a0"===e||"a3"===e||"a4"===e?(b=Pr(a[e],r[e]||{},e))&&((t=t||{})[e]=b):e in r?(b=a[e])===(u=r[e])&&"value"!==e&&"checked"!==e||"a0"===n&&function(a,r){return a.$==r.$&&Ha(a.a,r.a)}(b,u)||((t=t||{})[e]=u):(t=t||{})[e]=n?"a1"===n?"":"a0"===n||"a3"===n?void 0:{f:a[e].f,o:void 0}:"string"==typeof a[e]?"":null;for(i in r)i in a||((t=t||{})[i]=r[i]);return t}function Gr(a,r,n,t){var e=a.e,b=r.e,a=e.length,r=b.length;r<a?Br(n,6,t,{v:r,i:a-r}):a<r&&Br(n,7,t,{v:a,e:b});for(var u=a<r?a:r,i=0;i<u;i++){var o=e[i];Hr(o,b[i],n,++t),t+=o.b||0}}function Fr(a,r,n,t){for(var e=[],b={},u=[],i=a.e,o=r.e,c=i.length,s=o.length,f=0,l=0,p=t;f<c&&l<s;){var d=i[f],h=o[l],g=d.a,m=h.a,v=d.b,$=h.b,w=void 0,y=void 0;if(g===m)Hr(v,$,e,++p),p+=v.b||0,f++,l++;else{var k,x,q,E,L=i[f+1],A=o[l+1];if(L&&(x=L.b,y=m===(k=L.a)),A&&(E=A.b,w=g===(q=A.a)),w&&y)Hr(v,E,e,++p),Jr(b,e,g,$,l,u),p+=v.b||0,Wr(b,e,g,x,++p),p+=x.b||0,f+=2,l+=2;else if(w)p++,Jr(b,e,m,$,l,u),Hr(v,E,e,p),p+=v.b||0,f+=1,l+=2;else if(y)Wr(b,e,g,v,++p),p+=v.b||0,Hr(x,$,e,++p),p+=x.b||0,f+=2,l+=1;else{if(!L||k!==q)break;Wr(b,e,g,v,++p),Jr(b,e,m,$,l,u),p+=v.b||0,Hr(x,E,e,++p),p+=x.b||0,f+=2,l+=2}}}for(;f<c;){v=(d=i[f]).b;Wr(b,e,d.a,v,++p),p+=v.b||0,f++}for(;l<s;){var D=D||[];Jr(b,e,(h=o[l]).a,h.b,void 0,D),l++}(0<e.length||0<u.length||D)&&Br(n,8,t,{w:e,x:u,y:D})}var Mr="_elmW6BL";function Jr(a,r,n,t,e,b){var u,i=a[n];i?1===i.c?(b.push({r:e,A:i}),i.c=2,Hr(i.z,t,u=[],i.r),i.r=e,i.s.s={w:u,A:i}):Jr(a,r,n+Mr,t,e,b):(b.push({r:e,A:i={c:0,z:t,r:e,s:void 0}}),a[n]=i)}function Wr(a,r,n,t,e){var b,u=a[n];u?0===u.c?(u.c=2,Hr(t,u.z,b=[],e),Br(r,9,e,{w:b,A:u})):Wr(a,r,n+Mr,t,e):(b=Br(r,9,e,void 0),a[n]={c:1,z:t,r:e,s:b})}function Yr(a,r,n,t){!function a(r,n,t,e,b,u,i){var o=t[e];var c=o.r;for(;c===b;){var s,f=o.$;if(1===f?Yr(r,n.k,o.s,i):8===f?(o.t=r,o.u=i,0<(s=o.s.w).length&&a(r,n,s,0,b,u,i)):9===f?(o.t=r,o.u=i,(f=o.s)&&(f.A.s=r,0<(s=f.w).length)&&a(r,n,s,0,b,u,i)):(o.t=r,o.u=i),!(o=t[++e])||(c=o.r)>u)return e}var l=n.$;if(4===l){for(var p=n.k;4===p.$;)p=p.k;return a(r,p,t,e,b+1,u,r.elm_event_node_ref)}var d=n.e;var h=r.childNodes;for(var g=0;g<d.length;g++){var m=1===l?d[g]:d[g].b,v=++b+(m.b||0);if(b<=c&&c<=v&&(e=a(h[g],m,t,e,b,v,i),!(o=t[e])||(c=o.r)>u))return e;b=v}return e}(a,r,n,0,0,r.b,t)}function Xr(a,r,n,t){return 0===n.length?a:(Yr(a,r,n,t),Zr(a,n))}function Zr(a,r){for(var n=0;n<r.length;n++){var t=r[n],e=t.t,t=function(a,r){switch(r.$){case 0:return function(a,r,n){var t=a.parentNode,r=Or(r,n);r.elm_event_node_ref||(r.elm_event_node_ref=a.elm_event_node_ref);t&&r!==a&&t.replaceChild(r,a);return r}(a,r.s,r.u);case 4:return Vr(a,r.u,r.s),a;case 3:return a.replaceData(0,a.length,r.s),a;case 1:return Zr(a,r.s);case 2:return a.elm_event_node_ref?a.elm_event_node_ref.j=r.s:a.elm_event_node_ref={j:r.s,p:r.u},a;case 6:for(var n=r.s,t=0;t<n.i;t++)a.removeChild(a.childNodes[n.v]);return a;case 7:for(var e=(n=r.s).e,t=n.v,b=a.childNodes[t];t<e.length;t++)a.insertBefore(Or(e[t],r.u),b);return a;case 9:var u;return(n=r.s)?(void 0!==(u=n.A).r&&a.parentNode.removeChild(a),u.s=Zr(a,n.w)):a.parentNode.removeChild(a),a;case 8:return function(a,r){for(var n=r.s,t=function(a,r){if(a){for(var n=vr.createDocumentFragment(),t=0;t<a.length;t++){var e=a[t].A;n.appendChild(2===e.c?e.s:Or(e.z,r.u))}return n}}(n.y,r),e=(a=Zr(a,n.w),n.x),b=0;b<e.length;b++){var u=e[b],i=u.A,i=2===i.c?i.s:Or(i.z,r.u);a.insertBefore(i,a.childNodes[u.r])}t&&a.appendChild(t);return a}(a,r);case 5:return r.s(a);default:ua(10)}}(e,t);e===a&&(a=t)}return a}function Kr(a){if(3===a.nodeType)return{$:0,a:a.textContent};if(1!==a.nodeType)return{$:0,a:""};for(var r=v,n=a.attributes,t=n.length;t--;)var e=n[t],r={$:1,a:p(Sr,e.name,e.value),b:r};for(var b=a.tagName.toLowerCase(),u=v,i=a.childNodes,t=i.length;t--;)u={$:1,a:Kr(i[t]),b:u};return d(w,b,r,u)}var Qr=c(function(r,a,n,u){return tr(a,u,r.ca,r.c_,r.cQ,function(n,a){var t=r.c0,e=u.node,b=Kr(e);return nn(a,function(a){var a=t(a),r=Ur(b,a);e=Xr(e,b,r,n),b=a})})}),an=(c(function(r,a,n,t){return tr(a,t,r.ca,r.c_,r.cQ,function(t,a){var e=r.aF&&r.aF(t),b=r.c0,u=vr.title,i=vr.body,o=Kr(i);return nn(a,function(a){hr=e;var a=b(a),r=w("body")(v)(a.bI),n=Ur(o,r);i=Xr(i,o,n,t),o=r,hr=0,u!==a.w&&(vr.title=u=a.w)})})}),"undefined"!=typeof cancelAnimationFrame?cancelAnimationFrame:function(a){clearTimeout(a)}),rn="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:function(a){return setTimeout(a,1e3/60)};function nn(n,t){t(n);var e=0;function b(){e=1===e?0:(rn(b),t(n),1)}return function(a,r){n=a,r?(t(n),2===e&&(e=1)):(0===e&&rn(b),e=2)}}l(function(a,r){return p(ib,Ke,{$:2,b:function(){r&&history.go(r),a()},c:null})}),l(function(a,r){return p(ib,Ke,{$:2,b:function(){history.pushState({},"",r),a()},c:null})}),l(function(a,r){return p(ib,Ke,{$:2,b:function(){history.replaceState({},"",r),a()},c:null})});var tn={addEventListener:function(){},removeEventListener:function(){}},en="undefined"!=typeof document?document:tn,bn="undefined"!=typeof window?window:tn,un=f(function(n,t,e){return Xa({$:2,b:function(a){function r(a){Ya(e(a))}return n.addEventListener(t,r,Tr&&{passive:!0}),function(){n.removeEventListener(t,r)}},c:null})}),on=l(function(a,r){a=Ia(a,r);return Te(a)?E(a.a):L});function cn(n,t){return{$:2,b:function(r){rn(function(){var a=document.getElementById(n);r(a?{$:0,a:t(a)}:{$:1,a:Ie(n)})})},c:null}}function sn(r){return{$:2,b:function(a){rn(function(){a({$:0,a:r()})})},c:null}}l(function(r,a){return cn(a,function(a){return a[r](),X})});function fn(){var a=en.body,r=en.documentElement;return{bD:Math.max(a.scrollWidth,a.offsetWidth,r.scrollWidth,r.offsetWidth,r.clientWidth),a$:Math.max(a.scrollHeight,a.offsetHeight,r.scrollHeight,r.offsetHeight,r.clientHeight)}}tn=l(function(a,r){return sn(function(){return bn.scroll(a,r),X})});f(function(a,r,n){return cn(a,function(a){return a.scrollLeft=r,a.scrollTop=n,X})});var ln=f(function(t,e,b){return{$:2,b:function(r){function n(a){r(e(b.bV.a(a)))}var a=new XMLHttpRequest;a.addEventListener("error",function(){n(zb)}),a.addEventListener("timeout",function(){n(Fb)}),a.addEventListener("load",function(){n(function(a,r){return p(200<=r.status&&r.status<300?Hb:Ub,function(a){return{bC:a.responseURL,bv:a.status,cN:a.statusText,S:function(a){if(!a)return $b;for(var r=$b,n=a.split("\r\n"),t=n.length;t--;){var e,b,u=n[t],i=u.indexOf(": ");0<i&&(e=u.substring(0,i),b=u.substring(2+i),r=d(Qb,e,function(a){return E(Mb(a)?b+", "+a.a:b)},r))}return r}(a.getAllResponseHeaders())}}(r),a(r.response))}(b.bV.b,a))}),Mb(b.cX)&&function(r,n,t){n.upload.addEventListener("progress",function(a){n.c||Ya(p(Jb,r,{a:t,b:Gb({cL:a.loaded,bt:a.total})}))}),n.addEventListener("progress",function(a){n.c||Ya(p(Jb,r,{a:t,b:Pb({cF:a.loaded,bt:a.lengthComputable?E(a.total):L})}))})}(t,a,b.cX.a);try{a.open(b.U,b.bC,!0)}catch(a){return n(Bb(b.bC))}return function(a,r){for(var n=r.S;n.b;n=n.b)a.setRequestHeader(n.a.a,n.a.b);a.timeout=r.W.a||0,a.responseType=r.bV.d,a.withCredentials=r.bG}(a,b),b.bI.a&&a.setRequestHeader("Content-Type",b.bI.a),a.send(b.bI.b),function(){a.c=!0,a.abort()}},c:null}});var pn=f(function(a,r,n){return{$:0,d:a,b:r,a:n}}),dn=l(function(r,n){return{$:0,d:n.d,b:n.b,a:function(a){return r(n.a(a))}}});l(function(a,r){return{$:0,a:a,b:r}});l(function(a,r){return new Blob([r],{type:a})});var hn=V(function(a,r,n,t,e){for(var b=a.length,u=r+b<=e.length,i=0;u&&i<b;)var o=e.charCodeAt(r),u=a[i++]===e[r++]&&(10==o?(n++,t=1):(t++,55296==(63488&o)?a[i++]===e[r++]:1));return{a:u?r:-1,b:n,c:t}}),gn=f(function(a,r,n){return r<n.length?55296==(63488&n.charCodeAt(r))?a(n.substr(r,2))?r+2:-1:a(n[r])?"\n"===n[r]?-2:r+1:-1:-1}),mn=f(function(a,r,n){return n.charCodeAt(r)===a}),vn=l(function(a,r){for(;a<r.length;a++){var n=r.charCodeAt(a);if(n<48||57<n)return a}return a}),$n=f(function(a,r,n){for(var t=0;r<n.length;r++){var e=n.charCodeAt(r)-48;if(e<0||a<=e)break;t=a*t+e}return{a:r,b:t}}),wn=l(function(a,r){for(var n=0;a<r.length;a++){var t=r.charCodeAt(a);if(48>t||t>57)if(65>t||t>70){if(t<97||102<t)break;n=16*n+t-87}else n=16*n+t-55;else n=16*n+t-48}return{a:a,b:n}}),yn=V(function(a,r,n,t,e){for(var b=e.indexOf(a,r),u=b<0?e.length:b+a.length;r<u;){var i=e.charCodeAt(r++);10==i?(t=1,n++):(t++,55296==(63488&i)&&r++)}return{a:b,b:n,c:t}});l(function(a,r){return a&r}),l(function(a,r){return a|r}),l(function(a,r){return a^r});l(function(a,r){return r<<a}),l(function(a,r){return r>>a}),l(function(a,r){return r>>>a});var kn=l(function(a,r){var n="g";a.cl&&(n+="m"),a.bK&&(n+="i");try{return E(RegExp(r,n))}catch(a){return L}}),xn=(l(function(a,r){return null!==r.match(a)}),f(function(a,r,n){for(var t,e=[],b=0,u=n,n=r.lastIndex,i=-1;b++<a&&(t=r.exec(u))&&i!=r.lastIndex;){for(var o=t.length-1,c=Array(o);0<o;){var s=t[o];c[--o]=s?E(s):L}e.push(h(tc,t[0],t.index,b,$(c))),i=r.lastIndex}return r.lastIndex=n,$(e)}),c(function(e,a,b,r){var u=0;return r.replace(a,function(a){if(u++>=e)return a;for(var r=arguments.length-3,n=Array(r);0<r;){var t=arguments[r];n[--r]=t?E(t):L}return b(h(tc,a,arguments[arguments.length-2],u,$(n)))})})),qn=(f(function(a,r,n){for(var t=n,e=[],b=r.lastIndex,n=r.lastIndex;a--;){var u=r.exec(t);if(!u)break;e.push(t.slice(b,u.index)),b=r.lastIndex}return e.push(t.slice(b)),r.lastIndex=n,$(e)}),f(function(a,r,n){return function(a,r,n,t){return{$:3,d:jr(a),g:r,h:n,i:t}}(r,{a:a,b:n},En,Ln)}));function En(a){return p(Sn,a,vr.createElement("div"))}function Ln(a,r){return(a.b!==r.b||a.a!==r.a)&&Sn(r)}var An,Dn,Sn=l(function(a,r){var n;return r.innerHTML=Cn(a.b,{highlight:function(a,r){return!r&&Mb(n.aT)&&(r=n.aT.a),"undefined"!=typeof hljs&&r&&~hljs.listLanguages().indexOf(r)?hljs.highlight(r,a,!0).value:a},gfm:a=(n=a.a).b3.a,tables:a&&a.cS,breaks:a&&a.bJ,sanitize:n.cK,smartypants:n.cM}),r}),Cn=(Dn=(An={}).exports={},function(){var s={newline:/^\n+/,code:/^( {4}[^\n]+\n*)+/,fences:r,hr:/^( *[-*_]){3,} *(?:\n+|$)/,heading:/^ *(#{1,6}) *([^\n]+?) *#* *(?:\n+|$)/,nptable:r,lheading:/^([^\n]+)\n *(=|-){2,} *(?:\n+|$)/,blockquote:/^( *>[^\n]+(\n(?!def)[^\n]+)*\n*)+/,list:/^( *)(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,html:/^ *(?:comment *(?:\n|\s*$)|closed *(?:\n{2,}|\s*$)|closing *(?:\n{2,}|\s*$))/,def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +["(]([^\n]+)[")])? *(?:\n+|$)/,table:r,paragraph:/^((?:[^\n]+\n?(?!hr|heading|lheading|blockquote|tag|def))+)\n*/,text:/^[^\n]+/};function o(a){this.tokens=[],this.tokens.links={},this.options=a||p.defaults,this.rules=s.normal,this.options.gfm&&(this.rules=this.options.tables?s.tables:s.gfm)}s.bullet=/(?:[*+-]|\d+\.)/,s.item=/^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/,s.item=a(s.item,"gm")(/bull/g,s.bullet)(),s.list=a(s.list)(/bull/g,s.bullet)("hr","\\n+(?=\\1?(?:[-*_] *){3,}(?:\\n+|$))")("def","\\n+(?="+s.def.source+")")(),s.blockquote=a(s.blockquote)("def",s.def)(),s._tag="(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:/|[^\\w\\s@]*@)\\b",s.html=a(s.html)("comment",/<!--[\s\S]*?-->/)("closed",/<(tag)[\s\S]+?<\/\1>/)("closing",/<tag(?:"[^"]*"|'[^']*'|[^'">])*?>/)(/tag/g,s._tag)(),s.paragraph=a(s.paragraph)("hr",s.hr)("heading",s.heading)("lheading",s.lheading)("blockquote",s.blockquote)("tag","<"+s._tag)("def",s.def)(),s.normal=l({},s),s.gfm=l({},s.normal,{fences:/^ *(`{3,}|~{3,})[ \.]*(\S+)? *\n([\s\S]*?)\s*\1 *(?:\n+|$)/,paragraph:/^/,heading:/^ *(#{1,6}) +([^\n]+?) *#* *(?:\n+|$)/}),s.gfm.paragraph=a(s.paragraph)("(?!","(?!"+s.gfm.fences.source.replace("\\1","\\2")+"|"+s.list.source.replace("\\1","\\3")+"|")(),s.tables=l({},s.gfm,{nptable:/^ *(\S.*\|.*)\n *([-:]+ *\|[-| :]*)\n((?:.*\|.*(?:\n|$))*)\n*/,table:/^ *\|(.+)\n *\|( *[-:]+[-| :]*)\n((?: *\|.*(?:\n|$))*)\n*/}),o.rules=s,o.lex=function(a,r){return new o(r).lex(a)},o.prototype.lex=function(a){return a=a.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    ").replace(/\u00a0/g," ").replace(/\u2424/g,"\n"),this.token(a,!0)},o.prototype.token=function(a,r,n){for(var t,e,b,u,i,o,c,a=a.replace(/^ +$/gm,"");a;)if((e=this.rules.newline.exec(a))&&(a=a.substring(e[0].length),1<e[0].length)&&this.tokens.push({type:"space"}),e=this.rules.code.exec(a))a=a.substring(e[0].length),e=e[0].replace(/^ {4}/gm,""),this.tokens.push({type:"code",text:this.options.pedantic?e:e.replace(/\n+$/,"")});else if(e=this.rules.fences.exec(a))a=a.substring(e[0].length),this.tokens.push({type:"code",lang:e[2],text:e[3]||""});else if(e=this.rules.heading.exec(a))a=a.substring(e[0].length),this.tokens.push({type:"heading",depth:e[1].length,text:e[2]});else if(r&&(e=this.rules.nptable.exec(a))){for(a=a.substring(e[0].length),u={type:"table",header:e[1].replace(/^ *| *\| *$/g,"").split(/ *\| */),align:e[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:e[3].replace(/\n$/,"").split("\n")},o=0;o<u.align.length;o++)u.align[o]=/^ *-+: *$/.test(u.align[o])?"right":/^ *:-+: *$/.test(u.align[o])?"center":/^ *:-+ *$/.test(u.align[o])?"left":null;for(o=0;o<u.cells.length;o++)u.cells[o]=u.cells[o].split(/ *\| */);this.tokens.push(u)}else if(e=this.rules.lheading.exec(a))a=a.substring(e[0].length),this.tokens.push({type:"heading",depth:"="===e[2]?1:2,text:e[1]});else if(e=this.rules.hr.exec(a))a=a.substring(e[0].length),this.tokens.push({type:"hr"});else if(e=this.rules.blockquote.exec(a))a=a.substring(e[0].length),this.tokens.push({type:"blockquote_start"}),e=e[0].replace(/^ *> ?/gm,""),this.token(e,r,!0),this.tokens.push({type:"blockquote_end"});else if(e=this.rules.list.exec(a)){for(a=a.substring(e[0].length),this.tokens.push({type:"list_start",ordered:1<(b=e[2]).length}),t=!1,c=(e=e[0].match(this.rules.item)).length,o=0;o<c;o++)i=(u=e[o]).length,~(u=u.replace(/^ *([*+-]|\d+\.) +/,"")).indexOf("\n ")&&(i-=u.length,u=u.replace(this.options.pedantic?/^ {1,4}/gm:RegExp("^ {1,"+i+"}","gm"),"")),!this.options.smartLists||o===c-1||b===(i=s.bullet.exec(e[o+1])[0])||1<b.length&&1<i.length||(a=e.slice(o+1).join("\n")+a,o=c-1),i=t||/\n\n(?!\s*$)/.test(u),o!==c-1&&(t="\n"==(u[0|u.length-1]||""),i=i||t),this.tokens.push({type:i?"loose_item_start":"list_item_start"}),this.token(u,!1,n),this.tokens.push({type:"list_item_end"});this.tokens.push({type:"list_end"})}else if(e=this.rules.html.exec(a))a=a.substring(e[0].length),this.tokens.push({type:this.options.sanitize?"paragraph":"html",pre:!this.options.sanitizer&&("pre"===e[1]||"script"===e[1]||"style"===e[1]),text:e[0]});else if(!n&&r&&(e=this.rules.def.exec(a)))a=a.substring(e[0].length),this.tokens.links[e[1].toLowerCase()]={href:e[2],title:e[3]};else if(r&&(e=this.rules.table.exec(a))){for(a=a.substring(e[0].length),u={type:"table",header:e[1].replace(/^ *| *\| *$/g,"").split(/ *\| */),align:e[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:e[3].replace(/(?: *\| *)?\n$/,"").split("\n")},o=0;o<u.align.length;o++)u.align[o]=/^ *-+: *$/.test(u.align[o])?"right":/^ *:-+: *$/.test(u.align[o])?"center":/^ *:-+ *$/.test(u.align[o])?"left":null;for(o=0;o<u.cells.length;o++)u.cells[o]=u.cells[o].replace(/^ *\| *| *\| *$/g,"").split(/ *\| */);this.tokens.push(u)}else if(r&&(e=this.rules.paragraph.exec(a)))a=a.substring(e[0].length),this.tokens.push({type:"paragraph",text:"\n"==(e[1][0|e[1].length-1]||"")?e[1].slice(0,-1):e[1]});else if(e=this.rules.text.exec(a))a=a.substring(e[0].length),this.tokens.push({type:"text",text:e[0]});else if(a)throw Error("Infinite loop on byte: "+a.charCodeAt(0));return this.tokens};var n={escape:/^\\([\\`*{}\[\]()#+\-.!_>])/,autolink:/^<([^ >]+(@|:\/)[^ >]+)>/,url:r,tag:/^<!--[\s\S]*?-->|^<\/?\w+(?:"[^"]*"|'[^']*'|[^'">])*?>/,link:/^!?\[(inside)\]\(href\)/,reflink:/^!?\[(inside)\]\s*\[([^\]]*)\]/,nolink:/^!?\[((?:\[[^\]]*\]|[^\[\]])*)\]/,strong:/^_\_([\s\S]+?)_\_(?!_)|^\*\*([\s\S]+?)\*\*(?!\*)/,em:/^\b_((?:[^_]|_\_)+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,code:/^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/,br:/^ {2,}\n(?!\s*$)/,del:r,text:/^[\s\S]+?(?=[\\<!\[_*`]| {2,}\n|$)/};function t(a,r){if(this.options=r||p.defaults,this.links=a,this.rules=n.normal,this.renderer=this.options.renderer||new e,this.renderer.options=this.options,!this.links)throw Error("Tokens array requires a `links` property.");this.options.gfm?this.rules=this.options.breaks?n.breaks:n.gfm:this.options.pedantic&&(this.rules=n.pedantic)}function e(a){this.options=a||{}}function c(a){this.tokens=[],this.token=null,this.options=a||p.defaults,this.options.renderer=this.options.renderer||new e,this.renderer=this.options.renderer,this.renderer.options=this.options}function f(a,r){return a.replace(r?/&/g:/&(?!#?\w+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}function a(t,e){return t=t.source,e=e||"",function a(r,n){return r?(n=(n=n.source||n).replace(/(^|[^\[])\^/g,"$1"),t=t.replace(r,n),a):RegExp(t,e)}}function r(){}function l(a){for(var r,n,t=1;t<arguments.length;t++)for(n in r=arguments[t])Object.prototype.hasOwnProperty.call(r,n)&&(a[n]=r[n]);return a}function p(a,n,t){if(t||"function"==typeof n){t||(t=n,n=null);var e,b=(n=l({},p.defaults,n||{})).highlight,r=0;try{e=o.lex(a,n)}catch(a){return t(a)}var u=e.length,i=function(r){if(r)return n.highlight=b,t(r);var a;try{a=c.parse(e,n)}catch(a){r=a}return n.highlight=b,r?t(r):t(null,a)};if(!b||b.length<3)return i();if(delete n.highlight,!u)return i();for(;r<e.length;r++)!function(n){"code"!==n.type?--u||i():b(n.text,n.lang,function(a,r){return a?i(a):null==r||r===n.text?--u||i():(n.text=r,n.escaped=!0,void(--u||i()))})}(e[r])}else try{return n=n&&l({},p.defaults,n),c.parse(o.lex(a,n),n)}catch(a){if(a.message+="\nPlease report this to https://github.com/chjj/marked.",(n||p.defaults).silent)return"<p>An error occured:</p><pre>"+f(a.message+"",!0)+"</pre>";throw a}}n._inside=/(?:\[[^\]]*\]|[^\[\]]|\](?=[^\[]*\]))*/,n._href=/\s*<?([\s\S]*?)>?(?:\s+['"]([\s\S]*?)['"])?\s*/,n.link=a(n.link)("inside",n._inside)("href",n._href)(),n.reflink=a(n.reflink)("inside",n._inside)(),n.normal=l({},n),n.pedantic=l({},n.normal,{strong:/^_\_(?=\S)([\s\S]*?\S)_\_(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,em:/^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/}),n.gfm=l({},n.normal,{escape:a(n.escape)("])","~|])")(),url:/^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/,del:/^~~(?=\S)([\s\S]*?\S)~~/,text:a(n.text)("]|","~]|")("|","|https?://|")()}),n.breaks=l({},n.gfm,{br:a(n.br)("{2,}","*")(),text:a(n.gfm.text)("{2,}","*")()}),t.rules=n,t.output=function(a,r,n){return new t(r,n).output(a)},t.prototype.output=function(a){for(var r,n,t,e,b="";a;)if(e=this.rules.escape.exec(a))a=a.substring(e[0].length),b+=e[1];else if(e=this.rules.autolink.exec(a))a=a.substring(e[0].length),t="@"===e[2]?(n=this.mangle(":"==(e[1][6]||"")?e[1].substring(7):e[1]),this.mangle("mailto:")+n):n=f(e[1]),b+=this.renderer.link(t,null,n);else if(!this.inLink&&(e=this.rules.url.exec(a)))a=a.substring(e[0].length),t=n=f(e[1]),b+=this.renderer.link(t,null,n);else if(e=this.rules.tag.exec(a))!this.inLink&&/^<a /i.test(e[0])?this.inLink=!0:this.inLink&&/^<\/a>/i.test(e[0])&&(this.inLink=!1),a=a.substring(e[0].length),b+=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(e[0]):f(e[0]):e[0];else if(e=this.rules.link.exec(a))a=a.substring(e[0].length),this.inLink=!0,b+=this.outputLink(e,{href:e[2],title:e[3]}),this.inLink=!1;else if(e=(e=this.rules.reflink.exec(a))||this.rules.nolink.exec(a))a=a.substring(e[0].length),r=(e[2]||e[1]).replace(/\s+/g," "),(r=this.links[r.toLowerCase()])&&r.href?(this.inLink=!0,b+=this.outputLink(e,r),this.inLink=!1):(b+=e[0][0]||"",a=e[0].substring(1)+a);else if(e=this.rules.strong.exec(a))a=a.substring(e[0].length),b+=this.renderer.strong(this.output(e[2]||e[1]));else if(e=this.rules.em.exec(a))a=a.substring(e[0].length),b+=this.renderer.em(this.output(e[2]||e[1]));else if(e=this.rules.code.exec(a))a=a.substring(e[0].length),b+=this.renderer.codespan(f(e[2],!0));else if(e=this.rules.br.exec(a))a=a.substring(e[0].length),b+=this.renderer.br();else if(e=this.rules.del.exec(a))a=a.substring(e[0].length),b+=this.renderer.del(this.output(e[1]));else if(e=this.rules.text.exec(a))a=a.substring(e[0].length),b+=this.renderer.text(f(this.smartypants(e[0])));else if(a)throw Error("Infinite loop on byte: "+a.charCodeAt(0));return b},t.prototype.outputLink=function(a,r){var n=f(r.href),r=r.title?f(r.title):null;return"!"!=(a[0][0]||"")?this.renderer.link(n,r,this.output(a[1])):this.renderer.image(n,r,f(a[1]))},t.prototype.smartypants=function(a){return this.options.smartypants?a.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014\/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014\/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…"):a},t.prototype.mangle=function(a){if(!this.options.mangle)return a;for(var r,n="",t=a.length,e=0;e<t;e++)r=a.charCodeAt(e),n+="&#"+(r=.5<Math.random()?"x"+r.toString(16):r)+";";return n},e.prototype.code=function(a,r,n){var t;return this.options.highlight&&null!=(t=this.options.highlight(a,r))&&t!==a&&(n=!0,a=t),r?'<pre><code class="'+this.options.langPrefix+f(r,!0)+'">'+(n?a:f(a,!0))+"\n</code></pre>\n":"<pre><code>"+(n?a:f(a,!0))+"\n</code></pre>"},e.prototype.blockquote=function(a){return"<blockquote>\n"+a+"</blockquote>\n"},e.prototype.html=function(a){return a},e.prototype.heading=function(a,r,n){return"<h"+r+' id="'+this.options.headerPrefix+n.toLowerCase().replace(/[^\w]+/g,"-")+'">'+a+"</h"+r+">\n"},e.prototype.hr=function(){return this.options.xhtml?"<hr/>\n":"<hr>\n"},e.prototype.list=function(a,r){r=r?"ol":"ul";return"<"+r+">\n"+a+"</"+r+">\n"},e.prototype.listitem=function(a){return"<li>"+a+"</li>\n"},e.prototype.paragraph=function(a){return"<p>"+a+"</p>\n"},e.prototype.table=function(a,r){return"<table>\n<thead>\n"+a+"</thead>\n<tbody>\n"+r+"</tbody>\n</table>\n"},e.prototype.tablerow=function(a){return"<tr>\n"+a+"</tr>\n"},e.prototype.tablecell=function(a,r){var n=r.header?"th":"td";return(r.align?"<"+n+' style="text-align:'+r.align+'">':"<"+n+">")+a+"</"+n+">\n"},e.prototype.strong=function(a){return"<strong>"+a+"</strong>"},e.prototype.em=function(a){return"<em>"+a+"</em>"},e.prototype.codespan=function(a){return"<code>"+a+"</code>"},e.prototype.br=function(){return this.options.xhtml?"<br/>":"<br>"},e.prototype.del=function(a){return"<del>"+a+"</del>"},e.prototype.link=function(a,r,n){if(this.options.sanitize){try{var t=decodeURIComponent(a.replace(/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/g,function(a,r){return"colon"===(r=r.toLowerCase())?":":"#"==(r[0]||"")?String.fromCharCode("x"==(r[1]||"")?parseInt(r.substring(2),16):+r.substring(1)):""})).replace(/[^\w:]/g,"").toLowerCase()}catch(a){return""}if(!t.indexOf("javascript:")||!t.indexOf("vbscript:")||!t.indexOf("data:"))return""}t='<a href="'+a+'"';return r&&(t+=' title="'+r+'"'),t+=">"+n+"</a>"},e.prototype.image=function(a,r,n){a='<img src="'+a+'" alt="'+n+'"';return r&&(a+=' title="'+r+'"'),a+=this.options.xhtml?"/>":">"},e.prototype.text=function(a){return a},c.parse=function(a,r,n){return new c(r).parse(a)},c.prototype.parse=function(a){this.inline=new t(a.links,this.options),this.tokens=a.reverse();for(var r="";this.next();)r+=this.tok();return r},c.prototype.next=function(){return this.token=this.tokens.pop()},c.prototype.peek=function(){return this.tokens[this.tokens.length-1]||0},c.prototype.parseText=function(){for(var a=this.token.text;"text"===this.peek().type;)a+="\n"+this.next().text;return this.inline.output(a)},c.prototype.tok=function(){switch(this.token.type){case"space":return"";case"hr":return this.renderer.hr();case"heading":return this.renderer.heading(this.inline.output(this.token.text),this.token.depth,this.token.text);case"code":return this.renderer.code(this.token.text,this.token.lang,this.token.escaped);case"table":for(var a,r,n="",t="",e="",b=0;b<this.token.header.length;b++)e+=this.renderer.tablecell(this.inline.output(this.token.header[b]),{header:!0,align:this.token.align[b]});for(n+=this.renderer.tablerow(e),b=0;b<this.token.cells.length;b++){for(a=this.token.cells[b],e="",r=0;r<a.length;r++)e+=this.renderer.tablecell(this.inline.output(a[r]),{header:!1,align:this.token.align[r]});t+=this.renderer.tablerow(e)}return this.renderer.table(n,t);case"blockquote_start":for(t="";"blockquote_end"!==this.next().type;)t+=this.tok();return this.renderer.blockquote(t);case"list_start":for(var t="",n=this.token.ordered;"list_end"!==this.next().type;)t+=this.tok();return this.renderer.list(t,n);case"list_item_start":for(t="";"list_item_end"!==this.next().type;)t+="text"===this.token.type?this.parseText():this.tok();return this.renderer.listitem(t);case"loose_item_start":for(t="";"list_item_end"!==this.next().type;)t+=this.tok();return this.renderer.listitem(t);case"html":n=this.token.pre||this.options.pedantic?this.token.text:this.inline.output(this.token.text);return this.renderer.html(n);case"paragraph":return this.renderer.paragraph(this.inline.output(this.token.text));case"text":return this.renderer.paragraph(this.parseText())}},r.exec=r,p.options=p.setOptions=function(a){return l(p.defaults,a),p},p.defaults={gfm:!0,tables:!0,breaks:!1,pedantic:!1,sanitize:!1,sanitizer:null,mangle:!0,smartLists:!1,silent:!1,highlight:null,langPrefix:"lang-",smartypants:!1,headerPrefix:"",renderer:new e,xhtml:!1},p.Parser=c,p.parser=c.parse,p.Renderer=e,p.Lexer=o,p.lexer=o.lex,p.InlineLexer=t,p.inlineLexer=t.output,p.parse=p,void 0!==An&&"object"==typeof Dn?An.exports=p:"function"==typeof define&&define.amd?define(function(){return p}):this.marked=p}.call(function(){return this||("undefined"!=typeof window?window:global)}()),An.exports);function _n(a){return d(zt,f(function(a,r,n){return p(k,a,n)}),v,a)}function Tn(a){return p(Qt,"\n    ",p(ae,"\n",a))}function Rn(a){return d(re,l(function(a,r){return r+1}),0,a)}function Nn(a){return 97<=(a=ue(a))&&a<=122}function jn(a){return(a=ue(a))<=90&&65<=a}function In(a){return Nn(a)||jn(a)}function On(a){return(a=ue(a))<=57&&48<=a}function Vn(a){return Nn(a)||jn(a)||On(a)}function Un(a){return a.a}function n(a){return a}function Bn(a){return d(rb,tb(k),Qe(v),a)}function Hn(a){return{$:2,a:a}}function zn(a){return{$:8,a:a}}function Pn(a){return d(re,Eb,wb,a)}function Gn(a){var r=a.cO;return{bO:p(Nb,a.bO,2),cO:r,O:0,C:0,P:0}}function Fn(a){return a.a+"="+a.b}function Mn(a){var r,n,t,e,b,u,i,o;return-1===a.$&&-1===a.d.$&&-1===a.e.$?-1!==a.e.d.$||a.e.d.a?(t=(o=a.e).b,e=o.c,b=o.d,o=o.e,s(S,1,a.b,a.c,s(S,0,(r=a.d).b,r.c,r.d,r.e),s(S,0,t,e,b,o))):(t=(n=a.e).b,e=n.c,u=(b=n.d).d,i=b.e,o=n.e,s(S,0,b.b,b.c,s(S,1,a.b,a.c,s(S,0,(r=a.d).b,r.c,r.d,r.e),u),s(S,1,t,e,i,o))):a}function Jn(a){var r,n,t,e,b,u,i,o,c;return-1===a.$&&-1===a.d.$&&-1===a.e.$?-1!==a.d.d.$||a.d.d.a?(u=(c=a.e).b,i=c.c,o=c.d,c=c.e,s(S,1,r=a.b,n=a.c,s(S,0,(e=a.d).b,e.c,e.d,e=e.e),s(S,0,u,i,o,c))):(r=a.b,n=a.c,e=(t=a.d).e,u=(b=a.e).b,i=b.c,o=b.d,c=b.e,s(S,0,t.b,t.c,s(S,1,(b=t.d).b,b.c,b.d,b.e),s(S,1,r,n,e,s(S,0,u,i,o,c)))):a}function Wn(a){var r,n,t,e,b,u;return-1===a.$&&-1===a.d.$?(r=a.a,n=a.b,t=a.c,u=(e=a.d).d,b=a.e,1===e.a?-1!==u.$||u.a?-1===(u=Mn(a)).$?(a=u.e,s(yb,u.a,u.b,u.c,Wn(u.d),a)):vb:s(S,r,n,t,Wn(e),b):s(S,r,n,t,Wn(e),b)):vb}function Yn(a){return{$:4,a:a}}function Xn(a){return d(re,l(function(a,r){return d(qb,a.a,a.b,r)}),$b,a)}function Zn(a){return lu($([p(Re,E,a),e(L)]))}function Kn(a){return o(Ue(a.a),a.b)?d(ku,!1,0,a):p(C,!1,p(Au,a,Vt))}function Qn(a){return-a}function at(a){return a.$?{$:1,a:a.a}:{$:0,a:a.a}}function rt(n){return p(Ku,"",function(r){var a;return o(Ue(r),n)?(a=Fe(r)).$?Nu('Invalid integer: "'+r+'"'):p(Zu,Pu,i(a.a)):p(Zu,function(a){return Gu(p(Fu,r,a))},Ru(Wu(On)))})}function nt(a){return!a}function tt(a){var e=a.a,b=a.b,u=!Pe(e);return function(a){var r=s(ai,e,a.b,a.bp,a.aR,a.a),n=r.a,t=r.b,r=r.c;return o(n,-1)?p(C,!1,p(Au,a,b)):d(ku,u,0,{aR:r,c:a.c,d:a.d,b:n,bp:t,a:a.a})}}function et(a){return ri(p(Qu,a,{$:8,a:a}))}function bt(a){return Nu("Invalid day: "+Kt(a))}function ut(a){return!(p(ni,4,a)||!p(ni,100,a)&&p(ni,400,a))}function it(a){return((a-=1)/4|0)-(a/100|0)+(a/400|0)}function ot(a){return d(bi,a.bp,a.aR,a.bg)}function ct(a){return a.b?e(p(ci,a.a,a.b)):sb("An array with one or more elements.")}function st(a){return{$:0,a:a}}function ft(a){return{$:1,a:a}}function lt(a){return function(a){return Hi(Ti({bG:!1,bI:a.bI,bV:a.bV,S:a.S,U:a.U,W:a.W,cX:a.cX,bC:a.bC}))}({bI:_i,bV:a.bV,S:v,U:"GET",W:L,cX:L,bC:a.bC})}function pt(a){return{$:9,a:a}}function dt(a){return{$:15,a:a}}function ht(a){return{a:Z(a.a?"w_":"d_",a.b),b:a}}function gt(a){return d(ao,1,"resize",p(b,"target",d(Ne,a,p(b,"innerWidth",su),p(b,"innerHeight",su))))}function mt(a){return o(a.C,a.O)&&0===a.P}function vt(a){return{$:3,a:a}}function $t(a){return a+1}function wt(a){return a.O}function yt(a){return d(rb,qo,v,a)}function kt(a){return a.$?L:E(a.a)}function xt(a){var r=p(b,"social_feed",t);return kt(p(ob,r,a.cC))}function qt(a){var r=a.c;return d(_o,d(No,0,r-1,a.a+1),L,r)}function Et(a){return a}function Lt(a){var r=a.c;return d(_o,d(No,0,r-1,a.a-1),L,r)}function At(a){return{$:2,a:a}}function Dt(a){switch(a.$){case 13:return"text";case 12:return"person";case 8:return"location";case 15:return"website";case 6:return"event";case 2:return"artifact";case 9:return"media";case 7:return"image";case 14:return"video";case 3:return"audio";case 5:return"document";case 4:return"collection";case 10:return"meta";case 0:return"agenda";case 1:return"article";case 11:return"news";default:return a.a}}function St(a){return p(uc,"section-{0}",$([Uo(a)]))}function Ct(a){return p(_,Wu(a),Cu(a))}function _t(a){return p(Qu,a,$c(a))}function Tt(a){return tt(_t(a))}function Rt(a){return p(Ac,a,"")}function Nt(a){return a<0||1114111<a?"�":65535<a?String.fromCharCode(55296+Math.floor((a-=65536)/1024),a%1024+56320):String.fromCharCode(a)}function jt(a){return a.b?E(a.b):L}function It(a){return d(Sc,k,v,a)}function Ot(r){return p(T,p(_,i(n),Wu(ye(r))),p(_,p(Zu,Qt(""),Ec(R($([Ru(Ct(function(a){return!o(a,r)&&"&"!==a})),Uc])))),Wu(ye(r))))}var Vt,y=f(function(a,r,n){return a(r(n))}),Ut=1,Bt=2,Ht=0,k=Q,zt=f(function(a,r,n){for(;;){if(-2===n.$)return r;var t=n.d,e=a,b=d(a,n.b,n.c,d(zt,a,r,n.e));a=e,r=b,n=t}}),Pt=function(a){return d(zt,f(function(a,r,n){return p(k,{a:a,b:r},n)}),v,a)},Gt=function(a){return _n(a)},Ft=ba,x=(f(function(n,a,r){var t=r.c,r=r.d,e=l(function(a,r){return d(Ft,a.$?n:e,r,a.a)});return d(Ft,e,d(Ft,n,a,r),t)}),function(a){return{$:1,a:a}}),Mt=l(function(a,r){return{$:3,a:a,b:r}}),Jt=l(function(a,r){return{$:0,a:a,b:r}}),Wt=l(function(a,r){return{$:1,a:a,b:r}}),q=function(a){return{$:0,a:a}},Yt=function(a){return{$:2,a:a}},E=function(a){return{$:0,a:a}},L={$:1},Xt=$a,Zt=Pa,Kt=xa,Qt=l(function(a,r){return p(ma,a,aa(r))}),ae=l(function(a,r){return $(p(ga,a,r))}),re=f(function(a,r,n){for(;;){if(!n.b)return r;var t=n.b,e=a,b=p(a,n.a,r);a=e,r=b,n=t}}),ne=ra,te=f(function(a,r,n){for(;;){if(1<=g(a,r))return n;var t=a,e=r-1,b=p(k,r,n);a=t,r=e,n=b}}),ee=l(function(a,r){return d(te,a,r,v)}),be=l(function(a,r){return d(ne,a,p(ee,0,Rn(r)-1),r)}),ue=function(a){var r=a.charCodeAt(0);return r<55296||56319<r?r:1024*(r-55296)+a.charCodeAt(1)-56320+65536},ie=function(a){return d(re,k,v,a)},oe=function(a){var r=a.charCodeAt(0);return isNaN(r)?L:E(r<55296||56319<r?{a:a[0],b:a.slice(1)}:{a:a[0]+a[1],b:a.slice(2)})},ce=l(function(a,r){return"\n\n("+Kt(a+1)+(") "+Tn(se(r)))}),se=function(a){return p(fe,a,v)},fe=l(function(a,r){for(;;)switch(a.$){case 0:var n=a.a,t=a.b,e=(e=b=void 0,1!==(e=oe(n)).$&&(b=(e=e.a).b,In(e.a))&&p(Xt,Vn,b)),b=t,e=p(k,e?"."+n:"['"+n+"']",r);a=b,r=e;continue;case 1:var t=a.b,n="["+Kt(a.a)+"]",b=t,e=p(k,n,r);a=b,r=e;continue;case 2:var u=a.a;if(u.b){if(u.b.b)return i=(r.b?"The Json.Decode.oneOf at json"+p(Qt,"",ie(r)):"Json.Decode.oneOf")+" failed in the following "+Kt(Rn(u))+" ways:",p(Qt,"\n\n",p(k,i,p(be,ce,u)));a=b=t=u.a,r=e=r;continue}return"Ran into a Json.Decode.oneOf with no possibilities"+(r.b?" at json"+p(Qt,"",ie(r)):"!");default:var i,u=a.a,o=a.b;return(i=r.b?"Problem with the value at json"+p(Qt,"",ie(r))+":\n\n    ":"Problem with the given value:\n\n")+(Tn(p(Zt,4,o))+"\n\n")+u}var b,e}),le=c(function(a,r,n,t){return{$:0,a:a,b:r,c:n,d:t}}),pe=[],de=ca,he=l(function(a,r){return la(r)/la(a)}),ge=de(p(he,2,32)),me=h(le,0,ge,pe,pe),ve=na,$e=l(function(a,r){return a(r)}),we=l(function(a,r){return r(a)}),ye=J,ke=sa,xe=function(a){return a.length},qe=l(function(a,r){return 0<g(a,r)?a:r}),Ee=ta,Le=l(function(a,r){for(;;){var n=p(Ee,32,a),t=n.b,n=p(k,{$:0,a:n.a},r);if(!t.b)return ie(n);a=t,r=n}}),Ae=l(function(a,r){for(;;){var n=de(r/32);if(1===n)return p(Ee,32,a).a;a=p(Le,a,v),r=n}}),De=l(function(a,r){var n,t;return r.f?(t=ke(p(he,32,(n=32*r.f)-1)),a=a?ie(r.i):r.i,a=p(Ae,a,r.f),h(le,xe(r.h)+n,p(qe,5,t*ge),a,r.h)):h(le,xe(r.h),ge,pe,r.h)}),Se=W,Ce=V(function(a,r,n,t,e){for(;;){if(r<0)return p(De,!1,{i:t,f:n/32|0,h:e});var b={$:1,a:d(ve,32,r,a)};a=a,r=r-32,n=n,t=p(k,b,t),e=e}}),_e=l(function(a,r){var n,t;return 0<a?(t=d(ve,n=a%32,a-n,r),s(Ce,r,a-n-32,a,v,t)):me}),Te=function(a){return!a.$},Re=_a,Ne=Ta,e=function(a){return{$:0,a:a}},je=function(a){switch(a.$){case 0:return 0;case 1:return 1;case 2:return 2;default:return 3}},Ie=n,Oe=U(function(a,r,n,t,e,b){return{b1:b,b5:r,cA:t,cB:n,cD:a,cE:e}}),Ve=wa,Ue=function(a){return a.length},Be=va,He=l(function(a,r){return a<1?r:d(Be,a,Ue(r),r)}),ze=ka,Pe=function(a){return""===a},Ge=l(function(a,r){return a<1?"":d(Be,0,a,r)}),Fe=function(a){for(var r=0,n=a.charCodeAt(0),t=43==n||45==n?1:0,e=t;e<a.length;++e){var b=a.charCodeAt(e);if(b<48||57<b)return L;r=10*r+b-48}return e==t?L:E(45==n?-r:r)},Me=V(function(a,r,n,t,e){var b,u;return Pe(e)||p(Ve,"@",e)?L:(b=p(ze,":",e)).b?b.b.b||1===(u=Fe(p(He,(b=b.a)+1,e))).$?L:(u=u,E(P(Oe,a,p(Ge,b,e),u,r,n,t))):E(P(Oe,a,e,L,r,n,t))}),Je=c(function(a,r,n,t){var e;return Pe(t)?L:(e=p(ze,"/",t)).b?s(Me,a,p(He,e=e.a,t),r,n,p(Ge,e,t)):s(Me,a,"/",r,n,t)}),We=f(function(a,r,n){var t;return Pe(n)?L:(t=p(ze,"?",n)).b?h(Je,a,E(p(He,(t=t.a)+1,n)),r,p(Ge,t,n)):h(Je,a,L,r,n)}),Ye=l(function(a,r){var n;return Pe(r)?L:(n=p(ze,"#",r)).b?d(We,a,E(p(He,(n=n.a)+1,r)),p(Ge,n,r)):d(We,a,L,r)}),Xe=ya,Ze=function(a){return p(Xe,"http://",a)?p(Ye,0,p(He,7,a)):p(Xe,"https://",a)?p(Ye,1,p(He,8,a)):L},Ke=function(a){for(;;)0},Qe=Fa,Q=Qe(0),ab=c(function(a,r,n,t){var e,b,u,i;return t.b?(e=t.a,(t=t.b).b?(b=t.a,(t=t.b).b?(u=t.a,(t=t.b).b?(i=t.b,p(a,e,p(a,b,p(a,u,p(a,t.a,500<n?d(re,a,r,ie(i)):h(ab,a,r,n+1,i)))))):p(a,e,p(a,b,p(a,u,r)))):p(a,e,p(a,b,r))):p(a,e,r)):r}),rb=f(function(a,r,n){return h(ab,a,r,0,n)}),A=l(function(n,a){return d(rb,l(function(a,r){return p(k,n(a),r)}),v,a)}),D=Ma,nb=l(function(r,a){return p(D,function(a){return Qe(r(a))},a)}),tb=f(function(n,a,t){return p(D,function(r){return p(D,function(a){return Qe(p(n,r,a))},t)},a)}),eb=br,bb=l(function(a,r){return Xa(p(D,eb(a),r))}),ba=f(function(a,r,n){return p(nb,function(a){return 0},Bn(p(A,bb(a),r)))}),$a=f(function(a,r,n){return Qe(0)}),Pa=l(function(a,r){return p(nb,a,r)}),ub=(er.Task={b:Q,c:ba,d:$a,e:Pa,f:void 0},ir("Task")),ib=l(function(a,r){return ub(p(nb,a,r))}),ra=Qr,ob=ja,ca=f(function(a,r,n){return{aP:n,a7:a,bC:r}}),cb=Ca,sb=function(a){return{$:1,a:a}},b=Da,fb=Ea,lb={$:2},pb={$:7},db={$:12},na=Ra,t=Aa,hb=h(na,ca,p(b,"lang",p(cb,function(a){switch(a){case"en":return e(lb);case"nl":return e(pb);case"zh":return e(db);default:return sb("That's not a real language bro")}},t)),p(b,"url",p(cb,function(a){a=Ze(a);return 1===a.$?sb("Not a valid url"):e(a.a)},t)),p(b,"browserWidth",fb)),gb={aP:1024,a7:lb,bC:{b1:L,b5:"unstudio.com",cA:"",cB:L,cD:1,cE:L}},mb=l(function(a,r){return r.$?a:r.a}),vb={$:-2},$b=vb,wb=$b,S=V(function(a,r,n,t,e){return{$:-1,a:a,b:r,c:n,d:t,e:e}}),yb=V(function(a,r,n,t,e){var b,u,i,o;return-1!==e.$||e.a?-1!==t.$||t.a||-1!==t.d.$||t.d.a?s(S,a,r,n,t,e):(b=t.d,o=t.e,s(S,0,t.b,t.c,s(S,1,b.b,b.c,b.d,b.e),s(S,1,r,n,o,e))):(b=e.b,u=e.c,i=e.d,e=e.e,-1!==t.$||t.a?s(S,a,b,u,s(S,0,r,n,t,i),e):s(S,0,r,n,s(S,1,t.b,t.c,t.d,o=t.e),s(S,1,b,u,i,e)))}),kb=Y,xb=f(function(a,r,n){if(-2===n.$)return s(S,0,a,r,vb,vb);var t=n.a,e=n.b,b=n.c,u=n.d,i=n.e;switch(p(kb,a,e)){case 0:return s(yb,t,e,b,d(xb,a,r,u),i);case 1:return s(S,t,e,r,u,i);default:return s(yb,t,e,b,u,d(xb,a,r,i))}}),qb=f(function(a,r,n){a=d(xb,a,r,n);return-1!==a.$||a.a?a:s(S,1,a.b,a.c,a.d,a.e)}),Eb=l(function(a,r){return d(qb,a,0,r)}),Lb=or,Ab=l(function(a,r){return{$:0,a:a,b:r}}),Db=Ja,Sb=l(function(a,r){return ub(p(Db,p(y,p(y,Qe,a),x),p(D,p(y,p(y,Qe,a),q),r)))}),Cb=function(a){return cn(a,function(a){var a=a.getBoundingClientRect(),r=bn.pageXOffset,n=bn.pageYOffset;return{br:fn(),c1:{am:r,an:n,bD:en.documentElement.clientWidth,a$:en.documentElement.clientHeight},bT:{am:r+a.left,an:n+a.top,bD:a.width,a$:a.height}}})},_b=l(function(a,r){return p(Sb,p(y,a,Ab(r)),Cb(r))}),Tb=l(function(a,r){return{a:{x:$b,ad:0,ae:0,c1:{br:{a$:0,bD:0},c1:{a$:0,ab:0,ac:0,bD:0,am:0,an:0}}},b:Lb(p(A,_b(a),r))}}),J=l(function(a,r){return{bO:r,cO:a}}),Rb=l(function(a,r){return{am:a,an:r}}),Nb=ia,jb=(sa=p(J,100,4.5),p(Rb,Gn(sa),Gn(sa))),Ib=l(function(a,r){return"/"+(p(Qt,"/",a)+function(a){return a.b?"?"+p(Qt,"&",p(A,Fn,a)):""}(r))}),Ob=l(function(a,r){return p(Ib,Z($(["data","resources"]),a),r)}),Vb=Na,Ub=l(function(a,r){return{$:3,a:a,b:r}}),Bb=function(a){return{$:0,a:a}},Hb=l(function(a,r){return{$:4,a:a,b:r}}),zb={$:2},Pb=function(a){return{$:1,a:a}},Gb=function(a){return{$:0,a:a}},Fb={$:1},Mb=function(a){return!a.$},Jb=ur,Wb=l(function(a,r){for(;;){if(-2===r.$)return L;var n=r.c,t=r.d,e=r.e;switch(p(kb,a,r.b)){case 0:a=a,r=t;continue;case 1:return E(n);default:a=a,r=e;continue}}}),Yb=B(function(a,r,n,t,e,b,u){if(-1!==b.$||b.a){for(;;){if(-1!==u.$||1!==u.a)break;if(-1!==u.d.$)return Jn(r);if(1===u.d.a)return Jn(r);break}return r}return s(S,n,b.b,b.c,b.d,s(S,0,t,e,b.e,u))}),Xb=l(function(a,r){var n,t,e,b,u,i,o;return-2===r.$?vb:(n=r.a,e=r.c,b=r.d,u=r.e,g(a,t=r.b)<0?-1===b.$&&1===b.a?-1!==(i=b.d).$||i.a?-1===(i=Mn(r)).$?(o=i.e,s(yb,i.a,i.b,i.c,p(Xb,a,i.d),o)):vb:s(S,n,t,e,p(Xb,a,b),u):s(S,n,t,e,p(Xb,a,b),u):p(Zb,a,G(Yb,a,r,n,t,e,b,u)))}),Zb=l(function(a,r){var n,t,e,b,u;return-1===r.$?(n=r.a,t=r.c,e=r.d,b=r.e,o(a,r=r.b)?-1===(u=function(a){for(;;){if(-1!==a.$||-1!==a.d.$)return a;a=a.d}}(b)).$?s(yb,n,u.b,u.c,e,Wn(b)):vb:s(yb,n,r,t,e,p(Xb,a,b))):vb}),Kb=l(function(a,r){a=p(Xb,a,r);return-1!==a.$||a.a?a:s(S,1,a.b,a.c,a.d,a.e)}),Qb=f(function(a,r,n){r=r(p(Wb,a,n));return r.$?p(Kb,a,n):d(qb,a,r.a,n)}),au=f(function(a,r,n){return r(a(n))}),ru=l(function(a,r){return d(pn,"",n,p(au,r,a))}),nu=l(function(a,r){return r.$?x(a(r.a)):q(r.a)}),tu={$:2},eu={$:1},bu=l(function(a,r){switch(r.$){case 0:return x({$:0,a:r.a});case 1:return x(eu);case 2:return x(tu);case 3:return x({$:3,a:r.a.bv});default:return p(nu,Yn,a(r.b))}}),uu=l(function(a,r){return p(ru,a,bu(function(a){return p(nu,se,p(Vb,r,a))}))}),ta=V(function(a,r,n,t,e){return{bI:a,cm:r,cC:e,cH:t,cZ:n}}),iu={$:1},ou={$:2},cu={$:0},W=p(Re,function(a){switch(a){case"page":return ou;case"text":return cu;case"header":return iu;default:return{$:3,a:a}}},t),su=qa,_a=p(Re,n,su),fu=p(Re,n,p(Re,Xn,function(a){return{$:8,b:a}}(t))),lu=function(a){return{$:11,g:a}},pu=Ne(we),u=f(function(a,r,n){return p(pu,p(b,a,r),n)}),du=La,Ta=d(u,"properties",du,d(u,"rsc_id",Zn(_a),d(u,"type",W,d(u,"name",t,d(u,"body",fu,e(ta)))))),wa=l(function(a,r){return{at:a,bo:r}}),hu={$:1},gu={$:4},mu={$:2},vu={$:3},$u={$:5},wu={$:6},yu={$:0},va=p(Re,function(a){switch(a){case"about":return yu;case"author":return hu;case"depiction":return mu;case"hasbanner":return gu;case"hasdocument":return vu;case"haspart":return $u;case"relation":return wu;default:return{$:7,a:a}}},t),C=l(function(a,r){return{$:1,a:a,b:r}}),ku=f(function(a,r,n){return{$:0,a:a,b:r,c:n}}),xu=l(function(e,a){var b=a;return function(a){var r,n,t,a=b(a);return 1===a.$?p(C,a.a,a.b):(r=a.a,n=a.c,1===(a=e(a.b)(n)).$?(t=a.a,p(C,r||t,a.b)):(t=a.a,d(ku,r||t,a.b,a.c)))}}),qu=l(function(a,r){return{$:1,a:a,b:r}}),Eu=c(function(a,r,n,t){return{aR:r,bN:t,bg:n,bp:a}}),Lu={$:0},Au=l(function(a,r){return p(qu,Lu,h(Eu,a.bp,a.aR,r,a.c))}),Du=(Vt={$:10},gn),Su=V(function(a,r,n,t,e){for(;;){var b=d(Du,a,r,e.a);if(o(b,-1))return d(ku,g(e.b,r)<0,0,{aR:t,c:e.c,d:e.d,b:r,bp:n,a:e.a});e=(t=o(b,-2)?(a=a,r=r+1,n=n+1,1):(a=a,r=b,n=n,t+1),e)}}),Cu=function(r){return function(a){return s(Su,r,a.b,a.bp,a.aR,a)}},_u=l(function(a,r){return a}),Tu=l(function(t,a){var e=a;return function(a){var r,n=e(a);return 1===n.$?p(C,n.a,n.b):(r=n.b,d(ku,n.a,p(t,d(Be,a.b,(n=n.c).b,a.a),r),n))}}),Ru=function(a){return p(Tu,_u,a)},Nu=function(a){return r={$:12,a:a},function(a){return p(C,!1,p(Au,a,r))};var r},ju=fa,i=function(r){return function(a){return d(ku,!1,r,a)}},Iu=function(a){return 0!==a.length&&!/[\sxbo]/.test(a)&&(a=+a)==a?E(a):L},Ou=p(xu,function(a){var r;return 9<Ue(a)?Nu("Expected at most 9 digits, but got "+Kt(Ue(a))):(r=Iu("0."+a)).$?Nu('Invalid float: "'+a+'"'):i(ju(1e3*r.a))},Ru(Cu(On))),Vu=n,Uu=U(function(a,r,n,t,e,b){return Vu(a+60*r*60*1e3+60*(n-b)*1e3+1e3*t+e)}),Bu=f(function(b,a,r){var u=a,i=r;return function(a){var r,n,t,e,a=u(a);return 1===a.$?p(C,a.a,a.b):(r=a.a,n=a.b,1===(a=i(a.c)).$?(t=a.a,p(C,r||t,a.b)):(t=a.a,e=a.c,d(ku,r||t,p(b,n,a.b),e)))}}),_=l(function(a,r){return d(Bu,_u,a,r)}),T=l(function(a,r){return d(Bu,$e,a,r)}),Hu=l(function(a,r){return{$:2,a:a,b:r}}),zu=f(function(a,r,n){for(;;){if(!n.b)return p(C,!1,r);var t,e=n.a,b=n.b,e=e(a);if(!e.$)return t=e;if((t=e).a)return t;a=a,r=p(Hu,r,t.b),n=b}}),R=function(r){return function(a){return d(zu,a,Lu,r)}},Pu=function(a){return{$:1,a:a}},Gu=function(a){return{$:0,a:a}},Fu=da,Mu={$:11},Ju=l(function(n,t){return function(a){var r=d(Du,n,a.b,a.a);return o(r,-1)?p(C,!1,p(Au,a,t)):o(r,-2)?d(ku,!0,0,{aR:1,c:a.c,d:a.d,b:a.b+1,bp:a.bp+1,a:a.a}):d(ku,!0,0,{aR:a.aR+1,c:a.c,d:a.d,b:r,bp:a.bp,a:a.a})}}),Wu=function(a){return p(Ju,a,Mu)},Yu=c(function(a,r,n,t){for(;;){var e=n(r)(t);if(e.$)return b=e.a,p(C,a||b,e.b);var b=e.a,u=e.b,e=e.c;if(u.$)return d(ku,a||b,u.a,e);a=a||b,r=u.a,n=n,t=e}}),Xu=l(function(r,n){return function(a){return h(Yu,!1,r,n,a)}}),Zu=l(function(n,a){var t=a;return function(a){var r,a=t(a);return a.$?p(C,a.a,a.b):(r=a.c,d(ku,a.a,n(a.b),r))}}),Ku=l(function(a,r){return p(Xu,a,function(a){return p(Zu,at,r(a))})}),Qu=l(function(a,r){return{$:0,a:a,b:r}}),ai=hn,ri=tt,ni=oa,ka=p(xu,function(a){var t=a.a,e=a.b,b=a.c;if(b<0)return bt(b);function r(a){var r=31536e6*(t-1970),n=864e5*((e<3||!ut(t)?b-1:b)+(it(t)-it(1970)));return i(a+r+n)}switch(e){case 1:return 31<b?bt(b):r(0);case 2:return 29<b||29===b&&!ut(t)?bt(b):r(26784e5);case 3:return 31<b?bt(b):r(50976e5);case 4:return 30<b?bt(b):r(7776e6);case 5:return 31<b?bt(b):r(10368e6);case 6:return 30<b?bt(b):r(130464e5);case 7:return 31<b?bt(b):r(156384e5);case 8:return 31<b?bt(b):r(183168e5);case 9:return 30<b?bt(b):r(209952e5);case 10:return 31<b?bt(b):r(235872e5);case 11:return 30<b?bt(b):r(262656e5);case 12:return 31<b?bt(b):r(288576e5);default:return Nu('Invalid month: "'+Kt(e)+'"')}},p(T,p(T,p(T,i(f(function(a,r,n){return{a:a,b:r,c:n}})),rt(4)),R($([p(T,p(_,i(n),et("-")),rt(2)),rt(2)]))),R($([p(T,p(_,i(n),et("-")),rt(2)),rt(2)])))),ti=(ya=f(function(a,r,n){return a*(60*r)+n}),p(T,i(n),R($([p(Zu,function(a){return 0},et("Z")),p(T,p(T,p(T,i(ya),R($([p(Zu,function(a){return 1},et("+")),p(Zu,function(a){return-1},et("-"))]))),rt(2)),R($([p(T,p(_,i(n),et(":")),rt(2)),rt(2),i(0)]))),p(_,i(0),Kn)])))),ei=p(xu,function(a){return R($([p(T,p(T,p(T,p(T,p(T,p(_,i(Uu(a)),et("T")),rt(2)),R($([p(T,p(_,i(n),et(":")),rt(2)),rt(2)]))),R($([p(T,p(_,i(n),et(":")),rt(2)),rt(2)]))),R($([p(T,p(_,i(n),et(".")),Ou),i(0)]))),p(_,ti,Kn)),p(_,i(P(Uu,a,0,0,0,0,0)),Kn)]))},ka),bi=f(function(a,r,n){return{aR:r,bg:n,bp:a}}),ui=l(function(a,r){for(;;)switch(a.$){case 0:return r;case 1:var n=a.a,t=a.b;a=n,r=p(k,t,r);continue;default:n=a.a,t=a.b;a=n,r=p(ui,t,r);continue}}),ii=l(function(a,r){a=a({aR:1,c:v,d:1,b:0,bp:1,a:r});return a.$?x(p(ui,a.b,v)):q(a.b)}),oi=l(function(a,r){a=p(ii,a,r);return a.$?x(p(A,ot,a.a)):q(a.a)}),br=p(cb,function(a){a=function(a){return p(oi,ei,a)}(a);return 1===a.$?sb("TODO deadEndsToString"):e(a.a)},t),Q={$:2},ci=l(function(a,r){return{$:0,a:a,b:r}}),si=function(a){return{$:3,b:a}},fi={$:0},li={$:1},pi={$:2},di={$:3},hi={$:4},gi={$:5},mi={$:6},vi={$:7},$i={$:8},wi={$:9},yi={$:10},ki={$:11},xi={$:12},qi={$:13},Ei={$:14},Li={$:15},ba=l(function(a,r){var n=r.b;return p(ci,a(r.a),p(A,a,n))}),$a=p(Re,p(y,function(a){var r=ie(p(k,a.a,a.b));return r.b?p(ci,r.a,r.b):a},ba(function(a){switch(a){case"text":return qi;case"person":return xi;case"location":return $i;case"website":return Li;case"event":return mi;case"artifact":return pi;case"media":return wi;case"image":return vi;case"video":return Ei;case"audio":return di;case"document":return gi;case"collection":return hi;case"meta":return yi;case"agenda":return fi;case"article":return li;case"news":return ki;default:return{$:16,a:a}}})),function(a){return p(cb,ct,si(a))}(t)),Pa=f(function(a,r,n){return{az:a,a$:n,bD:r}}),Ai=l(function(a,r){return{a:a,b:r}}),Da=(Qr=p(Re,ft,h(na,Pa,p(b,"url",t),p(b,"width",su),p(b,"height",su))),Ca=p(Re,p(y,st,Xn),si(d(Ne,Ai,p(b,"mediaclass",t),p(b,"url",t)))),lu($([Ca,Qr]))),Di=function(a){return{$:5,c:a}},Si=f(function(r,n,t){return p(cb,function(a){var a=p(ob,r,a);return a.$?e(t):(a=a.a,(a=p(ob,lu($([n,Di(t)])),a)).$?sb(se(a.a)):e(a.a))},du)}),Ea=c(function(a,r,n,t){return p(pu,d(Si,p(b,a,du),r,n),t)}),Ra=d(u,"blocks",si(Ta),h(Ea,"media",Da,Q,d(u,"publication_date",Zn(br),d(u,"properties",du,d(u,"categories",$a,d(u,"path",t,d(u,"summary",fu,d(u,"subtitle",fu,d(u,"body",fu,d(u,"title",fu,d(u,"id",_a,e(function(s){return function(c){return function(o){return function(i){return function(u){return function(b){return function(e){return function(t){return function(n){return function(r){return function(a){return{aN:a,bI:o,ap:e,b6:s,ci:r,cA:b,cC:t,bj:n,bz:i,cR:u,w:c}}}}}}}}}}}})))))))))))),Aa=d(u,"resource",Ra,d(u,"predicate_name",va,e(wa))),ca=si(Aa),Ci=h(Ea,"edges",ca,v,d(u,"blocks",si(Ta),h(Ea,"media",Da,Q,d(u,"publication_date",Zn(br),d(u,"properties",du,d(u,"categories",$a,d(u,"path",t,d(u,"summary",fu,d(u,"subtitle",fu,d(u,"body",fu,d(u,"title",fu,d(u,"id",_a,e(function(f){return function(s){return function(c){return function(o){return function(i){return function(u){return function(b){return function(e){return function(t){return function(n){return function(r){return function(a){return{aN:r,bI:c,ap:b,aq:a,b6:f,ci:n,cA:u,cC:e,bj:t,bz:o,cR:i,w:s}}}}}}}}}}}}}))))))))))))),_i={$:0},Ti=function(a){return{$:1,a:a}},Ri=l(function(a,r){return{bl:a,by:r}}),Y=Qe(p(Ri,$b,v)),Ni=function(n){return{$:2,b:function(a){var r=n.f;2===r.$&&r.c&&r.c(),n.f=null,a({$:0,a:X})},c:null}},ji=Xa,Ii=f(function(n,a,t){for(;;){if(!a.b)return Qe(t);var e,r=a.a,b=a.b;if(r.$)return e=r.a,p(D,function(a){var r=e.cX;return d(Ii,n,b,1===r.$?t:d(qb,r.a,a,t))},ji(d(ln,n,eb(n),e)));var u=r.a,r=p(Wb,u,t);if(1!==r.$)return p(D,function(a){return d(Ii,n,b,p(Kb,u,t))},Ni(r.a));n=n,a=b,t=t}}),Ja=c(function(a,r,n,t){return p(D,function(a){return Qe(p(Ri,a,n))},d(Ii,a,r,t.bl))}),Oi=f(function(a,r,n){a=a(r);return a.$?n:p(k,a.a,n)}),Vi=l(function(a,r){return d(rb,Oi(a),v,r)}),Ui=c(function(a,r,n,t){var e=t.b;return o(r,t.a)?E(p(eb,a,e(n))):L}),ia=f(function(a,r,n){return p(D,function(a){return Qe(n)},Bn(p(Vi,d(Ui,a,r.a,r.b),n.by)))}),J=l(function(a,r){var n;return r.$?Ti({bG:(n=r.a).bG,bI:n.bI,bV:p(dn,a,n.bV),S:n.S,U:n.U,W:n.W,cX:n.cX,bC:n.bC}):{$:0,a:r.a}}),Bi=l(function(a,r){return{$:0,a:a,b:r}}),sa=l(function(a,r){return p(Bi,r.a,p(au,r.b,a))}),Hi=(er.Http={b:Y,c:Ja,d:ia,e:J,f:sa},ir("Http")),zi=(ir("Http"),function(a){return encodeURIComponent(a)}),Pi=l(function(a,r){return lt({bV:p(uu,a,Ci),bC:p(Ob,$(["path",zi(r)]),v)})}),Gi=or,Fi=cr,Mi=f(function(a,r,n){return{$:0,a:a,b:r,c:n}}),Ji=l(function(a,r){return{bc:r,by:a}}),Na=Qe(p(Ji,v,$b)),Wi=f(function(a,r,n){for(;;){if(-2===n.$)return r;var t=n.e,e=a,b=d(a,n.b,n.c,d(Wi,a,r,n.d));a=e,r=b,n=t}}),Yi=U(function(o,c,s,a,r,n){var t=f(function(a,r,n){for(;;){var t=n.a,e=n.b;if(!t.b)return{a:t,b:d(s,a,r,e)};var b=t.a,u=b.a,b=b.b,i=t.b;if(0<=g(u,a))return 0<g(u,a)?{a:t,b:d(s,a,r,e)}:{a:i,b:h(c,u,b,r,e)};a=a,r=r,n={a:i,b:d(o,u,b,e)}}}),t=d(Wi,t,{a:Pt(a),b:n},r),a=t.a,n=t.b;return d(re,l(function(a,r){return d(o,a.a,a.b,r)}),n,a)}),Xi=l(function(a,r){return{aW:r,a4:a}}),Zi=f(function(r,n,a){return p(nb,function(a){return{a:n,b:a}},d(un,a.a?bn:en,a.b,function(a){return p(Jb,r,p(Xi,n,a))}))}),Ki=l(function(a,r){return d(Wi,qb,r,a)}),ur=f(function(e,a,r){var n=f(function(a,r,n){var t=n.c;return{a:n.a,b:n.b,c:p(k,d(Zi,e,a,r),t)}}),t=f(function(a,r,n){var t=n.b,e=n.c;return{a:p(k,r,n.a),b:t,c:e}}),b=c(function(a,r,n,t){var e=t.c;return{a:t.a,b:d(qb,a,r,t.b),c:e}}),u=p(A,ht,a),a=P(Yi,t,b,n,r.bc,Xn(u),{a:v,b:$b,c:v}),i=a.b,o=a.c;return p(D,function(a){return Qe(p(Ji,u,p(Ki,i,Xn(a))))},p(D,function(a){return Bn(o)},Bn(p(A,Ni,a.a))))}),qa=f(function(a,r,n){var t=r.a4,e=r.aW,r=p(Vi,function(a){var r=a.b,r=r.c;return o(a.a,t)?p(on,r,e):L},n.by);return p(D,function(a){return Qe(n)},Bn(p(A,eb(a),r)))}),La=l(function(a,r){return d(Mi,r.a,r.b,p(Re,a,r.c))}),Qi=(er["Browser.Events"]={b:Na,c:ur,d:qa,e:0,f:La},ir("Browser.Events")),ao=f(function(a,r,n){return Qi(d(Mi,a,r,n))}),ro=Sa,no=(W="onScroll",ta=p(cb,function(r){return p(cb,function(a){return e({a:r,b:a})},p(ro,1,fb))},p(ro,0,fb)),dr(W),er[W]={f:gr,u:ta,a:mr},ir(W)),to=l(function(a,r){return{$:1,a:a,b:r}}),eo=l(function(n,a){return gt(l(function(a,r){return n(p(to,a,r))}))}),bo=function(a){return{$:1,a:a}},uo=function(a){return!(mt(a.am)&&mt(a.an))},io=Gi(v),oo=f(function(a,r,n){return{aD:n,bm:r,by:a}}),co=Qe(d(oo,v,L,0)),so={$:2,b:function(a){a({$:0,a:Date.now()})},c:null},fo={$:2,b:function(a){var r=rn(function(){a({$:0,a:Date.now()})});return function(){an(r)}},c:null},gn=f(function(a,n,r){var t=r.bm,r=r.aD,e={a:t,b:n};return 1===e.a.$?e.b.b?p(D,function(r){return p(D,function(a){return Qe(d(oo,n,E(r),a))},so)},ji(p(D,Jb(a),fo))):co:e.b.b?Qe(d(oo,n,t,r)):p(D,function(a){return co},Ni(e.a.a))}),fa=f(function(r,n,a){function t(a){return p(eb,r,a.$?(0,a.a)(n-b):(0,a.a)(Vu(n)))}var e=a.by,b=a.aD;return p(D,function(r){return p(D,function(a){return Qe(d(oo,e,E(r),n))},Bn(p(A,t,e)))},ji(p(D,Jb(r),fo)))}),da=l(function(a,r){return r.$?{$:1,a:p(y,a,r.a)}:{$:0,a:p(y,a,r.a)}}),lo=(er["Browser.AnimationManager"]={b:co,c:gn,d:fa,e:0,f:da},ir("Browser.AnimationManager")),po=function(a){return lo({$:1,a:a})},ho={$:12},go=p(ao,0,"keyup"),mo=function(r){return p(cb,function(a){return"Escape"===a?e(r):sb("Unknown key")},p(b,"key",t))},vo=l(function(a,r){return{$:4,a:a,b:r}}),$o=l(function(a,r){return{$:1,a:a,b:r}}),wo={$:1},yo=nr,ko=f(function(r,a,n){function t(a){return E(1===a.$?wo:a.a)}var e=n;return{a:m(e,{x:d(re,l(function(a,r){return d(Qb,a,t,r)}),e.x,a),ad:$t(e.ad)}),b:p(ib,function(a){return r({$:3,a:$t(e.ad)})},yo(500))}}),xo=l(function(a,r){return m(r,{C:a,P:0})}),qo=l(function(a,r){return r.b?d(rb,k,r,a):a}),Eo=l(function(a,r){return yt(p(A,a,r))}),Lo=l(function(n,a){return d(rb,l(function(a,r){return n(a)?p(k,a,r):r}),v,a)}),Ao=l(function(a,r){return r.$?L:E(a(r.a))}),Do=l(function(a,r){return p(A,function(a){return a.bo},p(Lo,p(y,ye(a),function(a){return a.at}),r.aq))}),So=l(function(a,r){return r.$?a:r.a}),Co=l(function(a,r){return p(A,function(a){return a.b6},p(So,v,p(Ao,Do(a),r)))}),_o=f(function(a,r,n){return{$:0,a:a,b:r,c:n}}),To=cr,Ro=l(function(a,r){return r.$?x(r.a):q(a(r.a))}),No=f(function(a,r,n){return g(n,a)<0?a:0<g(n,r)?r:n}),N=Lb(v),jo=Et,Io=l(function(r,a){return p(Vi,function(a){return p(Wb,jo(a),r)},a)}),hn=V(function(a,r,n,t,e){return{b6:a,b7:n,cU:e,bC:r,c$:t}}),oa=d(u,"text",t,d(u,"user_full_name",t,d(u,"image",t,d(u,"url",t,d(u,"id",su,e(hn)))))),Oo=p(b,"posts",si(oa)),Vo=l(function(a,r){return lt({bV:p(uu,a,Oo),bC:"/instagram/"+zi(r)})}),Uo=p(y,Kt,Et),Bo=l(function(a,r){return lt({bV:p(uu,a,Ci),bC:p(Ob,$([Uo(r)]),v)})}),Ho=sn(function(){return{br:fn(),c1:{am:bn.pageXOffset,an:bn.pageYOffset,bD:en.documentElement.clientWidth,a$:en.documentElement.clientHeight}}}),zo=l(function(a,r){return p(Sb,At,d(tb,a,Ho,Cb(r)))}),Po=f(function(a,r,n){return{bZ:r,cI:a,cW:n}}),Go=l(function(a,r){return{$:0,a:a,b:r}}),Fo=l(function(a,r){return p(Go,zi(a),Kt(r))}),Mo=l(function(a,r){return p(Go,zi(a),zi(r))}),Jo=A(function(a){switch(a.$){case 0:return p(Mo,"content_group",a.a);case 4:return p(Mo,"cat",Dt(a.a));case 5:return p(Fo,"hasobject",jo(a.a));case 6:return p(Mo,"hasobject","'"+a.a+"'");case 7:return p(Fo,"hassubject",jo(a.a));case 8:return p(Mo,"hassubject","'"+a.a+"'");case 13:return p(Mo,"cat_promote",Dt(a.a));case 1:return p(Mo,"cat_exclude",Dt(a.a));case 2:return p(Mo,"facet",a.a);case 3:var r=a.a,n=a.c;return p(Mo,"filter",Z(r,Z(function(a){switch(a){case 0:return"=";case 3:return">";case 4:return">=";case 2:return"<";case 1:return"<=";default:return"~"}}(a.b),n)));case 11:return p(Fo,"limit",a.a);case 12:return p(Fo,"offset",a.a);case 15:return p(Mo,"text",a.a);case 16:return p(Mo,"type",a.a);case 14:return a.a?a.b?p(Mo,"sort","-rsc.pivot_date_start"):p(Mo,"sort","rsc.pivot_date_start"):a.b?p(Mo,"sort","-rsc.publication_start"):p(Mo,"sort","rsc.publication_start");case 10:return p(Mo,"upcoming","true");case 9:return p(Mo,"unfinished","true");default:return p(Mo,r=a.a,n=a.b)}}),Wo=l(function(a,r){return lt({bV:p(uu,a,(a=si(Ci),d(u,"total",su,d(u,"facets",du,d(u,"result",a,e(Po)))))),bC:p(Ib,$(["data","search"]),Jo(r))})}),Yo=l(function(a,r){return r.$?L:a(r.a)}),Xo=l(function(a,r){return a<1?r:d(Be,0,-a,r)}),Zo=4294967295>>>32-ge,Ko=ea,Qo=f(function(a,r,n){for(;;){var t=p(Ko,Zo&r>>>a,n);if(t.$)return p(Ko,Zo&r,t.a);a=a-ge,r=r,n=t.a}}),ac=l(function(a,r){var n=r.a,t=r.b,e=r.c,r=r.d;return a<0||-1<g(a,n)?L:-1<g(a,n>>>5<<5)?E(p(Ko,Zo&a,r)):E(d(Qo,t,a,e))}),rc=l(function(r,a){a=a.ch,a=p(y,He(1),Xo(1))(a);return p(So,"",p(Yo,function(a){return p(ac,a,r)},Fe(a)))}),nc=f(function(a,r,n){for(;;){var t=p(Ee,32,a),e=t.a,t=t.b;if(g(xe(e),32)<0)return p(De,!0,{i:r,f:n,h:e});a=t,r=p(k,{$:1,a:e},r),n=n+1}}),tc=c(function(a,r,n,t){return{b9:r,ch:a,cv:n,cP:t}}),ec=p(So,/.^/,p(kn,{bK:!1,cl:!1},"\\{\\d+\\}")),bc=xn(1/0),uc=l(function(a,r){r=(r=r).b?d(nc,r,v,0):me;return d(bc,ec,rc(r),a)}),ic=l(function(a,r){return{$:1,a:a,b:r}}),oc=l(function(a,r){return{$:3,a:a,b:r}}),cc=l(function(a,r){return{$:0,a:a,b:r}}),sc=l(function(a,r){return{$:5,a:a,b:r}}),fc=p(y,function(a){return a.a},function(a){return a.ap}),lc=f(function(a,r,n){return{$:1,a:a,b:r,c:n}}),pc=function(a){var r=a;return function(a){a=r(a);return 1===a.$?p(C,!1,a.b):d(ku,!1,a.b,a.c)}},dc=function(a){return" "===a||"\t"===a||"\n"===a||"\r"===a||"\f"===a||" "===a},hc=function(a){return a.toLowerCase()},gc=function(r){var a=p(xu,function(a){return o(hc(a),r)?i(0):Nu("closing tag does not match opening tag: "+r)},Ru(Ct(function(a){return!dc(a)&&">"!==a})));return p(_,p(_,p(_,p(_,Wu(ye("<")),Wu(ye("/"))),a),Cu(dc)),Wu(ye(">")))},mc=yn,vc=c(function(a,r,n,t){return p(qu,Lu,h(Eu,a,r,n,t))}),$c=function(a){return{$:0,a:a}},ya=p(T,p(_,p(_,i(n),Tt("<!")),Tt("--")),p(_,Ru(function(a){var e=a.a,b=a.b;return function(a){var r=s(mc,e,a.b,a.bp,a.aR,a.a),n=r.a,t=r.b,r=r.c;return o(n,-1)?p(C,!1,h(vc,t,r,b,a.c)):d(ku,g(a.b,n)<0,0,{aR:r,c:a.c,d:a.d,b:n,bp:t,a:a.a})}}(_t("--\x3e"))),Tt("--\x3e"))),wc=p(Zu,function(a){return{$:2,a:a}},ya),yc=l(function(a,r){for(;;){if(!r.b)return!1;var n=r.b;if(a(r.a))return!0;a=a,r=n}}),kc=l(function(r,a){return p(yc,function(a){return o(a,r)},a)}),xc=$(["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"]),qc=function(a){return p(kc,a,xc)},Ec=function(a){return p(Ku,v,function(r){return R($([p(Zu,function(a){return Gu(p(k,a,r))},a),i(Pu(ie(r)))]))})},ka=p(Zu,hc,Ru(Ct(function(a){return!dc(a)&&'"'!==a&&"'"!==a&&">"!==a&&"/"!==a&&"="!==a}))),ba=Wu(ye(";")),Lc=Xn($([{a:"Aacute",b:"Á"},{a:"aacute",b:"á"},{a:"Abreve",b:"Ă"},{a:"abreve",b:"ă"},{a:"ac",b:"∾"},{a:"acd",b:"∿"},{a:"acE",b:"∾̳"},{a:"Acirc",b:"Â"},{a:"acirc",b:"â"},{a:"acute",b:"´"},{a:"Acy",b:"А"},{a:"acy",b:"а"},{a:"AElig",b:"Æ"},{a:"aelig",b:"æ"},{a:"af",b:"⁡"},{a:"Afr",b:"𝔄"},{a:"afr",b:"𝔞"},{a:"Agrave",b:"À"},{a:"agrave",b:"à"},{a:"alefsym",b:"ℵ"},{a:"aleph",b:"ℵ"},{a:"Alpha",b:"Α"},{a:"alpha",b:"α"},{a:"Amacr",b:"Ā"},{a:"amacr",b:"ā"},{a:"amalg",b:"⨿"},{a:"amp",b:"&"},{a:"AMP",b:"&"},{a:"andand",b:"⩕"},{a:"And",b:"⩓"},{a:"and",b:"∧"},{a:"andd",b:"⩜"},{a:"andslope",b:"⩘"},{a:"andv",b:"⩚"},{a:"ang",b:"∠"},{a:"ange",b:"⦤"},{a:"angle",b:"∠"},{a:"angmsdaa",b:"⦨"},{a:"angmsdab",b:"⦩"},{a:"angmsdac",b:"⦪"},{a:"angmsdad",b:"⦫"},{a:"angmsdae",b:"⦬"},{a:"angmsdaf",b:"⦭"},{a:"angmsdag",b:"⦮"},{a:"angmsdah",b:"⦯"},{a:"angmsd",b:"∡"},{a:"angrt",b:"∟"},{a:"angrtvb",b:"⊾"},{a:"angrtvbd",b:"⦝"},{a:"angsph",b:"∢"},{a:"angst",b:"Å"},{a:"angzarr",b:"⍼"},{a:"Aogon",b:"Ą"},{a:"aogon",b:"ą"},{a:"Aopf",b:"𝔸"},{a:"aopf",b:"𝕒"},{a:"apacir",b:"⩯"},{a:"ap",b:"≈"},{a:"apE",b:"⩰"},{a:"ape",b:"≊"},{a:"apid",b:"≋"},{a:"apos",b:"'"},{a:"ApplyFunction",b:"⁡"},{a:"approx",b:"≈"},{a:"approxeq",b:"≊"},{a:"Aring",b:"Å"},{a:"aring",b:"å"},{a:"Ascr",b:"𝒜"},{a:"ascr",b:"𝒶"},{a:"Assign",b:"≔"},{a:"ast",b:"*"},{a:"asymp",b:"≈"},{a:"asympeq",b:"≍"},{a:"Atilde",b:"Ã"},{a:"atilde",b:"ã"},{a:"Auml",b:"Ä"},{a:"auml",b:"ä"},{a:"awconint",b:"∳"},{a:"awint",b:"⨑"},{a:"backcong",b:"≌"},{a:"backepsilon",b:"϶"},{a:"backprime",b:"‵"},{a:"backsim",b:"∽"},{a:"backsimeq",b:"⋍"},{a:"Backslash",b:"∖"},{a:"Barv",b:"⫧"},{a:"barvee",b:"⊽"},{a:"barwed",b:"⌅"},{a:"Barwed",b:"⌆"},{a:"barwedge",b:"⌅"},{a:"bbrk",b:"⎵"},{a:"bbrktbrk",b:"⎶"},{a:"bcong",b:"≌"},{a:"Bcy",b:"Б"},{a:"bcy",b:"б"},{a:"bdquo",b:"„"},{a:"becaus",b:"∵"},{a:"because",b:"∵"},{a:"Because",b:"∵"},{a:"bemptyv",b:"⦰"},{a:"bepsi",b:"϶"},{a:"bernou",b:"ℬ"},{a:"Bernoullis",b:"ℬ"},{a:"Beta",b:"Β"},{a:"beta",b:"β"},{a:"beth",b:"ℶ"},{a:"between",b:"≬"},{a:"Bfr",b:"𝔅"},{a:"bfr",b:"𝔟"},{a:"bigcap",b:"⋂"},{a:"bigcirc",b:"◯"},{a:"bigcup",b:"⋃"},{a:"bigodot",b:"⨀"},{a:"bigoplus",b:"⨁"},{a:"bigotimes",b:"⨂"},{a:"bigsqcup",b:"⨆"},{a:"bigstar",b:"★"},{a:"bigtriangledown",b:"▽"},{a:"bigtriangleup",b:"△"},{a:"biguplus",b:"⨄"},{a:"bigvee",b:"⋁"},{a:"bigwedge",b:"⋀"},{a:"bkarow",b:"⤍"},{a:"blacklozenge",b:"⧫"},{a:"blacksquare",b:"▪"},{a:"blacktriangle",b:"▴"},{a:"blacktriangledown",b:"▾"},{a:"blacktriangleleft",b:"◂"},{a:"blacktriangleright",b:"▸"},{a:"blank",b:"␣"},{a:"blk12",b:"▒"},{a:"blk14",b:"░"},{a:"blk34",b:"▓"},{a:"block",b:"█"},{a:"bne",b:"=⃥"},{a:"bnequiv",b:"≡⃥"},{a:"bNot",b:"⫭"},{a:"bnot",b:"⌐"},{a:"Bopf",b:"𝔹"},{a:"bopf",b:"𝕓"},{a:"bot",b:"⊥"},{a:"bottom",b:"⊥"},{a:"bowtie",b:"⋈"},{a:"boxbox",b:"⧉"},{a:"boxdl",b:"┐"},{a:"boxdL",b:"╕"},{a:"boxDl",b:"╖"},{a:"boxDL",b:"╗"},{a:"boxdr",b:"┌"},{a:"boxdR",b:"╒"},{a:"boxDr",b:"╓"},{a:"boxDR",b:"╔"},{a:"boxh",b:"─"},{a:"boxH",b:"═"},{a:"boxhd",b:"┬"},{a:"boxHd",b:"╤"},{a:"boxhD",b:"╥"},{a:"boxHD",b:"╦"},{a:"boxhu",b:"┴"},{a:"boxHu",b:"╧"},{a:"boxhU",b:"╨"},{a:"boxHU",b:"╩"},{a:"boxminus",b:"⊟"},{a:"boxplus",b:"⊞"},{a:"boxtimes",b:"⊠"},{a:"boxul",b:"┘"},{a:"boxuL",b:"╛"},{a:"boxUl",b:"╜"},{a:"boxUL",b:"╝"},{a:"boxur",b:"└"},{a:"boxuR",b:"╘"},{a:"boxUr",b:"╙"},{a:"boxUR",b:"╚"},{a:"boxv",b:"│"},{a:"boxV",b:"║"},{a:"boxvh",b:"┼"},{a:"boxvH",b:"╪"},{a:"boxVh",b:"╫"},{a:"boxVH",b:"╬"},{a:"boxvl",b:"┤"},{a:"boxvL",b:"╡"},{a:"boxVl",b:"╢"},{a:"boxVL",b:"╣"},{a:"boxvr",b:"├"},{a:"boxvR",b:"╞"},{a:"boxVr",b:"╟"},{a:"boxVR",b:"╠"},{a:"bprime",b:"‵"},{a:"breve",b:"˘"},{a:"Breve",b:"˘"},{a:"brvbar",b:"¦"},{a:"bscr",b:"𝒷"},{a:"Bscr",b:"ℬ"},{a:"bsemi",b:"⁏"},{a:"bsim",b:"∽"},{a:"bsime",b:"⋍"},{a:"bsolb",b:"⧅"},{a:"bsol",b:"\\"},{a:"bsolhsub",b:"⟈"},{a:"bull",b:"•"},{a:"bullet",b:"•"},{a:"bump",b:"≎"},{a:"bumpE",b:"⪮"},{a:"bumpe",b:"≏"},{a:"Bumpeq",b:"≎"},{a:"bumpeq",b:"≏"},{a:"Cacute",b:"Ć"},{a:"cacute",b:"ć"},{a:"capand",b:"⩄"},{a:"capbrcup",b:"⩉"},{a:"capcap",b:"⩋"},{a:"cap",b:"∩"},{a:"Cap",b:"⋒"},{a:"capcup",b:"⩇"},{a:"capdot",b:"⩀"},{a:"CapitalDifferentialD",b:"ⅅ"},{a:"caps",b:"∩︀"},{a:"caret",b:"⁁"},{a:"caron",b:"ˇ"},{a:"Cayleys",b:"ℭ"},{a:"ccaps",b:"⩍"},{a:"Ccaron",b:"Č"},{a:"ccaron",b:"č"},{a:"Ccedil",b:"Ç"},{a:"ccedil",b:"ç"},{a:"Ccirc",b:"Ĉ"},{a:"ccirc",b:"ĉ"},{a:"Cconint",b:"∰"},{a:"ccups",b:"⩌"},{a:"ccupssm",b:"⩐"},{a:"Cdot",b:"Ċ"},{a:"cdot",b:"ċ"},{a:"cedil",b:"¸"},{a:"Cedilla",b:"¸"},{a:"cemptyv",b:"⦲"},{a:"cent",b:"¢"},{a:"centerdot",b:"·"},{a:"CenterDot",b:"·"},{a:"cfr",b:"𝔠"},{a:"Cfr",b:"ℭ"},{a:"CHcy",b:"Ч"},{a:"chcy",b:"ч"},{a:"check",b:"✓"},{a:"checkmark",b:"✓"},{a:"Chi",b:"Χ"},{a:"chi",b:"χ"},{a:"circ",b:"ˆ"},{a:"circeq",b:"≗"},{a:"circlearrowleft",b:"↺"},{a:"circlearrowright",b:"↻"},{a:"circledast",b:"⊛"},{a:"circledcirc",b:"⊚"},{a:"circleddash",b:"⊝"},{a:"CircleDot",b:"⊙"},{a:"circledR",b:"®"},{a:"circledS",b:"Ⓢ"},{a:"CircleMinus",b:"⊖"},{a:"CirclePlus",b:"⊕"},{a:"CircleTimes",b:"⊗"},{a:"cir",b:"○"},{a:"cirE",b:"⧃"},{a:"cire",b:"≗"},{a:"cirfnint",b:"⨐"},{a:"cirmid",b:"⫯"},{a:"cirscir",b:"⧂"},{a:"ClockwiseContourIntegral",b:"∲"},{a:"CloseCurlyDoubleQuote",b:"”"},{a:"CloseCurlyQuote",b:"’"},{a:"clubs",b:"♣"},{a:"clubsuit",b:"♣"},{a:"colon",b:":"},{a:"Colon",b:"∷"},{a:"Colone",b:"⩴"},{a:"colone",b:"≔"},{a:"coloneq",b:"≔"},{a:"comma",b:","},{a:"commat",b:"@"},{a:"comp",b:"∁"},{a:"compfn",b:"∘"},{a:"complement",b:"∁"},{a:"complexes",b:"ℂ"},{a:"cong",b:"≅"},{a:"congdot",b:"⩭"},{a:"Congruent",b:"≡"},{a:"conint",b:"∮"},{a:"Conint",b:"∯"},{a:"ContourIntegral",b:"∮"},{a:"copf",b:"𝕔"},{a:"Copf",b:"ℂ"},{a:"coprod",b:"∐"},{a:"Coproduct",b:"∐"},{a:"copy",b:"©"},{a:"COPY",b:"©"},{a:"copysr",b:"℗"},{a:"CounterClockwiseContourIntegral",b:"∳"},{a:"crarr",b:"↵"},{a:"cross",b:"✗"},{a:"Cross",b:"⨯"},{a:"Cscr",b:"𝒞"},{a:"cscr",b:"𝒸"},{a:"csub",b:"⫏"},{a:"csube",b:"⫑"},{a:"csup",b:"⫐"},{a:"csupe",b:"⫒"},{a:"ctdot",b:"⋯"},{a:"cudarrl",b:"⤸"},{a:"cudarrr",b:"⤵"},{a:"cuepr",b:"⋞"},{a:"cuesc",b:"⋟"},{a:"cularr",b:"↶"},{a:"cularrp",b:"⤽"},{a:"cupbrcap",b:"⩈"},{a:"cupcap",b:"⩆"},{a:"CupCap",b:"≍"},{a:"cup",b:"∪"},{a:"Cup",b:"⋓"},{a:"cupcup",b:"⩊"},{a:"cupdot",b:"⊍"},{a:"cupor",b:"⩅"},{a:"cups",b:"∪︀"},{a:"curarr",b:"↷"},{a:"curarrm",b:"⤼"},{a:"curlyeqprec",b:"⋞"},{a:"curlyeqsucc",b:"⋟"},{a:"curlyvee",b:"⋎"},{a:"curlywedge",b:"⋏"},{a:"curren",b:"¤"},{a:"curvearrowleft",b:"↶"},{a:"curvearrowright",b:"↷"},{a:"cuvee",b:"⋎"},{a:"cuwed",b:"⋏"},{a:"cwconint",b:"∲"},{a:"cwint",b:"∱"},{a:"cylcty",b:"⌭"},{a:"dagger",b:"†"},{a:"Dagger",b:"‡"},{a:"daleth",b:"ℸ"},{a:"darr",b:"↓"},{a:"Darr",b:"↡"},{a:"dArr",b:"⇓"},{a:"dash",b:"‐"},{a:"Dashv",b:"⫤"},{a:"dashv",b:"⊣"},{a:"dbkarow",b:"⤏"},{a:"dblac",b:"˝"},{a:"Dcaron",b:"Ď"},{a:"dcaron",b:"ď"},{a:"Dcy",b:"Д"},{a:"dcy",b:"д"},{a:"ddagger",b:"‡"},{a:"ddarr",b:"⇊"},{a:"DD",b:"ⅅ"},{a:"dd",b:"ⅆ"},{a:"DDotrahd",b:"⤑"},{a:"ddotseq",b:"⩷"},{a:"deg",b:"°"},{a:"Del",b:"∇"},{a:"Delta",b:"Δ"},{a:"delta",b:"δ"},{a:"demptyv",b:"⦱"},{a:"dfisht",b:"⥿"},{a:"Dfr",b:"𝔇"},{a:"dfr",b:"𝔡"},{a:"dHar",b:"⥥"},{a:"dharl",b:"⇃"},{a:"dharr",b:"⇂"},{a:"DiacriticalAcute",b:"´"},{a:"DiacriticalDot",b:"˙"},{a:"DiacriticalDoubleAcute",b:"˝"},{a:"DiacriticalGrave",b:"`"},{a:"DiacriticalTilde",b:"˜"},{a:"diam",b:"⋄"},{a:"diamond",b:"⋄"},{a:"Diamond",b:"⋄"},{a:"diamondsuit",b:"♦"},{a:"diams",b:"♦"},{a:"die",b:"¨"},{a:"DifferentialD",b:"ⅆ"},{a:"digamma",b:"ϝ"},{a:"disin",b:"⋲"},{a:"div",b:"÷"},{a:"divide",b:"÷"},{a:"divideontimes",b:"⋇"},{a:"divonx",b:"⋇"},{a:"DJcy",b:"Ђ"},{a:"djcy",b:"ђ"},{a:"dlcorn",b:"⌞"},{a:"dlcrop",b:"⌍"},{a:"dollar",b:"$"},{a:"Dopf",b:"𝔻"},{a:"dopf",b:"𝕕"},{a:"Dot",b:"¨"},{a:"dot",b:"˙"},{a:"DotDot",b:"⃜"},{a:"doteq",b:"≐"},{a:"doteqdot",b:"≑"},{a:"DotEqual",b:"≐"},{a:"dotminus",b:"∸"},{a:"dotplus",b:"∔"},{a:"dotsquare",b:"⊡"},{a:"doublebarwedge",b:"⌆"},{a:"DoubleContourIntegral",b:"∯"},{a:"DoubleDot",b:"¨"},{a:"DoubleDownArrow",b:"⇓"},{a:"DoubleLeftArrow",b:"⇐"},{a:"DoubleLeftRightArrow",b:"⇔"},{a:"DoubleLeftTee",b:"⫤"},{a:"DoubleLongLeftArrow",b:"⟸"},{a:"DoubleLongLeftRightArrow",b:"⟺"},{a:"DoubleLongRightArrow",b:"⟹"},{a:"DoubleRightArrow",b:"⇒"},{a:"DoubleRightTee",b:"⊨"},{a:"DoubleUpArrow",b:"⇑"},{a:"DoubleUpDownArrow",b:"⇕"},{a:"DoubleVerticalBar",b:"∥"},{a:"DownArrowBar",b:"⤓"},{a:"downarrow",b:"↓"},{a:"DownArrow",b:"↓"},{a:"Downarrow",b:"⇓"},{a:"DownArrowUpArrow",b:"⇵"},{a:"DownBreve",b:"̑"},{a:"downdownarrows",b:"⇊"},{a:"downharpoonleft",b:"⇃"},{a:"downharpoonright",b:"⇂"},{a:"DownLeftRightVector",b:"⥐"},{a:"DownLeftTeeVector",b:"⥞"},{a:"DownLeftVectorBar",b:"⥖"},{a:"DownLeftVector",b:"↽"},{a:"DownRightTeeVector",b:"⥟"},{a:"DownRightVectorBar",b:"⥗"},{a:"DownRightVector",b:"⇁"},{a:"DownTeeArrow",b:"↧"},{a:"DownTee",b:"⊤"},{a:"drbkarow",b:"⤐"},{a:"drcorn",b:"⌟"},{a:"drcrop",b:"⌌"},{a:"Dscr",b:"𝒟"},{a:"dscr",b:"𝒹"},{a:"DScy",b:"Ѕ"},{a:"dscy",b:"ѕ"},{a:"dsol",b:"⧶"},{a:"Dstrok",b:"Đ"},{a:"dstrok",b:"đ"},{a:"dtdot",b:"⋱"},{a:"dtri",b:"▿"},{a:"dtrif",b:"▾"},{a:"duarr",b:"⇵"},{a:"duhar",b:"⥯"},{a:"dwangle",b:"⦦"},{a:"DZcy",b:"Џ"},{a:"dzcy",b:"џ"},{a:"dzigrarr",b:"⟿"},{a:"Eacute",b:"É"},{a:"eacute",b:"é"},{a:"easter",b:"⩮"},{a:"Ecaron",b:"Ě"},{a:"ecaron",b:"ě"},{a:"Ecirc",b:"Ê"},{a:"ecirc",b:"ê"},{a:"ecir",b:"≖"},{a:"ecolon",b:"≕"},{a:"Ecy",b:"Э"},{a:"ecy",b:"э"},{a:"eDDot",b:"⩷"},{a:"Edot",b:"Ė"},{a:"edot",b:"ė"},{a:"eDot",b:"≑"},{a:"ee",b:"ⅇ"},{a:"efDot",b:"≒"},{a:"Efr",b:"𝔈"},{a:"efr",b:"𝔢"},{a:"eg",b:"⪚"},{a:"Egrave",b:"È"},{a:"egrave",b:"è"},{a:"egs",b:"⪖"},{a:"egsdot",b:"⪘"},{a:"el",b:"⪙"},{a:"Element",b:"∈"},{a:"elinters",b:"⏧"},{a:"ell",b:"ℓ"},{a:"els",b:"⪕"},{a:"elsdot",b:"⪗"},{a:"Emacr",b:"Ē"},{a:"emacr",b:"ē"},{a:"empty",b:"∅"},{a:"emptyset",b:"∅"},{a:"EmptySmallSquare",b:"◻"},{a:"emptyv",b:"∅"},{a:"EmptyVerySmallSquare",b:"▫"},{a:"emsp13",b:" "},{a:"emsp14",b:" "},{a:"emsp",b:" "},{a:"ENG",b:"Ŋ"},{a:"eng",b:"ŋ"},{a:"ensp",b:" "},{a:"Eogon",b:"Ę"},{a:"eogon",b:"ę"},{a:"Eopf",b:"𝔼"},{a:"eopf",b:"𝕖"},{a:"epar",b:"⋕"},{a:"eparsl",b:"⧣"},{a:"eplus",b:"⩱"},{a:"epsi",b:"ε"},{a:"Epsilon",b:"Ε"},{a:"epsilon",b:"ε"},{a:"epsiv",b:"ϵ"},{a:"eqcirc",b:"≖"},{a:"eqcolon",b:"≕"},{a:"eqsim",b:"≂"},{a:"eqslantgtr",b:"⪖"},{a:"eqslantless",b:"⪕"},{a:"Equal",b:"⩵"},{a:"equals",b:"="},{a:"EqualTilde",b:"≂"},{a:"equest",b:"≟"},{a:"Equilibrium",b:"⇌"},{a:"equiv",b:"≡"},{a:"equivDD",b:"⩸"},{a:"eqvparsl",b:"⧥"},{a:"erarr",b:"⥱"},{a:"erDot",b:"≓"},{a:"escr",b:"ℯ"},{a:"Escr",b:"ℰ"},{a:"esdot",b:"≐"},{a:"Esim",b:"⩳"},{a:"esim",b:"≂"},{a:"Eta",b:"Η"},{a:"eta",b:"η"},{a:"ETH",b:"Ð"},{a:"eth",b:"ð"},{a:"Euml",b:"Ë"},{a:"euml",b:"ë"},{a:"euro",b:"€"},{a:"excl",b:"!"},{a:"exist",b:"∃"},{a:"Exists",b:"∃"},{a:"expectation",b:"ℰ"},{a:"exponentiale",b:"ⅇ"},{a:"ExponentialE",b:"ⅇ"},{a:"fallingdotseq",b:"≒"},{a:"Fcy",b:"Ф"},{a:"fcy",b:"ф"},{a:"female",b:"♀"},{a:"ffilig",b:"ﬃ"},{a:"fflig",b:"ﬀ"},{a:"ffllig",b:"ﬄ"},{a:"Ffr",b:"𝔉"},{a:"ffr",b:"𝔣"},{a:"filig",b:"ﬁ"},{a:"FilledSmallSquare",b:"◼"},{a:"FilledVerySmallSquare",b:"▪"},{a:"fjlig",b:"fj"},{a:"flat",b:"♭"},{a:"fllig",b:"ﬂ"},{a:"fltns",b:"▱"},{a:"fnof",b:"ƒ"},{a:"Fopf",b:"𝔽"},{a:"fopf",b:"𝕗"},{a:"forall",b:"∀"},{a:"ForAll",b:"∀"},{a:"fork",b:"⋔"},{a:"forkv",b:"⫙"},{a:"Fouriertrf",b:"ℱ"},{a:"fpartint",b:"⨍"},{a:"frac12",b:"½"},{a:"frac13",b:"⅓"},{a:"frac14",b:"¼"},{a:"frac15",b:"⅕"},{a:"frac16",b:"⅙"},{a:"frac18",b:"⅛"},{a:"frac23",b:"⅔"},{a:"frac25",b:"⅖"},{a:"frac34",b:"¾"},{a:"frac35",b:"⅗"},{a:"frac38",b:"⅜"},{a:"frac45",b:"⅘"},{a:"frac56",b:"⅚"},{a:"frac58",b:"⅝"},{a:"frac78",b:"⅞"},{a:"frasl",b:"⁄"},{a:"frown",b:"⌢"},{a:"fscr",b:"𝒻"},{a:"Fscr",b:"ℱ"},{a:"gacute",b:"ǵ"},{a:"Gamma",b:"Γ"},{a:"gamma",b:"γ"},{a:"Gammad",b:"Ϝ"},{a:"gammad",b:"ϝ"},{a:"gap",b:"⪆"},{a:"Gbreve",b:"Ğ"},{a:"gbreve",b:"ğ"},{a:"Gcedil",b:"Ģ"},{a:"Gcirc",b:"Ĝ"},{a:"gcirc",b:"ĝ"},{a:"Gcy",b:"Г"},{a:"gcy",b:"г"},{a:"Gdot",b:"Ġ"},{a:"gdot",b:"ġ"},{a:"ge",b:"≥"},{a:"gE",b:"≧"},{a:"gEl",b:"⪌"},{a:"gel",b:"⋛"},{a:"geq",b:"≥"},{a:"geqq",b:"≧"},{a:"geqslant",b:"⩾"},{a:"gescc",b:"⪩"},{a:"ges",b:"⩾"},{a:"gesdot",b:"⪀"},{a:"gesdoto",b:"⪂"},{a:"gesdotol",b:"⪄"},{a:"gesl",b:"⋛︀"},{a:"gesles",b:"⪔"},{a:"Gfr",b:"𝔊"},{a:"gfr",b:"𝔤"},{a:"gg",b:"≫"},{a:"Gg",b:"⋙"},{a:"ggg",b:"⋙"},{a:"gimel",b:"ℷ"},{a:"GJcy",b:"Ѓ"},{a:"gjcy",b:"ѓ"},{a:"gla",b:"⪥"},{a:"gl",b:"≷"},{a:"glE",b:"⪒"},{a:"glj",b:"⪤"},{a:"gnap",b:"⪊"},{a:"gnapprox",b:"⪊"},{a:"gne",b:"⪈"},{a:"gnE",b:"≩"},{a:"gneq",b:"⪈"},{a:"gneqq",b:"≩"},{a:"gnsim",b:"⋧"},{a:"Gopf",b:"𝔾"},{a:"gopf",b:"𝕘"},{a:"grave",b:"`"},{a:"GreaterEqual",b:"≥"},{a:"GreaterEqualLess",b:"⋛"},{a:"GreaterFullEqual",b:"≧"},{a:"GreaterGreater",b:"⪢"},{a:"GreaterLess",b:"≷"},{a:"GreaterSlantEqual",b:"⩾"},{a:"GreaterTilde",b:"≳"},{a:"Gscr",b:"𝒢"},{a:"gscr",b:"ℊ"},{a:"gsim",b:"≳"},{a:"gsime",b:"⪎"},{a:"gsiml",b:"⪐"},{a:"gtcc",b:"⪧"},{a:"gtcir",b:"⩺"},{a:"gt",b:">"},{a:"GT",b:">"},{a:"Gt",b:"≫"},{a:"gtdot",b:"⋗"},{a:"gtlPar",b:"⦕"},{a:"gtquest",b:"⩼"},{a:"gtrapprox",b:"⪆"},{a:"gtrarr",b:"⥸"},{a:"gtrdot",b:"⋗"},{a:"gtreqless",b:"⋛"},{a:"gtreqqless",b:"⪌"},{a:"gtrless",b:"≷"},{a:"gtrsim",b:"≳"},{a:"gvertneqq",b:"≩︀"},{a:"gvnE",b:"≩︀"},{a:"Hacek",b:"ˇ"},{a:"hairsp",b:" "},{a:"half",b:"½"},{a:"hamilt",b:"ℋ"},{a:"HARDcy",b:"Ъ"},{a:"hardcy",b:"ъ"},{a:"harrcir",b:"⥈"},{a:"harr",b:"↔"},{a:"hArr",b:"⇔"},{a:"harrw",b:"↭"},{a:"Hat",b:"^"},{a:"hbar",b:"ℏ"},{a:"Hcirc",b:"Ĥ"},{a:"hcirc",b:"ĥ"},{a:"hearts",b:"♥"},{a:"heartsuit",b:"♥"},{a:"hellip",b:"…"},{a:"hercon",b:"⊹"},{a:"hfr",b:"𝔥"},{a:"Hfr",b:"ℌ"},{a:"HilbertSpace",b:"ℋ"},{a:"hksearow",b:"⤥"},{a:"hkswarow",b:"⤦"},{a:"hoarr",b:"⇿"},{a:"homtht",b:"∻"},{a:"hookleftarrow",b:"↩"},{a:"hookrightarrow",b:"↪"},{a:"hopf",b:"𝕙"},{a:"Hopf",b:"ℍ"},{a:"horbar",b:"―"},{a:"HorizontalLine",b:"─"},{a:"hscr",b:"𝒽"},{a:"Hscr",b:"ℋ"},{a:"hslash",b:"ℏ"},{a:"Hstrok",b:"Ħ"},{a:"hstrok",b:"ħ"},{a:"HumpDownHump",b:"≎"},{a:"HumpEqual",b:"≏"},{a:"hybull",b:"⁃"},{a:"hyphen",b:"‐"},{a:"Iacute",b:"Í"},{a:"iacute",b:"í"},{a:"ic",b:"⁣"},{a:"Icirc",b:"Î"},{a:"icirc",b:"î"},{a:"Icy",b:"И"},{a:"icy",b:"и"},{a:"Idot",b:"İ"},{a:"IEcy",b:"Е"},{a:"iecy",b:"е"},{a:"iexcl",b:"¡"},{a:"iff",b:"⇔"},{a:"ifr",b:"𝔦"},{a:"Ifr",b:"ℑ"},{a:"Igrave",b:"Ì"},{a:"igrave",b:"ì"},{a:"ii",b:"ⅈ"},{a:"iiiint",b:"⨌"},{a:"iiint",b:"∭"},{a:"iinfin",b:"⧜"},{a:"iiota",b:"℩"},{a:"IJlig",b:"Ĳ"},{a:"ijlig",b:"ĳ"},{a:"Imacr",b:"Ī"},{a:"imacr",b:"ī"},{a:"image",b:"ℑ"},{a:"ImaginaryI",b:"ⅈ"},{a:"imagline",b:"ℐ"},{a:"imagpart",b:"ℑ"},{a:"imath",b:"ı"},{a:"Im",b:"ℑ"},{a:"imof",b:"⊷"},{a:"imped",b:"Ƶ"},{a:"Implies",b:"⇒"},{a:"incare",b:"℅"},{a:"in",b:"∈"},{a:"infin",b:"∞"},{a:"infintie",b:"⧝"},{a:"inodot",b:"ı"},{a:"intcal",b:"⊺"},{a:"int",b:"∫"},{a:"Int",b:"∬"},{a:"integers",b:"ℤ"},{a:"Integral",b:"∫"},{a:"intercal",b:"⊺"},{a:"Intersection",b:"⋂"},{a:"intlarhk",b:"⨗"},{a:"intprod",b:"⨼"},{a:"InvisibleComma",b:"⁣"},{a:"InvisibleTimes",b:"⁢"},{a:"IOcy",b:"Ё"},{a:"iocy",b:"ё"},{a:"Iogon",b:"Į"},{a:"iogon",b:"į"},{a:"Iopf",b:"𝕀"},{a:"iopf",b:"𝕚"},{a:"Iota",b:"Ι"},{a:"iota",b:"ι"},{a:"iprod",b:"⨼"},{a:"iquest",b:"¿"},{a:"iscr",b:"𝒾"},{a:"Iscr",b:"ℐ"},{a:"isin",b:"∈"},{a:"isindot",b:"⋵"},{a:"isinE",b:"⋹"},{a:"isins",b:"⋴"},{a:"isinsv",b:"⋳"},{a:"isinv",b:"∈"},{a:"it",b:"⁢"},{a:"Itilde",b:"Ĩ"},{a:"itilde",b:"ĩ"},{a:"Iukcy",b:"І"},{a:"iukcy",b:"і"},{a:"Iuml",b:"Ï"},{a:"iuml",b:"ï"},{a:"Jcirc",b:"Ĵ"},{a:"jcirc",b:"ĵ"},{a:"Jcy",b:"Й"},{a:"jcy",b:"й"},{a:"Jfr",b:"𝔍"},{a:"jfr",b:"𝔧"},{a:"jmath",b:"ȷ"},{a:"Jopf",b:"𝕁"},{a:"jopf",b:"𝕛"},{a:"Jscr",b:"𝒥"},{a:"jscr",b:"𝒿"},{a:"Jsercy",b:"Ј"},{a:"jsercy",b:"ј"},{a:"Jukcy",b:"Є"},{a:"jukcy",b:"є"},{a:"Kappa",b:"Κ"},{a:"kappa",b:"κ"},{a:"kappav",b:"ϰ"},{a:"Kcedil",b:"Ķ"},{a:"kcedil",b:"ķ"},{a:"Kcy",b:"К"},{a:"kcy",b:"к"},{a:"Kfr",b:"𝔎"},{a:"kfr",b:"𝔨"},{a:"kgreen",b:"ĸ"},{a:"KHcy",b:"Х"},{a:"khcy",b:"х"},{a:"KJcy",b:"Ќ"},{a:"kjcy",b:"ќ"},{a:"Kopf",b:"𝕂"},{a:"kopf",b:"𝕜"},{a:"Kscr",b:"𝒦"},{a:"kscr",b:"𝓀"},{a:"lAarr",b:"⇚"},{a:"Lacute",b:"Ĺ"},{a:"lacute",b:"ĺ"},{a:"laemptyv",b:"⦴"},{a:"lagran",b:"ℒ"},{a:"Lambda",b:"Λ"},{a:"lambda",b:"λ"},{a:"lang",b:"⟨"},{a:"Lang",b:"⟪"},{a:"langd",b:"⦑"},{a:"langle",b:"⟨"},{a:"lap",b:"⪅"},{a:"Laplacetrf",b:"ℒ"},{a:"laquo",b:"«"},{a:"larrb",b:"⇤"},{a:"larrbfs",b:"⤟"},{a:"larr",b:"←"},{a:"Larr",b:"↞"},{a:"lArr",b:"⇐"},{a:"larrfs",b:"⤝"},{a:"larrhk",b:"↩"},{a:"larrlp",b:"↫"},{a:"larrpl",b:"⤹"},{a:"larrsim",b:"⥳"},{a:"larrtl",b:"↢"},{a:"latail",b:"⤙"},{a:"lAtail",b:"⤛"},{a:"lat",b:"⪫"},{a:"late",b:"⪭"},{a:"lates",b:"⪭︀"},{a:"lbarr",b:"⤌"},{a:"lBarr",b:"⤎"},{a:"lbbrk",b:"❲"},{a:"lbrace",b:"{"},{a:"lbrack",b:"["},{a:"lbrke",b:"⦋"},{a:"lbrksld",b:"⦏"},{a:"lbrkslu",b:"⦍"},{a:"Lcaron",b:"Ľ"},{a:"lcaron",b:"ľ"},{a:"Lcedil",b:"Ļ"},{a:"lcedil",b:"ļ"},{a:"lceil",b:"⌈"},{a:"lcub",b:"{"},{a:"Lcy",b:"Л"},{a:"lcy",b:"л"},{a:"ldca",b:"⤶"},{a:"ldquo",b:"“"},{a:"ldquor",b:"„"},{a:"ldrdhar",b:"⥧"},{a:"ldrushar",b:"⥋"},{a:"ldsh",b:"↲"},{a:"le",b:"≤"},{a:"lE",b:"≦"},{a:"LeftAngleBracket",b:"⟨"},{a:"LeftArrowBar",b:"⇤"},{a:"leftarrow",b:"←"},{a:"LeftArrow",b:"←"},{a:"Leftarrow",b:"⇐"},{a:"LeftArrowRightArrow",b:"⇆"},{a:"leftarrowtail",b:"↢"},{a:"LeftCeiling",b:"⌈"},{a:"LeftDoubleBracket",b:"⟦"},{a:"LeftDownTeeVector",b:"⥡"},{a:"LeftDownVectorBar",b:"⥙"},{a:"LeftDownVector",b:"⇃"},{a:"LeftFloor",b:"⌊"},{a:"leftharpoondown",b:"↽"},{a:"leftharpoonup",b:"↼"},{a:"leftleftarrows",b:"⇇"},{a:"leftrightarrow",b:"↔"},{a:"LeftRightArrow",b:"↔"},{a:"Leftrightarrow",b:"⇔"},{a:"leftrightarrows",b:"⇆"},{a:"leftrightharpoons",b:"⇋"},{a:"leftrightsquigarrow",b:"↭"},{a:"LeftRightVector",b:"⥎"},{a:"LeftTeeArrow",b:"↤"},{a:"LeftTee",b:"⊣"},{a:"LeftTeeVector",b:"⥚"},{a:"leftthreetimes",b:"⋋"},{a:"LeftTriangleBar",b:"⧏"},{a:"LeftTriangle",b:"⊲"},{a:"LeftTriangleEqual",b:"⊴"},{a:"LeftUpDownVector",b:"⥑"},{a:"LeftUpTeeVector",b:"⥠"},{a:"LeftUpVectorBar",b:"⥘"},{a:"LeftUpVector",b:"↿"},{a:"LeftVectorBar",b:"⥒"},{a:"LeftVector",b:"↼"},{a:"lEg",b:"⪋"},{a:"leg",b:"⋚"},{a:"leq",b:"≤"},{a:"leqq",b:"≦"},{a:"leqslant",b:"⩽"},{a:"lescc",b:"⪨"},{a:"les",b:"⩽"},{a:"lesdot",b:"⩿"},{a:"lesdoto",b:"⪁"},{a:"lesdotor",b:"⪃"},{a:"lesg",b:"⋚︀"},{a:"lesges",b:"⪓"},{a:"lessapprox",b:"⪅"},{a:"lessdot",b:"⋖"},{a:"lesseqgtr",b:"⋚"},{a:"lesseqqgtr",b:"⪋"},{a:"LessEqualGreater",b:"⋚"},{a:"LessFullEqual",b:"≦"},{a:"LessGreater",b:"≶"},{a:"lessgtr",b:"≶"},{a:"LessLess",b:"⪡"},{a:"lesssim",b:"≲"},{a:"LessSlantEqual",b:"⩽"},{a:"LessTilde",b:"≲"},{a:"lfisht",b:"⥼"},{a:"lfloor",b:"⌊"},{a:"Lfr",b:"𝔏"},{a:"lfr",b:"𝔩"},{a:"lg",b:"≶"},{a:"lgE",b:"⪑"},{a:"lHar",b:"⥢"},{a:"lhard",b:"↽"},{a:"lharu",b:"↼"},{a:"lharul",b:"⥪"},{a:"lhblk",b:"▄"},{a:"LJcy",b:"Љ"},{a:"ljcy",b:"љ"},{a:"llarr",b:"⇇"},{a:"ll",b:"≪"},{a:"Ll",b:"⋘"},{a:"llcorner",b:"⌞"},{a:"Lleftarrow",b:"⇚"},{a:"llhard",b:"⥫"},{a:"lltri",b:"◺"},{a:"Lmidot",b:"Ŀ"},{a:"lmidot",b:"ŀ"},{a:"lmoustache",b:"⎰"},{a:"lmoust",b:"⎰"},{a:"lnap",b:"⪉"},{a:"lnapprox",b:"⪉"},{a:"lne",b:"⪇"},{a:"lnE",b:"≨"},{a:"lneq",b:"⪇"},{a:"lneqq",b:"≨"},{a:"lnsim",b:"⋦"},{a:"loang",b:"⟬"},{a:"loarr",b:"⇽"},{a:"lobrk",b:"⟦"},{a:"longleftarrow",b:"⟵"},{a:"LongLeftArrow",b:"⟵"},{a:"Longleftarrow",b:"⟸"},{a:"longleftrightarrow",b:"⟷"},{a:"LongLeftRightArrow",b:"⟷"},{a:"Longleftrightarrow",b:"⟺"},{a:"longmapsto",b:"⟼"},{a:"longrightarrow",b:"⟶"},{a:"LongRightArrow",b:"⟶"},{a:"Longrightarrow",b:"⟹"},{a:"looparrowleft",b:"↫"},{a:"looparrowright",b:"↬"},{a:"lopar",b:"⦅"},{a:"Lopf",b:"𝕃"},{a:"lopf",b:"𝕝"},{a:"loplus",b:"⨭"},{a:"lotimes",b:"⨴"},{a:"lowast",b:"∗"},{a:"lowbar",b:"_"},{a:"LowerLeftArrow",b:"↙"},{a:"LowerRightArrow",b:"↘"},{a:"loz",b:"◊"},{a:"lozenge",b:"◊"},{a:"lozf",b:"⧫"},{a:"lpar",b:"("},{a:"lparlt",b:"⦓"},{a:"lrarr",b:"⇆"},{a:"lrcorner",b:"⌟"},{a:"lrhar",b:"⇋"},{a:"lrhard",b:"⥭"},{a:"lrm",b:"‎"},{a:"lrtri",b:"⊿"},{a:"lsaquo",b:"‹"},{a:"lscr",b:"𝓁"},{a:"Lscr",b:"ℒ"},{a:"lsh",b:"↰"},{a:"Lsh",b:"↰"},{a:"lsim",b:"≲"},{a:"lsime",b:"⪍"},{a:"lsimg",b:"⪏"},{a:"lsqb",b:"["},{a:"lsquo",b:"‘"},{a:"lsquor",b:"‚"},{a:"Lstrok",b:"Ł"},{a:"lstrok",b:"ł"},{a:"ltcc",b:"⪦"},{a:"ltcir",b:"⩹"},{a:"lt",b:"<"},{a:"LT",b:"<"},{a:"Lt",b:"≪"},{a:"ltdot",b:"⋖"},{a:"lthree",b:"⋋"},{a:"ltimes",b:"⋉"},{a:"ltlarr",b:"⥶"},{a:"ltquest",b:"⩻"},{a:"ltri",b:"◃"},{a:"ltrie",b:"⊴"},{a:"ltrif",b:"◂"},{a:"ltrPar",b:"⦖"},{a:"lurdshar",b:"⥊"},{a:"luruhar",b:"⥦"},{a:"lvertneqq",b:"≨︀"},{a:"lvnE",b:"≨︀"},{a:"macr",b:"¯"},{a:"male",b:"♂"},{a:"malt",b:"✠"},{a:"maltese",b:"✠"},{a:"Map",b:"⤅"},{a:"map",b:"↦"},{a:"mapsto",b:"↦"},{a:"mapstodown",b:"↧"},{a:"mapstoleft",b:"↤"},{a:"mapstoup",b:"↥"},{a:"marker",b:"▮"},{a:"mcomma",b:"⨩"},{a:"Mcy",b:"М"},{a:"mcy",b:"м"},{a:"mdash",b:"—"},{a:"mDDot",b:"∺"},{a:"measuredangle",b:"∡"},{a:"MediumSpace",b:" "},{a:"Mellintrf",b:"ℳ"},{a:"Mfr",b:"𝔐"},{a:"mfr",b:"𝔪"},{a:"mho",b:"℧"},{a:"micro",b:"µ"},{a:"midast",b:"*"},{a:"midcir",b:"⫰"},{a:"mid",b:"∣"},{a:"middot",b:"·"},{a:"minusb",b:"⊟"},{a:"minus",b:"−"},{a:"minusd",b:"∸"},{a:"minusdu",b:"⨪"},{a:"MinusPlus",b:"∓"},{a:"mlcp",b:"⫛"},{a:"mldr",b:"…"},{a:"mnplus",b:"∓"},{a:"models",b:"⊧"},{a:"Mopf",b:"𝕄"},{a:"mopf",b:"𝕞"},{a:"mp",b:"∓"},{a:"mscr",b:"𝓂"},{a:"Mscr",b:"ℳ"},{a:"mstpos",b:"∾"},{a:"Mu",b:"Μ"},{a:"mu",b:"μ"},{a:"multimap",b:"⊸"},{a:"mumap",b:"⊸"},{a:"nabla",b:"∇"},{a:"Nacute",b:"Ń"},{a:"nacute",b:"ń"},{a:"nang",b:"∠⃒"},{a:"nap",b:"≉"},{a:"napE",b:"⩰̸"},{a:"napid",b:"≋̸"},{a:"napos",b:"ŉ"},{a:"napprox",b:"≉"},{a:"natural",b:"♮"},{a:"naturals",b:"ℕ"},{a:"natur",b:"♮"},{a:"nbsp",b:" "},{a:"nbump",b:"≎̸"},{a:"nbumpe",b:"≏̸"},{a:"ncap",b:"⩃"},{a:"Ncaron",b:"Ň"},{a:"ncaron",b:"ň"},{a:"Ncedil",b:"Ņ"},{a:"ncedil",b:"ņ"},{a:"ncong",b:"≇"},{a:"ncongdot",b:"⩭̸"},{a:"ncup",b:"⩂"},{a:"Ncy",b:"Н"},{a:"ncy",b:"н"},{a:"ndash",b:"–"},{a:"nearhk",b:"⤤"},{a:"nearr",b:"↗"},{a:"neArr",b:"⇗"},{a:"nearrow",b:"↗"},{a:"ne",b:"≠"},{a:"nedot",b:"≐̸"},{a:"NegativeMediumSpace",b:"​"},{a:"NegativeThickSpace",b:"​"},{a:"NegativeThinSpace",b:"​"},{a:"NegativeVeryThinSpace",b:"​"},{a:"nequiv",b:"≢"},{a:"nesear",b:"⤨"},{a:"nesim",b:"≂̸"},{a:"NestedGreaterGreater",b:"≫"},{a:"NestedLessLess",b:"≪"},{a:"NewLine",b:"\n"},{a:"nexist",b:"∄"},{a:"nexists",b:"∄"},{a:"Nfr",b:"𝔑"},{a:"nfr",b:"𝔫"},{a:"ngE",b:"≧̸"},{a:"nge",b:"≱"},{a:"ngeq",b:"≱"},{a:"ngeqq",b:"≧̸"},{a:"ngeqslant",b:"⩾̸"},{a:"nges",b:"⩾̸"},{a:"nGg",b:"⋙̸"},{a:"ngsim",b:"≵"},{a:"nGt",b:"≫⃒"},{a:"ngt",b:"≯"},{a:"ngtr",b:"≯"},{a:"nGtv",b:"≫̸"},{a:"nharr",b:"↮"},{a:"nhArr",b:"⇎"},{a:"nhpar",b:"⫲"},{a:"ni",b:"∋"},{a:"nis",b:"⋼"},{a:"nisd",b:"⋺"},{a:"niv",b:"∋"},{a:"NJcy",b:"Њ"},{a:"njcy",b:"њ"},{a:"nlarr",b:"↚"},{a:"nlArr",b:"⇍"},{a:"nldr",b:"‥"},{a:"nlE",b:"≦̸"},{a:"nle",b:"≰"},{a:"nleftarrow",b:"↚"},{a:"nLeftarrow",b:"⇍"},{a:"nleftrightarrow",b:"↮"},{a:"nLeftrightarrow",b:"⇎"},{a:"nleq",b:"≰"},{a:"nleqq",b:"≦̸"},{a:"nleqslant",b:"⩽̸"},{a:"nles",b:"⩽̸"},{a:"nless",b:"≮"},{a:"nLl",b:"⋘̸"},{a:"nlsim",b:"≴"},{a:"nLt",b:"≪⃒"},{a:"nlt",b:"≮"},{a:"nltri",b:"⋪"},{a:"nltrie",b:"⋬"},{a:"nLtv",b:"≪̸"},{a:"nmid",b:"∤"},{a:"NoBreak",b:"⁠"},{a:"NonBreakingSpace",b:" "},{a:"nopf",b:"𝕟"},{a:"Nopf",b:"ℕ"},{a:"Not",b:"⫬"},{a:"not",b:"¬"},{a:"NotCongruent",b:"≢"},{a:"NotCupCap",b:"≭"},{a:"NotDoubleVerticalBar",b:"∦"},{a:"NotElement",b:"∉"},{a:"NotEqual",b:"≠"},{a:"NotEqualTilde",b:"≂̸"},{a:"NotExists",b:"∄"},{a:"NotGreater",b:"≯"},{a:"NotGreaterEqual",b:"≱"},{a:"NotGreaterFullEqual",b:"≧̸"},{a:"NotGreaterGreater",b:"≫̸"},{a:"NotGreaterLess",b:"≹"},{a:"NotGreaterSlantEqual",b:"⩾̸"},{a:"NotGreaterTilde",b:"≵"},{a:"NotHumpDownHump",b:"≎̸"},{a:"NotHumpEqual",b:"≏̸"},{a:"notin",b:"∉"},{a:"notindot",b:"⋵̸"},{a:"notinE",b:"⋹̸"},{a:"notinva",b:"∉"},{a:"notinvb",b:"⋷"},{a:"notinvc",b:"⋶"},{a:"NotLeftTriangleBar",b:"⧏̸"},{a:"NotLeftTriangle",b:"⋪"},{a:"NotLeftTriangleEqual",b:"⋬"},{a:"NotLess",b:"≮"},{a:"NotLessEqual",b:"≰"},{a:"NotLessGreater",b:"≸"},{a:"NotLessLess",b:"≪̸"},{a:"NotLessSlantEqual",b:"⩽̸"},{a:"NotLessTilde",b:"≴"},{a:"NotNestedGreaterGreater",b:"⪢̸"},{a:"NotNestedLessLess",b:"⪡̸"},{a:"notni",b:"∌"},{a:"notniva",b:"∌"},{a:"notnivb",b:"⋾"},{a:"notnivc",b:"⋽"},{a:"NotPrecedes",b:"⊀"},{a:"NotPrecedesEqual",b:"⪯̸"},{a:"NotPrecedesSlantEqual",b:"⋠"},{a:"NotReverseElement",b:"∌"},{a:"NotRightTriangleBar",b:"⧐̸"},{a:"NotRightTriangle",b:"⋫"},{a:"NotRightTriangleEqual",b:"⋭"},{a:"NotSquareSubset",b:"⊏̸"},{a:"NotSquareSubsetEqual",b:"⋢"},{a:"NotSquareSuperset",b:"⊐̸"},{a:"NotSquareSupersetEqual",b:"⋣"},{a:"NotSubset",b:"⊂⃒"},{a:"NotSubsetEqual",b:"⊈"},{a:"NotSucceeds",b:"⊁"},{a:"NotSucceedsEqual",b:"⪰̸"},{a:"NotSucceedsSlantEqual",b:"⋡"},{a:"NotSucceedsTilde",b:"≿̸"},{a:"NotSuperset",b:"⊃⃒"},{a:"NotSupersetEqual",b:"⊉"},{a:"NotTilde",b:"≁"},{a:"NotTildeEqual",b:"≄"},{a:"NotTildeFullEqual",b:"≇"},{a:"NotTildeTilde",b:"≉"},{a:"NotVerticalBar",b:"∤"},{a:"nparallel",b:"∦"},{a:"npar",b:"∦"},{a:"nparsl",b:"⫽⃥"},{a:"npart",b:"∂̸"},{a:"npolint",b:"⨔"},{a:"npr",b:"⊀"},{a:"nprcue",b:"⋠"},{a:"nprec",b:"⊀"},{a:"npreceq",b:"⪯̸"},{a:"npre",b:"⪯̸"},{a:"nrarrc",b:"⤳̸"},{a:"nrarr",b:"↛"},{a:"nrArr",b:"⇏"},{a:"nrarrw",b:"↝̸"},{a:"nrightarrow",b:"↛"},{a:"nRightarrow",b:"⇏"},{a:"nrtri",b:"⋫"},{a:"nrtrie",b:"⋭"},{a:"nsc",b:"⊁"},{a:"nsccue",b:"⋡"},{a:"nsce",b:"⪰̸"},{a:"Nscr",b:"𝒩"},{a:"nscr",b:"𝓃"},{a:"nshortmid",b:"∤"},{a:"nshortparallel",b:"∦"},{a:"nsim",b:"≁"},{a:"nsime",b:"≄"},{a:"nsimeq",b:"≄"},{a:"nsmid",b:"∤"},{a:"nspar",b:"∦"},{a:"nsqsube",b:"⋢"},{a:"nsqsupe",b:"⋣"},{a:"nsub",b:"⊄"},{a:"nsubE",b:"⫅̸"},{a:"nsube",b:"⊈"},{a:"nsubset",b:"⊂⃒"},{a:"nsubseteq",b:"⊈"},{a:"nsubseteqq",b:"⫅̸"},{a:"nsucc",b:"⊁"},{a:"nsucceq",b:"⪰̸"},{a:"nsup",b:"⊅"},{a:"nsupE",b:"⫆̸"},{a:"nsupe",b:"⊉"},{a:"nsupset",b:"⊃⃒"},{a:"nsupseteq",b:"⊉"},{a:"nsupseteqq",b:"⫆̸"},{a:"ntgl",b:"≹"},{a:"Ntilde",b:"Ñ"},{a:"ntilde",b:"ñ"},{a:"ntlg",b:"≸"},{a:"ntriangleleft",b:"⋪"},{a:"ntrianglelefteq",b:"⋬"},{a:"ntriangleright",b:"⋫"},{a:"ntrianglerighteq",b:"⋭"},{a:"Nu",b:"Ν"},{a:"nu",b:"ν"},{a:"num",b:"#"},{a:"numero",b:"№"},{a:"numsp",b:" "},{a:"nvap",b:"≍⃒"},{a:"nvdash",b:"⊬"},{a:"nvDash",b:"⊭"},{a:"nVdash",b:"⊮"},{a:"nVDash",b:"⊯"},{a:"nvge",b:"≥⃒"},{a:"nvgt",b:">⃒"},{a:"nvHarr",b:"⤄"},{a:"nvinfin",b:"⧞"},{a:"nvlArr",b:"⤂"},{a:"nvle",b:"≤⃒"},{a:"nvlt",b:"<⃒"},{a:"nvltrie",b:"⊴⃒"},{a:"nvrArr",b:"⤃"},{a:"nvrtrie",b:"⊵⃒"},{a:"nvsim",b:"∼⃒"},{a:"nwarhk",b:"⤣"},{a:"nwarr",b:"↖"},{a:"nwArr",b:"⇖"},{a:"nwarrow",b:"↖"},{a:"nwnear",b:"⤧"},{a:"Oacute",b:"Ó"},{a:"oacute",b:"ó"},{a:"oast",b:"⊛"},{a:"Ocirc",b:"Ô"},{a:"ocirc",b:"ô"},{a:"ocir",b:"⊚"},{a:"Ocy",b:"О"},{a:"ocy",b:"о"},{a:"odash",b:"⊝"},{a:"Odblac",b:"Ő"},{a:"odblac",b:"ő"},{a:"odiv",b:"⨸"},{a:"odot",b:"⊙"},{a:"odsold",b:"⦼"},{a:"OElig",b:"Œ"},{a:"oelig",b:"œ"},{a:"ofcir",b:"⦿"},{a:"Ofr",b:"𝔒"},{a:"ofr",b:"𝔬"},{a:"ogon",b:"˛"},{a:"Ograve",b:"Ò"},{a:"ograve",b:"ò"},{a:"ogt",b:"⧁"},{a:"ohbar",b:"⦵"},{a:"ohm",b:"Ω"},{a:"oint",b:"∮"},{a:"olarr",b:"↺"},{a:"olcir",b:"⦾"},{a:"olcross",b:"⦻"},{a:"oline",b:"‾"},{a:"olt",b:"⧀"},{a:"Omacr",b:"Ō"},{a:"omacr",b:"ō"},{a:"Omega",b:"Ω"},{a:"omega",b:"ω"},{a:"Omicron",b:"Ο"},{a:"omicron",b:"ο"},{a:"omid",b:"⦶"},{a:"ominus",b:"⊖"},{a:"Oopf",b:"𝕆"},{a:"oopf",b:"𝕠"},{a:"opar",b:"⦷"},{a:"OpenCurlyDoubleQuote",b:"“"},{a:"OpenCurlyQuote",b:"‘"},{a:"operp",b:"⦹"},{a:"oplus",b:"⊕"},{a:"orarr",b:"↻"},{a:"Or",b:"⩔"},{a:"or",b:"∨"},{a:"ord",b:"⩝"},{a:"order",b:"ℴ"},{a:"orderof",b:"ℴ"},{a:"ordf",b:"ª"},{a:"ordm",b:"º"},{a:"origof",b:"⊶"},{a:"oror",b:"⩖"},{a:"orslope",b:"⩗"},{a:"orv",b:"⩛"},{a:"oS",b:"Ⓢ"},{a:"Oscr",b:"𝒪"},{a:"oscr",b:"ℴ"},{a:"Oslash",b:"Ø"},{a:"oslash",b:"ø"},{a:"osol",b:"⊘"},{a:"Otilde",b:"Õ"},{a:"otilde",b:"õ"},{a:"otimesas",b:"⨶"},{a:"Otimes",b:"⨷"},{a:"otimes",b:"⊗"},{a:"Ouml",b:"Ö"},{a:"ouml",b:"ö"},{a:"ovbar",b:"⌽"},{a:"OverBar",b:"‾"},{a:"OverBrace",b:"⏞"},{a:"OverBracket",b:"⎴"},{a:"OverParenthesis",b:"⏜"},{a:"para",b:"¶"},{a:"parallel",b:"∥"},{a:"par",b:"∥"},{a:"parsim",b:"⫳"},{a:"parsl",b:"⫽"},{a:"part",b:"∂"},{a:"PartialD",b:"∂"},{a:"Pcy",b:"П"},{a:"pcy",b:"п"},{a:"percnt",b:"%"},{a:"period",b:"."},{a:"permil",b:"‰"},{a:"perp",b:"⊥"},{a:"pertenk",b:"‱"},{a:"Pfr",b:"𝔓"},{a:"pfr",b:"𝔭"},{a:"Phi",b:"Φ"},{a:"phi",b:"φ"},{a:"phiv",b:"ϕ"},{a:"phmmat",b:"ℳ"},{a:"phone",b:"☎"},{a:"Pi",b:"Π"},{a:"pi",b:"π"},{a:"pitchfork",b:"⋔"},{a:"piv",b:"ϖ"},{a:"planck",b:"ℏ"},{a:"planckh",b:"ℎ"},{a:"plankv",b:"ℏ"},{a:"plusacir",b:"⨣"},{a:"plusb",b:"⊞"},{a:"pluscir",b:"⨢"},{a:"plus",b:"+"},{a:"plusdo",b:"∔"},{a:"plusdu",b:"⨥"},{a:"pluse",b:"⩲"},{a:"PlusMinus",b:"±"},{a:"plusmn",b:"±"},{a:"plussim",b:"⨦"},{a:"plustwo",b:"⨧"},{a:"pm",b:"±"},{a:"Poincareplane",b:"ℌ"},{a:"pointint",b:"⨕"},{a:"popf",b:"𝕡"},{a:"Popf",b:"ℙ"},{a:"pound",b:"£"},{a:"prap",b:"⪷"},{a:"Pr",b:"⪻"},{a:"pr",b:"≺"},{a:"prcue",b:"≼"},{a:"precapprox",b:"⪷"},{a:"prec",b:"≺"},{a:"preccurlyeq",b:"≼"},{a:"Precedes",b:"≺"},{a:"PrecedesEqual",b:"⪯"},{a:"PrecedesSlantEqual",b:"≼"},{a:"PrecedesTilde",b:"≾"},{a:"preceq",b:"⪯"},{a:"precnapprox",b:"⪹"},{a:"precneqq",b:"⪵"},{a:"precnsim",b:"⋨"},{a:"pre",b:"⪯"},{a:"prE",b:"⪳"},{a:"precsim",b:"≾"},{a:"prime",b:"′"},{a:"Prime",b:"″"},{a:"primes",b:"ℙ"},{a:"prnap",b:"⪹"},{a:"prnE",b:"⪵"},{a:"prnsim",b:"⋨"},{a:"prod",b:"∏"},{a:"Product",b:"∏"},{a:"profalar",b:"⌮"},{a:"profline",b:"⌒"},{a:"profsurf",b:"⌓"},{a:"prop",b:"∝"},{a:"Proportional",b:"∝"},{a:"Proportion",b:"∷"},{a:"propto",b:"∝"},{a:"prsim",b:"≾"},{a:"prurel",b:"⊰"},{a:"Pscr",b:"𝒫"},{a:"pscr",b:"𝓅"},{a:"Psi",b:"Ψ"},{a:"psi",b:"ψ"},{a:"puncsp",b:" "},{a:"Qfr",b:"𝔔"},{a:"qfr",b:"𝔮"},{a:"qint",b:"⨌"},{a:"qopf",b:"𝕢"},{a:"Qopf",b:"ℚ"},{a:"qprime",b:"⁗"},{a:"Qscr",b:"𝒬"},{a:"qscr",b:"𝓆"},{a:"quaternions",b:"ℍ"},{a:"quatint",b:"⨖"},{a:"quest",b:"?"},{a:"questeq",b:"≟"},{a:"quot",b:'"'},{a:"QUOT",b:'"'},{a:"rAarr",b:"⇛"},{a:"race",b:"∽̱"},{a:"Racute",b:"Ŕ"},{a:"racute",b:"ŕ"},{a:"radic",b:"√"},{a:"raemptyv",b:"⦳"},{a:"rang",b:"⟩"},{a:"Rang",b:"⟫"},{a:"rangd",b:"⦒"},{a:"range",b:"⦥"},{a:"rangle",b:"⟩"},{a:"raquo",b:"»"},{a:"rarrap",b:"⥵"},{a:"rarrb",b:"⇥"},{a:"rarrbfs",b:"⤠"},{a:"rarrc",b:"⤳"},{a:"rarr",b:"→"},{a:"Rarr",b:"↠"},{a:"rArr",b:"⇒"},{a:"rarrfs",b:"⤞"},{a:"rarrhk",b:"↪"},{a:"rarrlp",b:"↬"},{a:"rarrpl",b:"⥅"},{a:"rarrsim",b:"⥴"},{a:"Rarrtl",b:"⤖"},{a:"rarrtl",b:"↣"},{a:"rarrw",b:"↝"},{a:"ratail",b:"⤚"},{a:"rAtail",b:"⤜"},{a:"ratio",b:"∶"},{a:"rationals",b:"ℚ"},{a:"rbarr",b:"⤍"},{a:"rBarr",b:"⤏"},{a:"RBarr",b:"⤐"},{a:"rbbrk",b:"❳"},{a:"rbrace",b:"}"},{a:"rbrack",b:"]"},{a:"rbrke",b:"⦌"},{a:"rbrksld",b:"⦎"},{a:"rbrkslu",b:"⦐"},{a:"Rcaron",b:"Ř"},{a:"rcaron",b:"ř"},{a:"Rcedil",b:"Ŗ"},{a:"rcedil",b:"ŗ"},{a:"rceil",b:"⌉"},{a:"rcub",b:"}"},{a:"Rcy",b:"Р"},{a:"rcy",b:"р"},{a:"rdca",b:"⤷"},{a:"rdldhar",b:"⥩"},{a:"rdquo",b:"”"},{a:"rdquor",b:"”"},{a:"rdsh",b:"↳"},{a:"real",b:"ℜ"},{a:"realine",b:"ℛ"},{a:"realpart",b:"ℜ"},{a:"reals",b:"ℝ"},{a:"Re",b:"ℜ"},{a:"rect",b:"▭"},{a:"reg",b:"®"},{a:"REG",b:"®"},{a:"ReverseElement",b:"∋"},{a:"ReverseEquilibrium",b:"⇋"},{a:"ReverseUpEquilibrium",b:"⥯"},{a:"rfisht",b:"⥽"},{a:"rfloor",b:"⌋"},{a:"rfr",b:"𝔯"},{a:"Rfr",b:"ℜ"},{a:"rHar",b:"⥤"},{a:"rhard",b:"⇁"},{a:"rharu",b:"⇀"},{a:"rharul",b:"⥬"},{a:"Rho",b:"Ρ"},{a:"rho",b:"ρ"},{a:"rhov",b:"ϱ"},{a:"RightAngleBracket",b:"⟩"},{a:"RightArrowBar",b:"⇥"},{a:"rightarrow",b:"→"},{a:"RightArrow",b:"→"},{a:"Rightarrow",b:"⇒"},{a:"RightArrowLeftArrow",b:"⇄"},{a:"rightarrowtail",b:"↣"},{a:"RightCeiling",b:"⌉"},{a:"RightDoubleBracket",b:"⟧"},{a:"RightDownTeeVector",b:"⥝"},{a:"RightDownVectorBar",b:"⥕"},{a:"RightDownVector",b:"⇂"},{a:"RightFloor",b:"⌋"},{a:"rightharpoondown",b:"⇁"},{a:"rightharpoonup",b:"⇀"},{a:"rightleftarrows",b:"⇄"},{a:"rightleftharpoons",b:"⇌"},{a:"rightrightarrows",b:"⇉"},{a:"rightsquigarrow",b:"↝"},{a:"RightTeeArrow",b:"↦"},{a:"RightTee",b:"⊢"},{a:"RightTeeVector",b:"⥛"},{a:"rightthreetimes",b:"⋌"},{a:"RightTriangleBar",b:"⧐"},{a:"RightTriangle",b:"⊳"},{a:"RightTriangleEqual",b:"⊵"},{a:"RightUpDownVector",b:"⥏"},{a:"RightUpTeeVector",b:"⥜"},{a:"RightUpVectorBar",b:"⥔"},{a:"RightUpVector",b:"↾"},{a:"RightVectorBar",b:"⥓"},{a:"RightVector",b:"⇀"},{a:"ring",b:"˚"},{a:"risingdotseq",b:"≓"},{a:"rlarr",b:"⇄"},{a:"rlhar",b:"⇌"},{a:"rlm",b:"‏"},{a:"rmoustache",b:"⎱"},{a:"rmoust",b:"⎱"},{a:"rnmid",b:"⫮"},{a:"roang",b:"⟭"},{a:"roarr",b:"⇾"},{a:"robrk",b:"⟧"},{a:"ropar",b:"⦆"},{a:"ropf",b:"𝕣"},{a:"Ropf",b:"ℝ"},{a:"roplus",b:"⨮"},{a:"rotimes",b:"⨵"},{a:"RoundImplies",b:"⥰"},{a:"rpar",b:")"},{a:"rpargt",b:"⦔"},{a:"rppolint",b:"⨒"},{a:"rrarr",b:"⇉"},{a:"Rrightarrow",b:"⇛"},{a:"rsaquo",b:"›"},{a:"rscr",b:"𝓇"},{a:"Rscr",b:"ℛ"},{a:"rsh",b:"↱"},{a:"Rsh",b:"↱"},{a:"rsqb",b:"]"},{a:"rsquo",b:"’"},{a:"rsquor",b:"’"},{a:"rthree",b:"⋌"},{a:"rtimes",b:"⋊"},{a:"rtri",b:"▹"},{a:"rtrie",b:"⊵"},{a:"rtrif",b:"▸"},{a:"rtriltri",b:"⧎"},{a:"RuleDelayed",b:"⧴"},{a:"ruluhar",b:"⥨"},{a:"rx",b:"℞"},{a:"Sacute",b:"Ś"},{a:"sacute",b:"ś"},{a:"sbquo",b:"‚"},{a:"scap",b:"⪸"},{a:"Scaron",b:"Š"},{a:"scaron",b:"š"},{a:"Sc",b:"⪼"},{a:"sc",b:"≻"},{a:"sccue",b:"≽"},{a:"sce",b:"⪰"},{a:"scE",b:"⪴"},{a:"Scedil",b:"Ş"},{a:"scedil",b:"ş"},{a:"Scirc",b:"Ŝ"},{a:"scirc",b:"ŝ"},{a:"scnap",b:"⪺"},{a:"scnE",b:"⪶"},{a:"scnsim",b:"⋩"},{a:"scpolint",b:"⨓"},{a:"scsim",b:"≿"},{a:"Scy",b:"С"},{a:"scy",b:"с"},{a:"sdotb",b:"⊡"},{a:"sdot",b:"⋅"},{a:"sdote",b:"⩦"},{a:"searhk",b:"⤥"},{a:"searr",b:"↘"},{a:"seArr",b:"⇘"},{a:"searrow",b:"↘"},{a:"sect",b:"§"},{a:"semi",b:";"},{a:"seswar",b:"⤩"},{a:"setminus",b:"∖"},{a:"setmn",b:"∖"},{a:"sext",b:"✶"},{a:"Sfr",b:"𝔖"},{a:"sfr",b:"𝔰"},{a:"sfrown",b:"⌢"},{a:"sharp",b:"♯"},{a:"SHCHcy",b:"Щ"},{a:"shchcy",b:"щ"},{a:"SHcy",b:"Ш"},{a:"shcy",b:"ш"},{a:"ShortDownArrow",b:"↓"},{a:"ShortLeftArrow",b:"←"},{a:"shortmid",b:"∣"},{a:"shortparallel",b:"∥"},{a:"ShortRightArrow",b:"→"},{a:"ShortUpArrow",b:"↑"},{a:"shy",b:"­"},{a:"Sigma",b:"Σ"},{a:"sigma",b:"σ"},{a:"sigmaf",b:"ς"},{a:"sigmav",b:"ς"},{a:"sim",b:"∼"},{a:"simdot",b:"⩪"},{a:"sime",b:"≃"},{a:"simeq",b:"≃"},{a:"simg",b:"⪞"},{a:"simgE",b:"⪠"},{a:"siml",b:"⪝"},{a:"simlE",b:"⪟"},{a:"simne",b:"≆"},{a:"simplus",b:"⨤"},{a:"simrarr",b:"⥲"},{a:"slarr",b:"←"},{a:"SmallCircle",b:"∘"},{a:"smallsetminus",b:"∖"},{a:"smashp",b:"⨳"},{a:"smeparsl",b:"⧤"},{a:"smid",b:"∣"},{a:"smile",b:"⌣"},{a:"smt",b:"⪪"},{a:"smte",b:"⪬"},{a:"smtes",b:"⪬︀"},{a:"SOFTcy",b:"Ь"},{a:"softcy",b:"ь"},{a:"solbar",b:"⌿"},{a:"solb",b:"⧄"},{a:"sol",b:"/"},{a:"Sopf",b:"𝕊"},{a:"sopf",b:"𝕤"},{a:"spades",b:"♠"},{a:"spadesuit",b:"♠"},{a:"spar",b:"∥"},{a:"sqcap",b:"⊓"},{a:"sqcaps",b:"⊓︀"},{a:"sqcup",b:"⊔"},{a:"sqcups",b:"⊔︀"},{a:"Sqrt",b:"√"},{a:"sqsub",b:"⊏"},{a:"sqsube",b:"⊑"},{a:"sqsubset",b:"⊏"},{a:"sqsubseteq",b:"⊑"},{a:"sqsup",b:"⊐"},{a:"sqsupe",b:"⊒"},{a:"sqsupset",b:"⊐"},{a:"sqsupseteq",b:"⊒"},{a:"square",b:"□"},{a:"Square",b:"□"},{a:"SquareIntersection",b:"⊓"},{a:"SquareSubset",b:"⊏"},{a:"SquareSubsetEqual",b:"⊑"},{a:"SquareSuperset",b:"⊐"},{a:"SquareSupersetEqual",b:"⊒"},{a:"SquareUnion",b:"⊔"},{a:"squarf",b:"▪"},{a:"squ",b:"□"},{a:"squf",b:"▪"},{a:"srarr",b:"→"},{a:"Sscr",b:"𝒮"},{a:"sscr",b:"𝓈"},{a:"ssetmn",b:"∖"},{a:"ssmile",b:"⌣"},{a:"sstarf",b:"⋆"},{a:"Star",b:"⋆"},{a:"star",b:"☆"},{a:"starf",b:"★"},{a:"straightepsilon",b:"ϵ"},{a:"straightphi",b:"ϕ"},{a:"strns",b:"¯"},{a:"sub",b:"⊂"},{a:"Sub",b:"⋐"},{a:"subdot",b:"⪽"},{a:"subE",b:"⫅"},{a:"sube",b:"⊆"},{a:"subedot",b:"⫃"},{a:"submult",b:"⫁"},{a:"subnE",b:"⫋"},{a:"subne",b:"⊊"},{a:"subplus",b:"⪿"},{a:"subrarr",b:"⥹"},{a:"subset",b:"⊂"},{a:"Subset",b:"⋐"},{a:"subseteq",b:"⊆"},{a:"subseteqq",b:"⫅"},{a:"SubsetEqual",b:"⊆"},{a:"subsetneq",b:"⊊"},{a:"subsetneqq",b:"⫋"},{a:"subsim",b:"⫇"},{a:"subsub",b:"⫕"},{a:"subsup",b:"⫓"},{a:"succapprox",b:"⪸"},{a:"succ",b:"≻"},{a:"succcurlyeq",b:"≽"},{a:"Succeeds",b:"≻"},{a:"SucceedsEqual",b:"⪰"},{a:"SucceedsSlantEqual",b:"≽"},{a:"SucceedsTilde",b:"≿"},{a:"succeq",b:"⪰"},{a:"succnapprox",b:"⪺"},{a:"succneqq",b:"⪶"},{a:"succnsim",b:"⋩"},{a:"succsim",b:"≿"},{a:"SuchThat",b:"∋"},{a:"sum",b:"∑"},{a:"Sum",b:"∑"},{a:"sung",b:"♪"},{a:"sup1",b:"¹"},{a:"sup2",b:"²"},{a:"sup3",b:"³"},{a:"sup",b:"⊃"},{a:"Sup",b:"⋑"},{a:"supdot",b:"⪾"},{a:"supdsub",b:"⫘"},{a:"supE",b:"⫆"},{a:"supe",b:"⊇"},{a:"supedot",b:"⫄"},{a:"Superset",b:"⊃"},{a:"SupersetEqual",b:"⊇"},{a:"suphsol",b:"⟉"},{a:"suphsub",b:"⫗"},{a:"suplarr",b:"⥻"},{a:"supmult",b:"⫂"},{a:"supnE",b:"⫌"},{a:"supne",b:"⊋"},{a:"supplus",b:"⫀"},{a:"supset",b:"⊃"},{a:"Supset",b:"⋑"},{a:"supseteq",b:"⊇"},{a:"supseteqq",b:"⫆"},{a:"supsetneq",b:"⊋"},{a:"supsetneqq",b:"⫌"},{a:"supsim",b:"⫈"},{a:"supsub",b:"⫔"},{a:"supsup",b:"⫖"},{a:"swarhk",b:"⤦"},{a:"swarr",b:"↙"},{a:"swArr",b:"⇙"},{a:"swarrow",b:"↙"},{a:"swnwar",b:"⤪"},{a:"szlig",b:"ß"},{a:"Tab",b:"\t"},{a:"target",b:"⌖"},{a:"Tau",b:"Τ"},{a:"tau",b:"τ"},{a:"tbrk",b:"⎴"},{a:"Tcaron",b:"Ť"},{a:"tcaron",b:"ť"},{a:"Tcedil",b:"Ţ"},{a:"tcedil",b:"ţ"},{a:"Tcy",b:"Т"},{a:"tcy",b:"т"},{a:"tdot",b:"⃛"},{a:"telrec",b:"⌕"},{a:"Tfr",b:"𝔗"},{a:"tfr",b:"𝔱"},{a:"there4",b:"∴"},{a:"therefore",b:"∴"},{a:"Therefore",b:"∴"},{a:"Theta",b:"Θ"},{a:"theta",b:"θ"},{a:"thetasym",b:"ϑ"},{a:"thetav",b:"ϑ"},{a:"thickapprox",b:"≈"},{a:"thicksim",b:"∼"},{a:"ThickSpace",b:"  "},{a:"ThinSpace",b:" "},{a:"thinsp",b:" "},{a:"thkap",b:"≈"},{a:"thksim",b:"∼"},{a:"THORN",b:"Þ"},{a:"thorn",b:"þ"},{a:"tilde",b:"˜"},{a:"Tilde",b:"∼"},{a:"TildeEqual",b:"≃"},{a:"TildeFullEqual",b:"≅"},{a:"TildeTilde",b:"≈"},{a:"timesbar",b:"⨱"},{a:"timesb",b:"⊠"},{a:"times",b:"×"},{a:"timesd",b:"⨰"},{a:"tint",b:"∭"},{a:"toea",b:"⤨"},{a:"topbot",b:"⌶"},{a:"topcir",b:"⫱"},{a:"top",b:"⊤"},{a:"Topf",b:"𝕋"},{a:"topf",b:"𝕥"},{a:"topfork",b:"⫚"},{a:"tosa",b:"⤩"},{a:"tprime",b:"‴"},{a:"trade",b:"™"},{a:"TRADE",b:"™"},{a:"triangle",b:"▵"},{a:"triangledown",b:"▿"},{a:"triangleleft",b:"◃"},{a:"trianglelefteq",b:"⊴"},{a:"triangleq",b:"≜"},{a:"triangleright",b:"▹"},{a:"trianglerighteq",b:"⊵"},{a:"tridot",b:"◬"},{a:"trie",b:"≜"},{a:"triminus",b:"⨺"},{a:"TripleDot",b:"⃛"},{a:"triplus",b:"⨹"},{a:"trisb",b:"⧍"},{a:"tritime",b:"⨻"},{a:"trpezium",b:"⏢"},{a:"Tscr",b:"𝒯"},{a:"tscr",b:"𝓉"},{a:"TScy",b:"Ц"},{a:"tscy",b:"ц"},{a:"TSHcy",b:"Ћ"},{a:"tshcy",b:"ћ"},{a:"Tstrok",b:"Ŧ"},{a:"tstrok",b:"ŧ"},{a:"twixt",b:"≬"},{a:"twoheadleftarrow",b:"↞"},{a:"twoheadrightarrow",b:"↠"},{a:"Uacute",b:"Ú"},{a:"uacute",b:"ú"},{a:"uarr",b:"↑"},{a:"Uarr",b:"↟"},{a:"uArr",b:"⇑"},{a:"Uarrocir",b:"⥉"},{a:"Ubrcy",b:"Ў"},{a:"ubrcy",b:"ў"},{a:"Ubreve",b:"Ŭ"},{a:"ubreve",b:"ŭ"},{a:"Ucirc",b:"Û"},{a:"ucirc",b:"û"},{a:"Ucy",b:"У"},{a:"ucy",b:"у"},{a:"udarr",b:"⇅"},{a:"Udblac",b:"Ű"},{a:"udblac",b:"ű"},{a:"udhar",b:"⥮"},{a:"ufisht",b:"⥾"},{a:"Ufr",b:"𝔘"},{a:"ufr",b:"𝔲"},{a:"Ugrave",b:"Ù"},{a:"ugrave",b:"ù"},{a:"uHar",b:"⥣"},{a:"uharl",b:"↿"},{a:"uharr",b:"↾"},{a:"uhblk",b:"▀"},{a:"ulcorn",b:"⌜"},{a:"ulcorner",b:"⌜"},{a:"ulcrop",b:"⌏"},{a:"ultri",b:"◸"},{a:"Umacr",b:"Ū"},{a:"umacr",b:"ū"},{a:"uml",b:"¨"},{a:"UnderBar",b:"_"},{a:"UnderBrace",b:"⏟"},{a:"UnderBracket",b:"⎵"},{a:"UnderParenthesis",b:"⏝"},{a:"Union",b:"⋃"},{a:"UnionPlus",b:"⊎"},{a:"Uogon",b:"Ų"},{a:"uogon",b:"ų"},{a:"Uopf",b:"𝕌"},{a:"uopf",b:"𝕦"},{a:"UpArrowBar",b:"⤒"},{a:"uparrow",b:"↑"},{a:"UpArrow",b:"↑"},{a:"Uparrow",b:"⇑"},{a:"UpArrowDownArrow",b:"⇅"},{a:"updownarrow",b:"↕"},{a:"UpDownArrow",b:"↕"},{a:"Updownarrow",b:"⇕"},{a:"UpEquilibrium",b:"⥮"},{a:"upharpoonleft",b:"↿"},{a:"upharpoonright",b:"↾"},{a:"uplus",b:"⊎"},{a:"UpperLeftArrow",b:"↖"},{a:"UpperRightArrow",b:"↗"},{a:"upsi",b:"υ"},{a:"Upsi",b:"ϒ"},{a:"upsih",b:"ϒ"},{a:"Upsilon",b:"Υ"},{a:"upsilon",b:"υ"},{a:"UpTeeArrow",b:"↥"},{a:"UpTee",b:"⊥"},{a:"upuparrows",b:"⇈"},{a:"urcorn",b:"⌝"},{a:"urcorner",b:"⌝"},{a:"urcrop",b:"⌎"},{a:"Uring",b:"Ů"},{a:"uring",b:"ů"},{a:"urtri",b:"◹"},{a:"Uscr",b:"𝒰"},{a:"uscr",b:"𝓊"},{a:"utdot",b:"⋰"},{a:"Utilde",b:"Ũ"},{a:"utilde",b:"ũ"},{a:"utri",b:"▵"},{a:"utrif",b:"▴"},{a:"uuarr",b:"⇈"},{a:"Uuml",b:"Ü"},{a:"uuml",b:"ü"},{a:"uwangle",b:"⦧"},{a:"vangrt",b:"⦜"},{a:"varepsilon",b:"ϵ"},{a:"varkappa",b:"ϰ"},{a:"varnothing",b:"∅"},{a:"varphi",b:"ϕ"},{a:"varpi",b:"ϖ"},{a:"varpropto",b:"∝"},{a:"varr",b:"↕"},{a:"vArr",b:"⇕"},{a:"varrho",b:"ϱ"},{a:"varsigma",b:"ς"},{a:"varsubsetneq",b:"⊊︀"},{a:"varsubsetneqq",b:"⫋︀"},{a:"varsupsetneq",b:"⊋︀"},{a:"varsupsetneqq",b:"⫌︀"},{a:"vartheta",b:"ϑ"},{a:"vartriangleleft",b:"⊲"},{a:"vartriangleright",b:"⊳"},{a:"vBar",b:"⫨"},{a:"Vbar",b:"⫫"},{a:"vBarv",b:"⫩"},{a:"Vcy",b:"В"},{a:"vcy",b:"в"},{a:"vdash",b:"⊢"},{a:"vDash",b:"⊨"},{a:"Vdash",b:"⊩"},{a:"VDash",b:"⊫"},{a:"Vdashl",b:"⫦"},{a:"veebar",b:"⊻"},{a:"vee",b:"∨"},{a:"Vee",b:"⋁"},{a:"veeeq",b:"≚"},{a:"vellip",b:"⋮"},{a:"verbar",b:"|"},{a:"Verbar",b:"‖"},{a:"vert",b:"|"},{a:"Vert",b:"‖"},{a:"VerticalBar",b:"∣"},{a:"VerticalLine",b:"|"},{a:"VerticalSeparator",b:"❘"},{a:"VerticalTilde",b:"≀"},{a:"VeryThinSpace",b:" "},{a:"Vfr",b:"𝔙"},{a:"vfr",b:"𝔳"},{a:"vltri",b:"⊲"},{a:"vnsub",b:"⊂⃒"},{a:"vnsup",b:"⊃⃒"},{a:"Vopf",b:"𝕍"},{a:"vopf",b:"𝕧"},{a:"vprop",b:"∝"},{a:"vrtri",b:"⊳"},{a:"Vscr",b:"𝒱"},{a:"vscr",b:"𝓋"},{a:"vsubnE",b:"⫋︀"},{a:"vsubne",b:"⊊︀"},{a:"vsupnE",b:"⫌︀"},{a:"vsupne",b:"⊋︀"},{a:"Vvdash",b:"⊪"},{a:"vzigzag",b:"⦚"},{a:"Wcirc",b:"Ŵ"},{a:"wcirc",b:"ŵ"},{a:"wedbar",b:"⩟"},{a:"wedge",b:"∧"},{a:"Wedge",b:"⋀"},{a:"wedgeq",b:"≙"},{a:"weierp",b:"℘"},{a:"Wfr",b:"𝔚"},{a:"wfr",b:"𝔴"},{a:"Wopf",b:"𝕎"},{a:"wopf",b:"𝕨"},{a:"wp",b:"℘"},{a:"wr",b:"≀"},{a:"wreath",b:"≀"},{a:"Wscr",b:"𝒲"},{a:"wscr",b:"𝓌"},{a:"xcap",b:"⋂"},{a:"xcirc",b:"◯"},{a:"xcup",b:"⋃"},{a:"xdtri",b:"▽"},{a:"Xfr",b:"𝔛"},{a:"xfr",b:"𝔵"},{a:"xharr",b:"⟷"},{a:"xhArr",b:"⟺"},{a:"Xi",b:"Ξ"},{a:"xi",b:"ξ"},{a:"xlarr",b:"⟵"},{a:"xlArr",b:"⟸"},{a:"xmap",b:"⟼"},{a:"xnis",b:"⋻"},{a:"xodot",b:"⨀"},{a:"Xopf",b:"𝕏"},{a:"xopf",b:"𝕩"},{a:"xoplus",b:"⨁"},{a:"xotime",b:"⨂"},{a:"xrarr",b:"⟶"},{a:"xrArr",b:"⟹"},{a:"Xscr",b:"𝒳"},{a:"xscr",b:"𝓍"},{a:"xsqcup",b:"⨆"},{a:"xuplus",b:"⨄"},{a:"xutri",b:"△"},{a:"xvee",b:"⋁"},{a:"xwedge",b:"⋀"},{a:"Yacute",b:"Ý"},{a:"yacute",b:"ý"},{a:"YAcy",b:"Я"},{a:"yacy",b:"я"},{a:"Ycirc",b:"Ŷ"},{a:"ycirc",b:"ŷ"},{a:"Ycy",b:"Ы"},{a:"ycy",b:"ы"},{a:"yen",b:"¥"},{a:"Yfr",b:"𝔜"},{a:"yfr",b:"𝔶"},{a:"YIcy",b:"Ї"},{a:"yicy",b:"ї"},{a:"Yopf",b:"𝕐"},{a:"yopf",b:"𝕪"},{a:"Yscr",b:"𝒴"},{a:"yscr",b:"𝓎"},{a:"YUcy",b:"Ю"},{a:"yucy",b:"ю"},{a:"yuml",b:"ÿ"},{a:"Yuml",b:"Ÿ"},{a:"Zacute",b:"Ź"},{a:"zacute",b:"ź"},{a:"Zcaron",b:"Ž"},{a:"zcaron",b:"ž"},{a:"Zcy",b:"З"},{a:"zcy",b:"з"},{a:"Zdot",b:"Ż"},{a:"zdot",b:"ż"},{a:"zeetrf",b:"ℨ"},{a:"ZeroWidthSpace",b:"​"},{a:"Zeta",b:"Ζ"},{a:"zeta",b:"ζ"},{a:"zfr",b:"𝔷"},{a:"Zfr",b:"ℨ"},{a:"ZHcy",b:"Ж"},{a:"zhcy",b:"ж"},{a:"zigrarr",b:"⇝"},{a:"zopf",b:"𝕫"},{a:"Zopf",b:"ℤ"},{a:"Zscr",b:"𝒵"},{a:"zscr",b:"𝓏"},{a:"zwj",b:"‍"},{a:"zwnj",b:"‌"}])),na=p(Zu,function(a){return p(So,"&"+a+";",p(Wb,a,Lc))},Ru(Ct(In))),Ac=pa,Dc=f(function(a,r,n){for(;;){if(!r.b)return q(n);var t=r.a,e=r.b;switch(t){case"0":a=b=a-1,r=u=e,n=i=n;continue;case"1":var b=a-1,u=e,i=n+p(Nb,16,a);a=b,r=u,n=i;continue;case"2":b=a-1,u=e,i=n+2*p(Nb,16,a);a=b,r=u,n=i;continue;case"3":b=a-1,u=e,i=n+3*p(Nb,16,a);a=b,r=u,n=i;continue;case"4":b=a-1,u=e,i=n+4*p(Nb,16,a);a=b,r=u,n=i;continue;case"5":b=a-1,u=e,i=n+5*p(Nb,16,a);a=b,r=u,n=i;continue;case"6":b=a-1,u=e,i=n+6*p(Nb,16,a);a=b,r=u,n=i;continue;case"7":b=a-1,u=e,i=n+7*p(Nb,16,a);a=b,r=u,n=i;continue;case"8":b=a-1,u=e,i=n+8*p(Nb,16,a);a=b,r=u,n=i;continue;case"9":b=a-1,u=e,i=n+9*p(Nb,16,a);a=b,r=u,n=i;continue;case"a":b=a-1,u=e,i=n+10*p(Nb,16,a);a=b,r=u,n=i;continue;case"b":b=a-1,u=e,i=n+11*p(Nb,16,a);a=b,r=u,n=i;continue;case"c":b=a-1,u=e,i=n+12*p(Nb,16,a);a=b,r=u,n=i;continue;case"d":b=a-1,u=e,i=n+13*p(Nb,16,a);a=b,r=u,n=i;continue;case"e":b=a-1,u=e,i=n+14*p(Nb,16,a);a=b,r=u,n=i;continue;case"f":b=a-1,u=e,i=n+15*p(Nb,16,a);a=b,r=u,n=i;continue;default:return x(Rt(t)+" is not a valid hexadecimal character.")}}}),Sc=ha,Pa=p(xu,function(a){r=hc(a);var r,n,a=Pe(r)?x("Empty strings are not valid hexadecimal strings."):(n=p(Xe,"-",r)?(n=p(So,v,jt(It(r))),p(Ro,Qn,d(Dc,Rn(n)-1,n,0))):d(Dc,Ue(r)-1,It(r),0),p(nu,function(a){return p(Qt," ",$(['"'+r+'"',"is not a valid hexadecimal string because",a]))},n));return(a.$?Nu:i)(a.a)},Ru(Ct(function(a){a=ue(a);return 48<=a&&a<=57||65<=a&&a<=70||97<=a&&a<=102}))),Ca={$:1},Cc=$n,_c=wn,Tc=l(function(a,r){return{aR:r.aR+(a-r.b),c:r.c,d:r.d,b:a,bp:r.bp,a:r.a}}),Rc=vn,Nc=mn,jc=l(function(a,r){var n;return d(Nc,101,a,r)||d(Nc,69,a,r)?o(n=d(Nc,43,n=a+1,r)||d(Nc,45,n,r)?n+1:n,n=p(Rc,n,r))?-n:n:a}),Ic=l(function(a,r){return d(Nc,46,a,r)?p(jc,p(Rc,a+1,r),r):p(jc,a,r)}),Oc=V(function(a,r,n,t,e){var b=t.a,t=t.b;return 1===r.$?p(C,!0,p(Au,e,r.a)):(r=r.a,o(n,b)?p(C,g(e.b,n)<0,p(Au,e,a)):d(ku,!0,r(t),p(Tc,b,e)))}),Vc=U(function(a,r,n,t,e,b){var u=e.a,i=p(Ic,u,b.a);return i<0?p(C,!0,h(vc,b.bp,b.aR-(i+b.b),a,b.c)):o(b.b,i)?p(C,!1,p(Au,b,r)):o(u,i)?s(Oc,a,n,b.b,e,b):1===t.$?p(C,!0,p(Au,b,a)):(r=t.a,1===(u=Iu(d(Be,b.b,i,b.a))).$?p(C,!0,p(Au,b,a)):d(ku,!0,r(u.a),p(Tc,i,b)))}),Qr=l(function(a,r){return t={aM:x(r),aX:a,aY:x(r),a0:x(r),a2:q(n),cb:r,bb:x(r)},function(a){var r,n;return d(Nc,48,a.b,a.a)?(n=(r=a.b+1)+1,d(Nc,120,r,a.a)?s(Oc,t.cb,t.a0,n,p(_c,n,a.a),a):d(Nc,111,r,a.a)?s(Oc,t.cb,t.bb,n,d(Cc,8,n,a.a),a):d(Nc,98,r,a.a)?s(Oc,t.cb,t.aM,n,d(Cc,2,n,a.a),a):P(Vc,t.cb,t.aX,t.a2,t.aY,{a:r,b:0},a)):P(Vc,t.cb,t.aX,t.a2,t.aY,d(Cc,10,a.b,a.a),a)};var t}),Ra=p(Qr,Ca,Ca),wa=(va=R($([p(T,p(_,i(n),Wu(function(a){return"x"===a||"X"===a})),Pa),p(T,p(_,i(n),Cu(ye("0"))),Ra)])),p(T,p(_,i(n),Wu(ye("#"))),p(Zu,p(au,Nt,Rt),va))),Uc=p(T,p(_,i(n),Wu(ye("&"))),R($([p(_,pc(na),ba),p(_,pc(wa),ba),i("&")]))),Bc=l(function(a,n){return p(Ku,v,function(r){return R($([p(Zu,function(a){return Gu(p(k,a,r))},n),r.b?i(Pu(ie(r))):Nu("expecting at least one "+a)]))})}),Aa=p(Zu,Qt(""),p(Bc,"attribute value",R($([Ru(Ct(function(a){return!dc(a)&&'"'!==a&&"'"!==a&&"="!==a&&"<"!==a&&">"!==a&&"`"!==a&&"&"!==a})),Uc])))),ca=R($([p(T,p(_,p(_,i(n),Wu(ye("="))),Cu(dc)),R($([Aa,Ot('"'),Ot("'")]))),i("")])),Ta=p(T,p(T,i(Ai),p(_,ka,Cu(dc))),p(_,ca,Cu(dc))),Hc=Ec(Ta),zc=p(Zu,hc,Ru(p(_,Wu(Vn),Cu(function(a){return Vn(a)||"-"===a})))),Pc=p(Zu,p(au,Qt(""),function(a){return{$:0,a:a}}),p(Bc,"text element",R($([Ru(Ct(function(a){return"<"!==a&&"&"!==a})),Uc]))));function Gc(){return R($([Pc,wc,Fc()]))}function Fc(){return p(xu,function(a){var r=a.a,a=a.b;return qc(r)?p(_,p(_,i(d(lc,r,a,v)),R($([Wu(ye("/")),i(0)]))),Wu(ye(">"))):p(T,p(_,i(p(lc,r,a)),Wu(ye(">"))),p(_,Ec(pc(Gc())),gc(r)))},p(T,p(T,p(_,i(Ai),Wu(ye("<"))),p(_,zc,Cu(dc))),Hc))}function Mc(a){return Pe(a)?q(v):p(oi,p(Bc,"node",vs),a)}function Jc(a){var n=l(function(a,r){switch(a.$){case 0:return Z(a.a,r);case 1:return d(rb,n,r,a.c);default:return r}});return d(rb,n,"",a)}function Wc(a){return p(mb,a,p(Ro,Jc,Mc(a)))}function Yc(a){switch(a.$){case 0:return"ar";case 1:return"de";case 2:return"en";case 3:return"es";case 4:return"et";case 5:return"fr";case 6:return"id";case 7:return"nl";case 8:return"pl";case 9:return"ru";case 10:return"sr";case 11:return"tr";case 12:return"zh";default:return a.a}}function Xc(a){return p(y,p(y,p(y,nt,Pe),p(ys,lb,a)),function(a){return a.bI})}function Zc(a){return a<0?-a:a}function Kc(a){return a.C}function Qc(a){return a.b}function as(a){return j(p(Qt," ",p(A,Un,p(Lo,Qc,a))))}function rs(a){return p(Xs,uo(a),function(a){return p(Ys,$([p(Ws,"wheel",e(Ms)),p(Ws,"touchstart",e(Ms)),j("scroll-cancel-overlay")]),v)})}function ns(a){return w(Cr(a))}function ts(a){return p(af,a.a,a.b)}function es(a){return p(A,rf,a)}function bs(a){return p(Bs,"href",/^javascript:/i.test((a=a).replace(/\s/g,""))?"":a)}function us(a){var r=a.a;return p(mf,v,$([p(hf,$([bs(a.b),vf("_blank"),$f(r)]),$([p(gf,$([j("icon--"+hc(r))]),v)]))]))}function is(a){return a.b?E(a.a):L}function os(a){return p(y,is,xf(a))}function cs(a){return p(Bs,"src",_r(a))}function ss(a){return a?p(I,$([j("project-menu-close-target"),Vf(ho)]),v):O("")}function fs(a){for(;;){if(!a.b)return v;var r,n;if(a.a.b)return r=(n=a.a).b,p(k,p(k,n.a,p(Vi,is,n=a.b)),fs(p(k,r,p(Vi,jt,n))));a=n=a.b}}function ls(a){var r=a.az,n=a.bD,a=a.a$;return d(ul,m(el,{cK:!1}),$([p(Sf,"padding-bottom",p(uc,"{0}%",$([bl(a/n*100)])))]),r)}function ps(a){return a.a}function ds(a){switch(a.$){case 0:return bl(a.a)+"px";case 1:return bl(a.a)+"%";case 2:return bl(a.a)+"rem";case 3:return bl(a.a)+"em";case 4:return bl(a.a)+"vh";case 5:return bl(a.a)+"vw";default:return""}}function hs(a){var r=a.b,n=a.c;return Z(function(a){return Z(jl(a),$([p(Ws,"mousedown",p(Re,Al,_l)),p(Ws,"touchstart",p(Re,Al,_l)),p(Ws,"keydown",p(cb,Tl,Dl))]))}(r),$([as($([{a:"elm-gallery-transition",b:o(r,L)}])),p(Sf,"transform",function(a){var r=a.a,n=a.b,a=a.c;return h(Il,a,r,1===n.$?0:(a=n.a).b.am-a.a.am,0)}(a)),p(Sf,"width",Kt(100*n)+"%"),Hs("elm-gallery-focusable"),p(Sr,"tabIndex",Kt(0))]))}function gs(a){var r=p(Qt," ",p(Lo,Xe("#"),zl(a.cU)));return p(mf,v,$([p(Af,$([j("section-instagram-image"),cs(a.b7)]),v),p(wl,v,$([O(p(uc,"{0} - {1}",$([a.c$,r])))]))]))}function ms(a){return p(I,$([j("project-sections")]),p(A,F(Jl,a.E,a.aP,a.t,a.m,a.J,a.y,a._,a.Z),a.aw))}var vs=Gc(),$s=(Gc=function(){return vs},Fc()),ws=(Fc=function(){return $s},l(function(a,r){a=p(Wb,Yc(a),r);return 1===a.$?"":Wc(a.a)})),ys=f(function(a,r,n){r=p(ws,r,n);return""===r?p(ws,a,n):r}),ks=p(y,Rn,Do(mu)),xs=f(function(a,r,n){var t=n.a,e=n.b,n=xt(r);if(n.$){for(var b={a:fc(r),b:p(Xc,a,r),c:6<ks(r)};;){if(b.b){if(b.c){if(16===b.a.$&&"concept_design"===b.a.a)break;return{a:p(k,p(sc,r,"Invalid section: You can't have text AND more than 6 images"),t),b:e}}if(16===b.a.$&&"concept_design"===b.a.a)break;return{a:p(k,p(cc,r,e),t),b:e?0:1}}if(b.c){if(16===b.a.$&&"concept_design"===b.a.a)break;return{a:p(k,{$:2,a:r},t),b:e}}if(16===b.a.$&&"concept_design"===b.a.a)break;return{a:p(k,p(ic,r,e),t),b:e?0:1}}return{a:p(k,{$:4,a:r},t),b:e}}return{a:p(k,p(oc,n.a,r),t),b:e}}),qs=l(function(a,r){return d(y,ie,Un,d(re,xs(a),{a:v,b:0},r))}),Es=l(function(a,r){return p(Ki,a,r)}),Ls=l(function(a,r){return{$:0,a:a,b:r}}),As=l(function(a,r){var n=r.a,t=r.b,e=r.c;switch(a.$){case 0:return qt(r);case 1:return Lt(r);case 2:return d(_o,n,E(p(Ls,b=a.a,b)),e);case 3:var b=a.a,u=l(function(a,r){return p(Ls,r.a,a)});return d(_o,n,p(Ao,u(b),t),e);default:return t.$?r:100<(b=(u=t.a).a).am-(u=u.b).am?qt(r):g(b.am-u.am,-100)<0?Lt(r):d(_o,n,L,e)}}),Ds=f(function(a,r,n){return{$:2,a:a,b:r,c:n}}),Ss={$:2},Cs=l(function(a,r){var n=a.c1,a=a.br;return{br:{a$:a.a$,bD:a.bD},c1:{a$:n.a$,ab:p(qe,n.am,r.c1.c1.ab),ac:p(qe,n.an,r.c1.c1.ac),bD:n.bD,am:n.am,an:n.an}}}),_s=f(function(r,a,n){var t,e=n;switch(a.$){case 0:return a.b.$?{a:m(e,{x:d(qb,a.a,Ss,e.x)}),b:N}:(i=a.b.a.c1,t=a.b.a.br,{a:m(e,{x:d(qb,a.a,{$:0,a:a.b.a.bT},e.x),c1:p(Cs,{br:t,c1:i},n)}),b:N});case 1:var b=a.a,u=a.b;return{a:m(e,{ae:$t(e.ae)}),b:p(ib,function(a){return r(d(Ds,$t(e.ae),b,u))},yo(300))};case 2:var i,b=a.b,u=a.c;return o(e.ae,a.a)?{a:m(e,{c1:m(i=e.c1,{c1:m(i.c1,{a$:u,bD:b})})}),b:Lb(p(A,_b(r),_n(e.x)))}:{a:n,b:N};default:return o(e.ad,a.a)?{a:n,b:Lb(p(A,_b(r),_n(e.x)))}:{a:n,b:N}}}),Ts={$:0},Rs=l(function(a,r){return g(a,r)<0?a:r}),Ns=l(function(a,r){var n=r;return mt(r)?r:Zc(n.C-n.O)<.05&&Zc(n.P)<.05?p(xo,n.O,r):(r=p(Rs,a,32)/1e3,m(n,{C:n.C+(a=n.P+r*((n.O-n.C)*n.cO-n.P*n.bO))*r,P:a}))}),js=l(function(a,r){return m(r,{O:a})}),Is=tn,Os=l(function(a,r){var n,t=r;switch(a.$){case 0:return{a:r,b:N};case 1:var e=a.a,e=p(Rb,p(Ns,e,t.am),p(Ns,e,t.an)),b=f(function(a,r,n){return!ju(a-n+(r-n))});return d(b,Kc(t.am),Kc(e.am),wt(e.am))&&d(b,Kc(t.an),Kc(e.an),wt(e.an))?{a:p(Rb,p(xo,wt(t.am),t.am),p(xo,wt(t.an),t.an)),b:N}:{a:e,b:p(ib,function(a){return Ts},p(Is,Kc(e.am),Kc(e.an)))};default:return a.a.$?{a:r,b:N}:(b=a.a.a.b2,e=a.a.a.cV,n=uo(r)?js:xo,{a:p(Rb,p(js,e.am,p(n,b.am,t.am)),p(js,e.an,p(n,b.an,t.an))),b:N})}}),Vs=l(function(a,r){var n=a.am,a=a.an,t=r.c1;return m(r,{c1:{br:{a$:t.br.a$,bD:t.br.bD},c1:{a$:t.c1.a$,ab:p(qe,n,t.c1.ab),ac:p(qe,a,t.c1.ac),bD:t.c1.bD,am:n,an:a}}})}),Ea=l(function(a,r){switch(a.$){case 0:return{a:r,b:N};case 1:return a.b.$?{a:r,b:N}:{a:m(r,{_:d(qb,n=a.a,a.b.a,r._)}),b:N};case 2:return a.a.$?{a:r,b:N}:{a:m(r,{L:E(i=a.a.a)}),b:p(Wo,p(y,vt,Ro(function(a){return a.cI})),$([{$:7,a:i.b6}]))};case 4:return a.b.$?{a:r,b:N}:(i=a.b.a,{a:m(r,{Z:d(qb,jo(n=a.a),i,r.Z)}),b:N});case 3:return a.a.$?{a:r,b:N}:(c=p(A,zi,p(Vi,xt,i=a.a.a)),o=Pn(p(A,St,p(Co,{$:7,a:"hassection"},r.L))),b=p(Es,o,r.T),e=p(A,function(a){return{a:jo(a.b6),b:(a=ks(a),d(_o,0,L,a))}},p(Lo,p(y,Se(6),ks),i)),t=Xn(p(A,function(a){return{a:jo(a.b6),b:a}},i)),u=p(qs,r.E,p(Io,t,p(Co,{$:7,a:"hassection"},r.L))),i=p(A,function(a){return a.b6},p(Eo,Do({$:7,a:"hasblock"}),i)),s=(f=p(Tb,zn,Gt(b))).a,f=f.b,{a:m(r,{aq:t,y:Xn(e),m:s,T:b,aw:u}),b:Lb(yt($([$([f]),p(A,function(a){return p(Bo,vo(a),a)},i),p(A,function(a){return p(Vo,$o(a),a)},c)])))});case 5:var n=a.a,t=a.b;return{a:m(r,{y:d(Qb,jo(n),Ao(As(t)),r.y)}),b:N};case 6:return{a:m(r,{y:d(Qb,jo(n=a.a),Ao(qt),r.y)}),b:N};case 7:return{a:m(r,{y:d(Qb,jo(n=a.a),Ao(Lt),r.y)}),b:N};case 9:var e=a.a;return{a:m(r,{m:p(Vs,{am:e.a,an:e.b},r.m)}),b:N};case 10:return{a:m(r,{aP:a.a}),b:N};case 8:var b=d(_s,zn,a.a,r.m),u=b.b;return{a:m(r,{m:b.a}),b:u};case 11:var i=a.a,o=p(Eb,i,r.T),c=p(Eb,i,r.J),t=d(ko,zn,Gt(o),r.m),s=t.a,f=t.b;return{a:m(r,{J:c,m:s,T:o}),b:f};case 12:return{a:m(r,{N:!r.N}),b:N};case 13:n=a.a,e=l(function(a,r){a=a.c1;return{b2:{am:a.am,an:a.an},cV:{am:a.am,an:p(qe,0,r.bT.an-35)}}});return{a:r,b:p(To,dt,p(zo,e,n))};case 14:return{a:m(r,{t:p(Rb,p(xo,wt((b=r.t).am),b.am),p(xo,wt(b.an),b.an))}),b:N};default:u=p(Os,a.a,r.t),i=u.b;return{a:m(r,{t:u.a}),b:p(To,dt,i)}}}),Us=Ga,Bs=l(function(a,r){return p(Dr,a,Us(r))}),j=Bs("className"),I=w("div"),Hs=Bs("id"),zs=kr,Ps=xr,Gs=qr,Fs=Er,Ms={$:14},Js=Lr,Ws=l(function(a,r){return p(Js,a,{$:0,a:r})}),Ys=w("span"),O=$r,Xs=l(function(a,r){return a?r(0):O("")}),Da=l(function(a,r){var n=r.b;return{a:a(r.a),b:n}}),Zs=p(y,p(y,n,Xn),A(Da(Yc))),Ks=w("h3"),Qs=w("h4"),af=l(function(a,r){return p(Sr,function(a){return/^(on|formAction$)/i.test(a)?"data-"+a:a}(a),_r(r))}),rf=function(a){switch(a.$){case 1:var r=a.c;return d(ns,a.a,p(A,ts,a.b),es(r));case 0:return O(a.a);default:return O("")}},nf=l(function(a,r){a=p(Wb,Yc(a),r);return 1===a.$?v:function(a){return p(mb,$([O("Html could not be parsed")]),p(Ro,es,Mc(a)))}(a.a)}),tf=l(function(a,r){return O(p(ws,a,r))}),ef=l(function(a,r){var n=p(So,$([O("")]),p(Ao,nf(a),function(a){a=a.cC;return kt(p(ob,p(b,"kirra_credits",fu),a))}(r)));return p(I,$([j("project-credits")]),$([p(Ks,v,$([p(tf,a,r.w)])),p(Qs,v,$([p(tf,a,Zs($([{a:lb,b:"Team"},{a:db,b:"专业团队"}])))])),p(I,$([j("project-credits-text")]),n)]))}),bf=w("article"),uf=w("aside"),of=w("h1"),cf=w("h2"),sf=w("p"),ff=l(function(a,r){return{a:r.a,b:a(r.b)}}),lf=l(function(a,r){return 1===a.$?r:r+(":"+Kt(a.a))}),pf=f(function(a,r,n){return 1===r.$?n:Z(n,Z(a,r.a))}),df=w("ul"),hf=w("a"),gf=w("i"),mf=w("li"),vf=Bs("target"),$f=Bs("title"),wf=f(function(a,r,n){return $([p(I,$([j("project-social")]),$([p(sf,v,$([p(tf,a,Zs($([{a:lb,b:"Share"},{a:db,b:"分享内容"}])))])),p(df,$([j("project-social__links")]),p(A,us,(r=$([zi(function(a){return d(pf,"#",a.b1,d(pf,"?",a.cE,Z(p(lf,a.cB,Z(a.cD?"https://":"http://",a.b5)),a.cA)))}(r)),zi(d(ys,lb,a,n.w))]),p(A,ff(we(r)),$([{a:"Twitter",b:uc("http://twitter.com/share?text={0}&url={1}")},{a:"LinkedIn",b:uc("https://www.linkedin.com/shareArticle?mini=true&url={0}&title={1}")},{a:"Facebook",b:uc("http://www.facebook.com/sharer.php?u={0}&t={1}")},{a:"Weibo",b:uc("http://service.weibo.com/share/share.php?url={0}&title={1}")}])))))]))])}),yf=f(function(a,r,n){var t=p(So,$([O("")]),p(Ao,nf(a),function(a){a=a.cC;return kt(p(ob,p(b,"extended",fu),a))}(n)));return p(I,$([j("project-information")]),$([p(bf,$([j("project-information__content")]),$([p(of,v,$([p(tf,a,n.w)])),p(cf,v,$([p(tf,a,n.bz)])),p(I,v,p(nf,a,n.bI))])),p(uf,$([j("project-information__aside")]),Z(d(wf,a,r,n),t))]))}),kf=l(function(a,r){return 0!==r.$?L:(r=r.a,p(Wb,function(a){switch(a.$){case 0:return"avatar";case 1:return"thumbnail";case 2:return"card";case 3:return"small";case 4:return"medium";case 5:return"large";case 6:return"cinemascope";default:return a.a}}(a),r))}),xf=l(function(a,r){return p(Vi,p(y,kf(a),function(a){return a.ci}),p(Do,mu,r))}),qf=l(function(a,r){return!p(Wb,a,r).$}),Ef=l(function(a,r){return p(qf,a,r)}),Lf=f(function(a,r,n){r=p(os,r,n),n=p(os,{$:7,a:"loading"},n);return 1===n.$||p(Ef,n.a,a)?r:n}),Af=w("img"),Df=w("section"),Sf=Ar,Cf=l(function(a,r){return a.$?O(""):r(a.a)}),_f=l(function(a,r){return p(Cf,d(Lf,a,{$:7,a:"masthead-image"},r),function(a){return p(Df,$([j("project-masthead")]),$([p(Af,$([p(Ws,"load",e({$:11,a:a})),cs(a),p(Sf,"position","absolute"),p(Sf,"left","0"),p(Sf,"top","0"),p(Sf,"width","100%"),p(Sf,"height","100%"),p(Sf,"object-fit","cover"),p(af,"decoding","async")]),v)]))})}),Tf=c(function(a,r,n,t){return{ao:n,aA:t,au:r,aJ:a}}),Rf={$:0},Nf=f(function(a,r,n){return uo(a)||p(So,r,n)}),jf=f(function(a,r,n){return p(a,n.c1,p(Yo,function(a){return a.$?L:E(a.a)},p(Wb,r,n.x)))}),If=f(function(a,n,r){var t=l(function(a,r){a=a.c1;return g(a.an+n.aJ,r.an+r.a$)<0&&0<g(a.an+a.a$-n.ao,r.an)&&g(a.am+n.aA,r.am+r.bD)<0&&0<g(a.am+a.bD-n.au,r.am)});return d(jf,l(function(a,r){return p(Ao,t(a),r)}),a,r)}),Of=w("menu"),Vf=function(a){return p(Ws,"click",e(a))},Uf=Wc,Bf=c(function(a,r,n,t){var r=d(ys,lb,r,t.w);return""===r?O(""):p(mf,$([as($([{a:"current-submenu__item",b:o(r=r,a)}])),Vf({$:13,a:St(t.b6)}),p(Sf,"transition-delay",p(uc,"{0}ms",$([Kt(30*(n+1))])))]),$([O(Uf(r))]))}),Hf=f(function(a,r,n){return is(p(Lo,function(a){return d(Nf,r,!1,d(If,St(a.b6),h(Tf,100,0,100,0),n))},a))}),zf=V(function(a,r,n,t,e){var b=p(Do,{$:7,a:"hassection"},r),u=p(So,"",p(Ao,p(y,p(y,Uf,p(ys,lb,a)),function(a){return a.w}),d(Hf,b,n,t))),n=d(Nf,n,!1,d(If,"project-content",h(Tf,100,0,100,0),t)),t=n&&e?p(Sf,"transform",p(uc,"translate3d(0, {0}px, 0)",$([Kt(30*-(Rn(b)-1))]))):p(Sf,"",""),i=Vf(n?ho:Rf);return p(Of,$([i,t,as($([{a:"project-menu",b:!0},{a:"collapsed",b:n},{a:"show-menu-items",b:e}]))]),$([p(of,$([j("project-menu__title")]),$([p(tf,a,r.w)])),p(I,$([j("project-menu__submenu")]),$([p(Af,$([j("project-menu__submenu__icon"),cs("/lib/images/menu-icon.svg")]),v),p(I,v,$([p(sf,$([j("current-section__title")]),$([O(u)])),p(df,v,p(be,p(Bf,u,a),b))]))]))]))}),Pf=f(function(a,r,n){for(;;){if(a<=0)return n;if(!r.b)return n;var t=r.a;a=a-1,r=r.b,n=p(k,t,n)}}),Gf=l(function(a,r){return ie(d(Pf,a,r,v))}),Ff=f(function(a,r,n){if(0<r){var t,e,b,u,i,o={a:r,b:n};a:for(;;){r:for(;;){if(!o.b.b)return n;if(!o.b.b.b){if(1===o.a)break a;break}switch(o.a){case 1:break a;case 2:var c=o.b;return $([c.a,c.b.a]);case 3:if(o.b.b.b.b)return $([(c=o.b).a,(t=c.b).a,t.b.a]);break r;default:if(o.b.b.b.b&&o.b.b.b.b.b)return i=(u=(b=(e=(t=o.b).b).b).b).b,p(k,t.a,p(k,e.a,p(k,b.a,p(k,u.a,1e3<a?p(Gf,r-4,i):d(Ff,a+1,r-4,i)))));break r}}return n}return $([o.b.a])}return v}),Mf=l(function(a,r){return d(Ff,0,a,r)}),Jf=f(function(a,n,r){var t=l(function(a,r){a=a.c1;return 0<g(a.an-n.ao+a.a$,r.an)&&0<g(a.am-n.au+a.bD,r.am)});return d(jf,l(function(a,r){return p(Ao,t(a),r)}),a,r)}),Wf=c(function(a,r,n,t){a=d(Nf,a,!0,d(Jf,n,h(Tf,100,0,100,0),r));return p(Af,$([p(Ws,"load",e({$:11,a:n})),as($([{a:t,b:!0},{a:"project-image",b:!0},{a:"project-image-animate",b:a}])),Hs(n),cs(n),p(af,"loading","lazy"),p(af,"decoding","async")]),v)}),Yf=c(function(a,r,n,t){a=d(Lf,a,{$:7,a:"project-image-tiny"},t);return a.$?O(""):h(Wf,r,n,a.a,"depiction")}),Xf=V(function(a,r,n,t,e){return p(hf,$([bs(e.cA),j("project-related-item")]),$([h(Yf,r,n,t,e),p(Qs,v,$([p(tf,a,e.w)]))]))}),Zf=V(function(a,r,n,t,e){return e.b?p(I,$([j("project-related")]),$([p(Qs,v,$([O("Related projects")])),p(I,$([j("project-related-items")]),p(A,h(Xf,a,r,n,t),p(Mf,3,e)))])):O("")}),Kf=$([{$:7,a:"masthead-image"},{$:7,a:"project-image-medium"},{$:7,a:"project-image-small"},{$:7,a:"project-image"},{$:7,a:"project-image"},{$:7,a:"project-image-medium"}]),Qf=l(function(a,r){for(;;){if(a<=0)return r;if(!r.b)return r;a=a-1,r=r.b}}),al=f(function(a,r,n){for(;;){if(!r.b)return ie(n);var t=a,e=p(Qf,a,r),b=p(k,p(Mf,a,r),n);a=t,r=e,n=b}}),rl=l(function(a,r){return fs(d(al,a,r,v))}),nl=p(y,A(function(a){return a.ci}),Do(mu)),tl=f(function(a,r,n){r=p(kf,r,n),n=p(kf,{$:7,a:"loading"},n);return 1===n.$||p(Ef,n.a,a)?r:n}),el={aT:L,b3:E({bJ:!1,cS:!1}),cK:!0,cM:!1},bl=xa,ul=qn,il=c(function(a,r,n,t){a=d(Nf,a,!0,d(Jf,n.az,h(Tf,100,0,100,0),r));return p(I,$([as($([{a:t,b:!0},{a:"project-video",b:!0},{a:"project-image-animate",b:a}])),Hs(n.az)]),$([p(zs,ls,n)]))}),ol=c(function(a,r,n,t){var e=p(So,"",d(tl,a,{$:7,a:"project-image-small"},t));switch(t.$){case 0:return h(Wf,r,n,e,"concept-design-image");case 1:return h(il,r,n,t.a,"concept-design-image");default:return O("")}}),cl=l(function(a,r){return p(I,$([j("concept-design-text")]),$([p(Ks,$([j("concept")]),$([p(tf,a,r.w)])),p(I,v,p(nf,a,r.bI))]))}),sl=c(function(a,r,n,t){return p(I,$([j("concept-design-image-column")]),p(A,d(ol,a,r,n),t))}),fl=V(function(a,r,n,t,e){var b,u=p(Mf,8,nl(e));return u.b&&u.b.b&&u.b.b.b?(b=u,p(I,$([j("concept-design-block-wide")]),$([p(cl,a,e),p(I,$([j("concept-design-image-columns")]),p(A,d(sl,r,n,t),p(rl,2,b)))]))):(b=u,p(I,$([j("concept-design-block")]),$([p(cl,a,e),p(I,$([j("concept-design-images")]),p(A,d(ol,r,n,t),b))])))}),ll=U(function(a,r,n,t,e,b){return $([p(I,$([j("concept-design-title-wrapper")]),$([p(cf,$([j("concept-design-title")]),$([p(tf,a,b.w)]))])),p(I,$([j("concept-design-blocks")]),p(A,h(fl,a,r,n,t),p(Vi,function(a){return p(Wb,jo(a.b6),e)},p(Do,{$:7,a:"hasblock"},b))))])}),pl=l(function(a,r){return{$:5,a:a,b:r}}),dl=w("button"),hl=l(function(a,r){return{a$:(n={a$:{$:4,a:a},b6:"image-gallery-"+Uo(r),cY:500,bD:{$:1,a:100}}).a$,b6:n.b6,cY:n.cY,bD:n.bD};var n}),gl=Ga,ml=l(function(a,r){return p(Dr,a,gl(r))})("disabled"),vl=yr,$l=l(function(a,r){return p(I,$([p(Sf,"background-image","url("+a+")"),p(Sf,"background-size",r?"contain":"cover"),j("elm-gallery-image")]),v)}),wl=w("small"),yl=l(function(a,r){return d(ns,"style",v,$([O("\n            #"+a.b6+(" {\n                position: relative;\n                width: "+ds(a.bD)+(";\n                height:\n                    "+ds(a.a$)+(";\n                overflow: hidden;\n            }\n\n            #"+a.b6+(" ul {\n                position: absolute;\n                display: flex;\n                height: 100%;\n                left: 0;\n                top: 0;\n                padding: 0;\n                margin: 0;\n                z-index: 1;\n                outline: none;\n            }\n\n            #"+a.b6+(" ul:hover {\n                cursor: move;\n                cursor: grab;\n                cursor: -moz-grab;\n                cursor: -webkit-grab;\n            }\n\n            #"+a.b6+(" ul:active {\n                cursor: grabbing;\n                cursor: -moz-grabbing;\n                cursor: -webkit-grabbing;\n            }\n\n            #"+a.b6+(" button {\n                background-color: transparent;\n                border-radius: 0;\n                border: 0;\n                cursor: pointer;\n                z-index: 2;\n                transform: translate3d(0, 0, 0);\n            }\n\n            #"+a.b6+(" button:hover {\n                opacity: .85;\n            }\n\n            #"+a.b6+(" .elm-gallery-previous,\n            #"+a.b6+(" .elm-gallery-next {\n                position: absolute;\n                top: 24%;\n                width: 4rem;\n                height: 50%;\n            }\n\n            #"+a.b6+(" .elm-gallery-next {\n                right: 0rem;\n            }\n\n            #"+a.b6+(" .elm-gallery-previous {\n                left: 0rem;\n            }\n\n            #"+a.b6+(" .elm-gallery-previous:disabled,\n            #"+a.b6+(" .elm-gallery-next:disabled {\n                opacity: 0.2;\n                cursor: not-allowed;\n            }\n\n            #"+a.b6+(" .elm-gallery-close:after,\n            #"+a.b6+(" .elm-gallery-close:before,\n            #"+a.b6+(" .elm-gallery-previous:after,\n            #"+a.b6+(" .elm-gallery-previous:before,\n            #"+a.b6+(" .elm-gallery-next:after,\n            #"+a.b6+(" .elm-gallery-next:before {\n                content: '';\n                position: absolute;\n                width: 2rem;\n                height: 4px;\n                background-color: white;\n            }\n\n            #"+a.b6+(" .elm-gallery-next:before {\n                top: calc(50% - 1rem);\n                right: 1rem;\n                transform: rotate(45deg);\n            }\n\n            #"+a.b6+(" .elm-gallery-next:after {\n                top: calc(50% + .3rem);\n                right: 1rem;\n                transform: rotate(-45deg);\n            }\n\n            #"+a.b6+(" .elm-gallery-previous:before {\n                top: calc(50% - 1rem);\n                left: 1rem;\n                transform: rotate(-45deg);\n            }\n\n            #"+a.b6+(" .elm-gallery-previous:after {\n                top: calc(50% + .3rem);\n                left: 1rem;\n                transform: rotate(45deg);\n            }\n\n            #"+a.b6+(" .elm-gallery-itemcontainer {\n                position: relative;\n                width: 100%;\n                height: 100%;\n            }\n\n            #"+a.b6+(" .elm-gallery-image {\n                position: absolute;\n                background-position: center center;\n                background-repeat: no-repeat;\n                width: 100%;\n                height: 100%;\n            }\n\n\n            #"+a.b6+(" .elm-gallery-transition {\n                transition: transform "+Kt(a.cY))))))))))))))))))))))))))))+"ms ease;\n            }\n            ")]))}),kl={$:0},xl={$:1},ql=l(function(a,r){return t=(n=a).a,n=a.c,p(I,v,$([p(dl,$([Vf(kl),j("elm-gallery-next"),$f("next"),ml(o(t,n-1))]),v),p(dl,$([Vf(xl),j("elm-gallery-previous"),$f("previous"),ml(!t)]),v)]));var n,t}),El=function(a){return wr(Cr(a))}("ul"),Ll=f(function(a,r,n){var t=n.b;return{a:n.a,b:p(I,$([as($([{a:"elm-gallery-itemcontainer",b:!0},{a:"elm-gallery-current",b:o(a,r)}]))]),$([t]))}}),Al=function(a){return{$:2,a:a}},Dl=p(b,"keyCode",su),Sl=l(function(a,r){return{am:a,an:r}}),Cl=l(function(a,r){return d(rb,b,r,a)}),_l=function(){var a=d(Ne,Sl,p(b,"pageX",p(Re,ke,fb)),p(b,"pageY",p(Re,ke,fb)));return lu($([a,p(Cl,$(["touches","0"]),a)]))}(),Tl=function(a){switch(a){case 37:return e(xl);case 39:return e(kl);default:return sb("Unknown key")}},Rl={$:4},Nl=l(function(a,r){return p(Js,a,{$:2,a:r})}),jl=function(a){return a.$?v:$([p(Nl,"mousemove",p(Re,function(a){return{a:{$:3,a:a},b:!0}},_l)),p(Nl,"touchmove",p(Re,function(a){return{a:{$:3,a:a},b:!0}},_l)),p(Ws,"mouseup",e(Rl)),p(Ws,"mouseleave",e(Rl)),p(Ws,"touchend",e(Rl)),p(Ws,"touchcancel",e(Rl))])},Il=c(function(a,r,n,t){return"translate3d("+bl(-r*(100/a))+("%, "+Kt(t)+("px, 0) translateX("+Kt(n)))+"px)"}),Ol=l(function(a,r){var n=a.a;return p(El,hs(a),p(be,Ll(n),r))}),Vl=c(function(a,r,n,t){var e=r.b;return p(I,$([Hs(a.b6)]),Z($([d(Ps,Ol,r,t),d(Ps,yl,a,e)]),p(A,ql(r),n)))}),Ul=f(function(a,r,n){function t(a){return Rn(u(a))}var e=l(function(a,r){return o(r-1,a)||o(r,a)||o(r+1,a)}),b=f(function(a,r,n){return p(e,a,r)?p($l,n,0):p(I,v,v)}),u=function(n){return d(y,be(l(function(a,r){return{a:r,b:d(b,a,ps(n),r)}})),Vi(kf({$:7,a:"project-image"})),nl(r))},a=a<768?50:80,n=p(Wb,jo(r.b6),n);return 1===n.$?v:(n=n.a,$([p(vl,pl(r.b6),h(Vl,p(hl,a,r.b6),n,v,u(n))),p(I,$([j("section-gallery-nav")]),$([p(dl,$([j("section-gallery-previous"),Vf({$:7,a:r.b6}),ml(!ps(n))]),$([p(Af,$([cs("/lib/images/gallery-arrow-left.svg")]),v)])),p(wl,v,$([O(function(a){return p(uc,"{0} / {1}",p(A,Kt,$([1+ps(a),t(a)])))}(n))])),p(dl,$([j("section-gallery-next"),Vf({$:6,a:r.b6}),ml(o(ps(n),t(n)-1))]),$([p(Af,$([cs("/lib/images/gallery-arrow-right.svg")]),v)]))]))]))}),Bl=U(function(a,r,n,t,e,b){var u=b.b,i=p(So,"",d(tl,a,b.a,u)),o=p(uc,"img-{0} {1}",$([Kt(e),r?"column-right":"column-left"]));switch(u.$){case 0:return h(Wf,n,t,i,o);case 1:return h(il,n,t,u.a,o);default:return O("")}}),Hl=U(function(a,r,n,t,e,b){return $([p(I,$([j("section-images-wrapper")]),p(be,h(Bl,a,r,n,t),d(ne,Ai,e,nl(b))))])}),zl=function(a){return $(a.trim().split(/\s+/g))},Pl=c(function(a,r,n,t){r=p(Wb,r,t);return 1===r.$?v:(t=r.a,$([p(I,$([j("section-instagram-title")]),$([p(cf,v,$([p(tf,a,n.w)]))])),p(I,$([j("gradient")]),v),p(I,$([j("section-instagram-feed")]),$([p(df,v,p(A,gs,t))]))]))}),Gl=$([{$:7,a:"project-image-medium"},{$:7,a:"project-image-small"},{$:7,a:"project-image-tiny"},{$:7,a:"default"},{$:7,a:"default"},{$:7,a:"project-image-small"}]),Fl=l(function(a,r){return $([p(I,$([j("section-text-content")]),$([p(I,$([j("section-text-content-sticky")]),$([p(cf,v,$([p(tf,a,r.w)])),p(Ks,v,$([p(tf,a,r.bz)])),p(I,v,p(nf,a,r.bI))]))]))])}),Ml=U(function(a,r,n,t,e,b){return yt($([p(Fl,a,b),P(Hl,r,n,t,e,Gl,b)]))}),Jl=z(function(n,t,e,b,u,i,o,c,s){return a=function(){switch(s.$){case 0:var a=s.a,r=s.b;return{a:a.b6,b:"section-text-images "+(r?"column-right":"column-left"),c:P(Ml,n,u,r,e,b,a)};case 1:a=s.a,r=s.b;return{a:a.b6,b:"section-images",c:P(Hl,u,r,e,b,Kf,a)};case 2:return{a:(a=s.a).b6,b:"section-gallery",c:d(Ul,t,a,i)};case 3:return{a:(a=s.b).b6,b:"section-instagram",c:h(Pl,n,s.a,a,o)};case 4:return{a:(a=s.a).b6,b:"section-concept-design",c:P(ll,n,u,e,b,c,a)};default:return{a:(a=s.a).b6,b:"section-error",c:$([p(of,v,$([O(s.b)]))])}}}(),r=a.a,f=a.c,p(Df,$([j(a.b+" project-section"),Hs(St(r))]),f);var a,r,f});!function(a){r.Elm?function a(r,n){for(var t in n)t in r?"init"==t?ua(6):a(r[t],n[t]):r[t]=n[t]}(r.Elm,a):r.Elm=a}({Main:{init:ra({ca:p(y,function(a){return{a:{aP:a.aP,Z:$b,aq:$b,y:$b,J:wb,m:p(Tb,zn,v).a,T:Pn($(["project-content"])),_:$b,E:a.a7,L:L,t:jb,aw:v,N:!1,bC:a.bC},b:p(Pi,Hn,a.bC.cA)}},function(a){return p(mb,gb,p(ob,hb,a))}),cQ:function(a){return Gi($([p(eo,zn,a.m),no(pt),a.N?go(mo(ho)):io,gt(l(function(a,r){return{$:10,a:a}})),p(Fi,dt,uo(a.t)?po(bo):io)]))},c_:Ea,c0:function(a){var r=p(Io,a.aq,p(Co,wu,a.L)),n=a.L;return 1===n.$?p(I,$([j("loading-spinner-wrapper")]),$([p(I,$([j("loading-spinner")]),v)])):(n=n.a,p(I,$([as($([{a:"-is-scrolling",b:uo(a.t)}]))]),$([d(Ps,_f,a.J,n),p(I,$([Hs("project-content"),j("project-content")]),$([h(Gs,yf,a.E,a.bC,n),p(zs,ms,a),d(Ps,ef,a.E,n),P(Fs,Zf,a.E,a.J,a.t,a.m,r)])),P(Fs,zf,a.E,n,a.t,a.m,a.N),p(zs,ss,a.N),p(zs,rs,a.t)])))}})(du)(0)}})}(this);